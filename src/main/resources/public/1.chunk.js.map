{"version":3,"sources":["webpack:////home/konstantin/svn/rota-client/src/app/admin/users/edit-user.component.css","webpack:////home/konstantin/svn/rota-client/src/app/admin/users/edit-user.component.html","webpack:////home/konstantin/svn/rota-client/src/app/admin/users/edit-user.component.ts","webpack:////home/konstantin/svn/rota-client/src/app/admin/users/edit-user/edit-special-interests.css","webpack:////home/konstantin/svn/rota-client/src/app/admin/users/edit-user/edit-special-interests.html","webpack:////home/konstantin/svn/rota-client/src/app/admin/users/edit-user/edit-special-interests.ts","webpack:////home/konstantin/svn/rota-client/src/app/admin/users/user-list.component.css","webpack:////home/konstantin/svn/rota-client/src/app/admin/users/user-list.component.html","webpack:////home/konstantin/svn/rota-client/src/app/admin/users/user-list.component.ts","webpack:////home/konstantin/svn/rota-client/src/app/admin/users/users.component.css","webpack:////home/konstantin/svn/rota-client/src/app/admin/users/users.component.html","webpack:////home/konstantin/svn/rota-client/src/app/admin/users/users.component.ts","webpack:////home/konstantin/svn/rota-client/src/app/admin/users/users.module.ts","webpack:////home/konstantin/svn/rota-client/src/app/model/tabbed.component.ts?fc07"],"names":[],"mappings":"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","file":"1.chunk.js","sourcesContent":["exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".iconLocker {\\n    font-size: 26px;\\n    cursor: pointer;\\n}\\n\\n.iconHover:hover{\\n    cursor: pointer;\\n    color: #02d1a5;\\n}\\n\\n.loading-indication {\\n    top:10%;\\n    margin-left: auto;\\n    margin-right: auto;\\n}\\n\\n.invisible {\\n    display: none;\\n}\\n\\n.info {\\n    text-align: center;\\n    background-color: #F7DD83;\\n    padding: 15px;\\n}\\n\\n.colorBadge{\\n    display: inline-block;\\n    border-radius: 50%;\\n    width: 1em;\\n    height: 1em; \\n}\\n\\n.displayColorBadge {\\n    margin-top: 1em;\\n    margin-bottom: 1em;\\n}\\n\\n.example-form {\\n    width: 300px;\\n}\\n\\n.form-fields-container {\\n    position: absolute;\\n    width: 300px;\\n}\\n\\n.tmSelectInput {\\n    border: 1px solid #3673AA;\\n    padding: 0.25em;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/konstantin/svn/rota-client/src/app/admin/users/edit-user.component.css\n// module id = ../../../../../src/app/admin/users/edit-user.component.css\n// module chunks = 1","module.exports = \"<div class=\\\"form-container\\\" style=\\\"margin-top:40px;\\\">\\n  <div [style.display]=\\\"loadingIndication\\\" style=\\\"position:fixed;top:0;right:0;bottom:0;left:0;background-color:white;opacity:0.8;z-index:99999;\\\">\\n    <mat-progress-spinner class=\\\"loading-indication\\\" [color]=\\\"color\\\" [mode]=\\\"mode\\\" [value]=\\\"value\\\" style=\\\"margin: 0 auto;position: relative; top: 50%;\\\">\\n    </mat-progress-spinner>\\n  </div>\\n  <div style=\\\"clear: both;\\\"></div>\\n  <form class=\\\"example-form\\\" (ngSubmit)=\\\"saveUser()\\\" [formGroup]=\\\"editUserForm\\\">\\n        <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" [disabled]=\\\"false\\\">Save</button>\\n        <button mat-raised-button color=\\\"primary\\\" type=\\\"button\\\" (click)='editSpecialInterestsUI()'>Specialities...</button>\\n        <div class=\\\"form-fields-container\\\" style=\\\"320px\\\">\\n            <div *ngFor=\\\"let qa of formColumn0; let i = index\\\">\\n          <!--  <dfcontrol [form]=\\\"editCheckListForm\\\" [question]=\\\"qa\\\"></dfcontrol> -->\\n                <div>\\n                    <ul>\\n                        <li>{{qa.label}}</li>\\n                            <div [ngSwitch]=\\\"qa.controlType\\\">\\n                                <input class=\\\"tmSelectInput\\\" matInput *ngSwitchCase=\\\"'textbox'\\\" [formControlName]=\\\"qa.key\\\"\\n                                    [id]=\\\"qa.key\\\" [type]=\\\"qa.type\\\" [(ngModel)]='qa.value'>\\n\\n                                <mat-select class=\\\"tmSelectInput\\\"\\n                                 *ngSwitchCase=\\\"'dropdown'\\\"\\n                                 [formControlName]='qa.key'\\n                                 [(ngModel)]=\\\"formColumn0[i].value\\\"\\n                                 (ngModelChange)=\\\"formValueChange(qa.key, $event)\\\">\\n                                    <mat-option *ngFor=\\\"let opt of formColumn0[i].options\\\" [value]=\\\"opt.value\\\">\\n                                    {{opt.value}}\\n                                    </mat-option>\\n                                </mat-select>\\n                            </div>\\n                    </ul>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"form-fields-container\\\" style=\\\"left:320px\\\">\\n            <div *ngFor=\\\"let qa of formColumn1; let i = index\\\">\\n          <!--  <dfcontrol [form]=\\\"editCheckListForm\\\" [question]=\\\"qa\\\"></dfcontrol> -->\\n                <div>\\n                    <ul>\\n                        <li>{{qa.label}}</li>\\n                            <div [ngSwitch]=\\\"qa.controlType\\\">\\n                                <mat-form-field *ngSwitchCase=\\\"'textbox'\\\">\\n                                    <input class=\\\"tmSelectInput\\\" matInput [formControlName]=\\\"qa.key\\\" [id]=\\\"qa.key\\\" [type]=\\\"qa.type\\\" [(ngModel)]='qa.value'>\\n                                </mat-form-field>\\n\\n                                <mat-select class=\\\"tmSelectInput\\\" *ngSwitchCase=\\\"'dropdown'\\\" [formControlName]='qa.key' [(ngModel)]=\\\"formColumn1[i].value\\\">\\n                                    <mat-option *ngFor=\\\"let opt of formColumn1[i].options\\\" [value]=\\\"opt.value\\\">\\n                                    {{opt.value}}\\n                                    </mat-option>\\n                                </mat-select>\\n                            </div>\\n                    </ul>\\n                </div>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"form-fields-container\\\" style=\\\"left: 640px\\\">\\n            <h5>Special Interests</h5>\\n            <multi-select-input-component\\n                [model]=\\\"specialitiesModel\\\"\\n                [items]=\\\"specialities\\\"\\n                [emptyMessage]=\\\"'No specialities selected'\\\">\\n            </multi-select-input-component>\\n\\n            <h5 style=\\\"margin-top: 2em;\\\">Consultants</h5>\\n            <multi-select-input-component style=\\\"margin-top: 40px;\\\"\\n                [model]=\\\"consultantsModel\\\"\\n                [items]=\\\"consultants\\\"\\n                [enabled]=\\\"consultantsEnabled\\\"\\n                [emptyMessage]=\\\"consultantsEmptyMessage\\\">\\n            </multi-select-input-component>\\n        </div>\\n\\n        <div class=\\\"form-fields-container\\\" style=\\\"left: 960px\\\">\\n            <h5>Working Days</h5>\\n            <multi-select-input-component\\n                [model]=\\\"weekDaysModel\\\"\\n                [items]=\\\"weekDays\\\"\\n                [listOnly]=\\\"true\\\"\\n                [height]='null'\\n                [emptyMessage]=\\\"''\\\">\\n            </multi-select-input-component>\\n        </div>\\n</form>\\n\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/konstantin/svn/rota-client/src/app/admin/users/edit-user.component.html\n// module id = ../../../../../src/app/admin/users/edit-user.component.html\n// module chunks = 1","import { MatSnackBar } from '@angular/material';\n\nimport { Component, Input, OnInit, OnChanges, HostListener, ElementRef, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Params }  from '@angular/router';\nimport 'rxjs/add/operator/switchMap';\nimport { MatSelectModule, MatProgressSpinnerModule, MatProgressSpinner } from '@angular/material';\nimport { FormControl, FormGroup, FormBuilder, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { LocalStorageService } from 'angular-2-local-storage';\nimport { MatDialog } from '@angular/material';\n\n/** Importing local components **/\nimport { UsersComponent } from './users.component';\nimport { EditSpecialInterestsDialog } from './edit-user/edit-special-interests';\n\n/** Importing local services */\nimport { UserService } from '../../service/user.service';\nimport { DynamicFormService} from  '../../service/dynamic-form.service';\nimport { ActivityService } from '../../service/activity.service';\nimport { QuestionBase, DropdownQuestion, TextboxQuestion } from '../../model/question-base';\n\n/** Importing models */\nimport { User } from '../../model/user';\nimport { Router } from '@angular/router';\n\n@Component({\n    selector: 'edit-user-component',\n    templateUrl: './edit-user.component.html',\n    styleUrls: ['./edit-user.component.css'],\n}) export class EditUserComponent {\n\n    /** used by the Progress Spinner widget */\n    public color = 'primary';\n    /** used by the Progress Spinner widget */\n    public mode = 'indeterminate';\n    /** used by the Progress Spinner widget */\n    public value = 50;\n\n    /** Tells whether the form is in a process of being saved to the backend. It is being used to\n     *  disable the *Save* button during that time. It goes on par with **loadingIndication** so\n     *  the *Save* button should be disabled while the loading indication is being displayed\n     */\n    public formDisabled = true;\n    /** Tells whether form fields contain cached data (what is displayed had been entered by the user\n     *  but is not yet saved to the backed). Currently not used, though you can rely on its value if\n     *  you need to. */\n    public isFormCached = false;\n    /** Tells whether loading indication should be displayed. In actuality this property's value gets\n     *  assigned to the CSS *display* property of the load widget. This means valid values are either\n     *  'none' (not displayed) or 'block' (displayed).\n     */\n    public loadingIndication = 'none';\n    public extraThingsVisibility: string = 'hidden';\n    public editUserForm: FormGroup;\n    public user: User;\n    /** Used to be used to control transitional animations. Not used currently and will probably get\n     *  phased out at some point. Don't rely on it.\n     */\n    public state = 'inactive';\n\n    /** The id of the entity being edited if any. When creating a user this property's value is 0 */\n    public userId: number = 0;\n    public driverColor: string = '';\n    public formFields: any[];\n    public formColumn0: any[] = [];\n    public formColumn1: any[] = [];\n    public form: any;\n    public consultants: any[] = [];\n    private specialities: Array<any> = [];\n    private specialitiesModel: Array<any> = [];\n    private consultantsModel: Array<any> = [];\n    public consultantsEmptyMessage = 'No consultants selected';\n    public consultantsEnabled = true;\n    public weekDays: any = [];\n    public weekDaysModel: any = [];\n    public specialInterests: any = [];\n\n    @ViewChild('consultantMulti') public consultantMulti: ElementRef;\n\n    constructor (private usersComponent: UsersComponent,\n        private route: ActivatedRoute,\n        private userService: UserService,\n        private formBuilder: FormBuilder,\n        public snackBar: MatSnackBar,\n        private router: Router,\n        private dynamicFormService: DynamicFormService,\n        private localStorageService:LocalStorageService,\n        private dialog: MatDialog){\n        this.createForm();\n    }\n\n    createForm(): void {\n        this.editUserForm = this.formBuilder.group({\n            code: new FormControl('', [Validators.pattern(/\\d\\d\\d\\d/)]),\n            firstName: new FormControl('', [Validators.required]),\n            lastName: new FormControl('', [Validators.required]),\n        });\n        this.form = this.formBuilder.group({\n            multi: {},\n        });\n    }\n\n    /** This method is going to be called everytime the component is displayed, so it makes sense\n     *  to use parameteres here to fetch data from the VehicleService\n     */\n    ngOnInit(): void {\n\n        this.getSpecialities();\n        this.getConsultants();\n        this.loadingIndication = 'block';\n\n        this.generateWeekDays();\n        this.route.params.subscribe(params => {\n            //this.state = 'inactive';\n            this.specialitiesModel.length = 0;\n            this.consultantsModel.length = 0;\n            if(params['id']) {\n                // Create a new tab in the parent component (it is visible at the top side of the\n                // page).\n                this.usersComponent.editUser(params['id']);\n\n                // Storing the id of the vehicle being edited in this instance so we can pass it back\n                // to the backend when updating\n                this.userId = params['id'];\n\n                // By setting 'activeUserId' to a value different than 0 we signal that the tab\n                // that was just opened is currently focused and if the user close it the application\n                // needs to go back one step in browser's history\n                this.usersComponent.activeId = params['id'];\n\n                // Fetch vehicle data from the VehicleService and populate the form with it\n                this.userService.getUser(params['id']).then(\n                    response => {\n                        //let users = response;\n                        let user = response;\n                        this.user = response;\n                        delete(user.id); //not part of form model\n                        delete(user.dateCreated); //not part of form model\n                        this.driverColor = user.color;\n                        delete(user.color);\n                        this.usersComponent.updateTabTitle(params['id'], user.firstName+\" \"+user.lastName);\n                        this.usersComponent.pushHistory(params['id']);\n                        this.unpackSpecialitiesModel(response);\n                        this.unpackConsultantsModel(response);\n                        this.unpackWorkingDays(user);\n                        this.scatterFormFields(response.form);\n                        //----------------------------\n                        this.editUserForm = this.dynamicFormService.toFormGroup(response.form);\n                        let formValues = this.dynamicFormService.toFormGroupValue(response.form);\n                        //this.changeDetector.detectChanges();\n                        ////this.qaPairs = checklist.qa;\n                        //this.editCheckListForm.setValue(formValues);\n                        //\n                        if(formValues.grade == 'Consultant') {\n                            this.consultantsEnabled = false;\n                            this.consultantsEmptyMessage = 'No consultants allowed';\n                        }\n                        this.editUserForm.setValue(formValues);\n                        //this.disableForm();\n                        //this.state = 'active';\n                        this.loadingIndication = 'none';\n                    }\n                );\n\n            } else {\n                let user = this.userService.getEmptyUser();\n                this.user = user;\n                this.unpackSpecialitiesModel(user);\n                this.unpackConsultantsModel(user);\n                this.unpackWorkingDays(user);\n                this.scatterFormFields(user.form);\n                //----------------------------\n                this.editUserForm = this.dynamicFormService.toFormGroup(user.form);\n\n                // if no 'id' parameter is given set parent's property 'activeVehicleId' to 0.\n                // This way we signal that when a tab is being closed the application doesn't\n                // need to go one step back in browser's history\n                this.usersComponent.activeId = 0;\n                this.enableForm();\n\n                this.userId = 0;\n                this.usersComponent.pushHistory(-2);\n                //this.state = 'active';\n                this.restoreProperties(); // populate the form with the last entered values. This is\n                // convenient for when the user navigates to different page\n                // before submitting the form\n                this.loadingIndication = 'none';\n            }\n\n            //this.state = 'inactive';\n        });\n    }\n\n    public formValueChange(key:string, value:string) {\n        switch(key) {\n            case 'grade':\n                if(value == 'Consultant') {\n                    this.consultantsEnabled = false;\n                    this.consultantsEmptyMessage = 'No consultants allowed';\n                }\n                else {\n                    this.consultantsEnabled = true;\n                    this.consultantsEmptyMessage = 'No consultants selected';\n                }\n                break;\n        }\n    }\n\n    public unpackSpecialitiesModel(form: any){\n        if(form.specialInterests && form.specialInterests.length > 0) {\n            for(let s of form.specialInterests) {\n                this.specialitiesModel.push({value: s.speciality.id, text: s.speciality.name});\n            }\n        }\n    }\n\n    public packSpecialitiesModel() {\n        if(!this.user.specialInterests) {\n            this.user.specialInterests = [];\n        }\n\n        for(let a of this.specialitiesModel) {\n            this.user.specialInterests.push({speciality: {id:a.value}});\n        }\n    }\n\n    public unpackConsultantsModel(form: any) {\n        if(form.supervisors && form.supervisors.length > 0) {\n            for(let c of form.supervisors) {\n                this.consultantsModel.push({value:\"\"+c.supervisor.id, text:c.supervisor.firstName+\" \"+c.supervisor.lastName});\n            }\n        }\n    }\n\n    public packConsultantsModel() {\n        if(!this.user.supervisors) {\n            this.user.supervisors = [];\n        }\n\n        // A consultant cannot have another consultant above him\n        if(this.user.grade == 'Consultant') {\n            return\n        }\n\n        for(let c of this.consultantsModel) {\n            this.user.supervisors.push({supervisor: {id: c.value}});\n        }\n    }\n\n    public getSpecialities() {\n        this.userService.fetchSpecialities((result: any) => {\n            this.specialities.length = 0;\n            for(let speciality of result) {\n                this.specialities.push({value: speciality.id, text: speciality.name});\n            }\n        });\n    }\n\n    public generateWeekDays() {\n        let weekDays = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday'];\n\n        for(let day of weekDays) {\n            this.weekDays.push({value:day, text:day});\n        }\n    }\n\n    public getConsultants() {\n        this.userService._getUsers(0, 1000, ['Consultant']).then(users => {\n            if(users){\n                this.consultants.length = 0;\n                for(let u of users) {\n                    this.consultants.push({value: u.id, text: u.firstName+\" \"+u.lastName});\n                }\n            }\n        });\n    }\n\n    public scatterFormFields(form: any) {\n        this.formColumn0.length = 0;\n        this.formColumn1.length = 0;\n\n        let col: number = 0;\n        for(let f of form){\n            if(/^Training/.test(f.label)) {\n                col = 1;\n            }\n\n            switch(col) {\n                case 0:\n                    this.formColumn0.push(f);\n                    break;\n                case 1:\n                    this.formColumn1.push(f);\n                    break;\n            }\n        }\n    }\n\n    private packWorkingDays() {\n        let workingDays = [];\n        for(let day of this.weekDays) {\n            if(this.weekDaysModel.find((v) => {\n                return v.value == day.value;\n            })){\n                workingDays.push({day: day.value, shift: 'Day'});\n            }\n            else{\n                workingDays.push({day: day.value, shift: 'NotWorking'});\n            }\n        }\n\n        this.user.workingDays = workingDays;\n    }\n\n    private unpackWorkingDays(form: any) {\n        if(form.workingDays && form.workingDays.length > 0) {\n            for(let day of form.workingDays) {\n                if(day.shift == 'Day') {\n                    this.weekDaysModel.push({value:day.day, text:day.day});\n                }\n            }\n        }\n    }\n\n    private selected(value: any) {\n        console.log('Selected value is: ', value);\n    }\n\n    /** Saves the user instance at the server. If the instance doesn't have *id* property\n     *  it would be created, otherwise (and if the *id* exists) the existing vehicle is going\n     *  to be updated\n     */\n    saveUser(): void {\n        //this.disableForm()\n        this.loadingIndication = 'block';\n\n        this.user = this.prepareSaveUser();\n        this.packWorkingDays();\n        this.packSpecialitiesModel();\n        this.packConsultantsModel();\n        this.userService.saveUser(this.user).then(result => {\n            if(result.status == 'ok'){\n                if(this.userId == 0){ // if this.userId == 0, then the currently selected tab\n                    // is \"Create User\"\n                    this.usersComponent.editUser(result.id);\n                    this.router.navigate(['/admin/users/edit-user/'+result.employee.id]);\n                    this.openSnackBar(\"User \"+this.user.firstName+\" \"+this.user.lastName+\" created\", 3);\n                }\n                else {\n                    this.usersComponent.updateTabTitle(this.userId, this.user.firstName+\" \"+this.user.lastName);\n                    this.openSnackBar(\"User \"+this.user.firstName+\" \"+this.user.lastName+\" updated\", 3);\n                }\n            }\n            else {\n                this.openSnackBar(\"Error updating user\", 3);\n            }\n            this.loadingIndication = 'none';\n            //setTimeout(() => this.disableForm() , 2000); // keep *Save* button disabled for a while after\n            // the server returned response\n            delete(this.editUserForm.value.id); // this.prepare() adds id field to the form\n            // we have to remove it when we don't need it\n        });\n    }\n\n    prepareSaveUser(): User {\n        const formModel = this.editUserForm.value;\n        formModel.id = this.userId == 0 ? null: this.userId; //this is important because the id field is not part of our Vehicle model\n\n        for(let k in formModel) {\n            if(formModel[k] && typeof formModel[k] == 'string' && formModel[k].length == 0) {\n                formModel[k] = null;\n            }\n        }\n\n\n        if(!formModel.workingDays) {\n            formModel.workingDays = []\n        }\n\n        formModel.workingDays.push({day: 'Monday', shift: formModel.Monday});\n        formModel.workingDays.push({day: 'Tuesday', shift: formModel.Tuesday});\n        formModel.workingDays.push({day: 'Wednesday', shift: formModel.Wednesday});\n        formModel.workingDays.push({day: 'Thursday', shift: formModel.Thursday});\n        formModel.workingDays.push({day: 'Friday', shift: formModel.Friday});\n        formModel.workingDays.push({day: 'Saturday', shift: formModel.Saturday});\n        formModel.workingDays.push({day: 'Sunday', shift: formModel.Sunday});\n\n        //formModel.emails = this.user.emails;\n        //formModel.phones = this.user.phones;\n\n        //formModel.emails[0].email = formModel.email;\n        //formModel.phones[0].phone = formModel.phone;\n\n        formModel.emails = [{email:formModel.email, type: 'work'}];\n        formModel.phones = [{phone:formModel.phone, type: 'work'}];\n\n\n        return formModel;\n    }\n\n    /** Displays a \"snackbar\" message (analogous to Toast messages in Android).\n     *\n     *  @param message message to be displayed\n     *  @param duration duration in seconds before the message disappears\n     *\n     *  @return void\n     */\n    openSnackBar(message: string, duration: number) {\n        this.snackBar.open(message, null, {\n            duration: duration*1000\n        });\n    }\n\n    storeProperties() {\n        this.localStorageService.set(this.constructor.name+'.form', this.editUserForm.value);\n    }\n\n    restoreProperties() {\n        let form = this.localStorageService.get(this.constructor.name+'.form');\n        if (form != null) {\n            this.isFormCached = true;\n            try{\n                this.editUserForm.setValue(form);\n            } catch (e) {\n            }\n        }\n    }\n\n    // Only called when route changes and a different component is about to be displayed. Closing\n    // document is not handled here. See below method\n    ngOnDestroy() {\n        if(this.userId == 0){\n            this.storeProperties();\n        }\n    }\n\n    // ngOnDestroy will be only called if the user navigates to a different route. If she just closes\n    // the document destructor will not be called. Here we cover closing document.\n    @HostListener('window:beforeunload', [ '$event' ])\n    beforeUnloadHander(event: any) {\n        this.ngOnDestroy();\n    }\n\n    public applyFormDisability() {\n        if(this.formDisabled == true) {\n            this.extraThingsVisibility = 'hidden';\n        }\n        else {\n            this.extraThingsVisibility = 'visible';\n        }\n\n        for(let key in this.editUserForm.controls) {\n            if(this.formDisabled == true) {\n                this.editUserForm.controls[key].disable();\n            } else {\n                this.editUserForm.controls[key].enable();\n            }\n        }\n    }\n\n    public toggleFormDisability() {\n        this.formDisabled = !this.formDisabled;\n        this.applyFormDisability();\n    }\n\n    public disableForm() {\n        this.formDisabled = true;\n        this.applyFormDisability();\n    }\n\n    public enableForm() {\n        this.formDisabled = false;\n        this.applyFormDisability();\n    }\n\n    public saveSpeciality = (speciality: any) => {\n        this.userService.saveSpeciality(speciality, ()=>{\n            this.getSpecialities();\n        });\n    }\n\n    public editSpecialInterestsUI() {\n        this.userService.fetchSpecialities((specialInterests: any[]) => {\n            this.specialInterests = specialInterests;\n\n            this.dialog.open(EditSpecialInterestsDialog, {\n                data: {\n                    specialInterests: this.specialInterests,\n                    saveCallback: this.saveSpeciality,\n                }\n            });\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/konstantin/svn/rota-client/src/app/admin/users/edit-user.component.ts","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"table.month {\\n    font-size: 1.5em;\\n}\\n\\ntable.month tr {\\n    border-bottom: 1px solid #f9f9f9;\\n}\\n\\ntable.month td{\\n    margin-right: 4px;\\n    background-color: #fff;\\n    border-right: 1px solid #f9f9f9;\\n}\\n\\ntable.month tr td:first-child {\\n    border-left: 1px solid #f9f9f9;\\n}\\n/*table.month td:last-child{\\n    margin-right: inherit;\\n    border-right: none;\\n}*/\\n\\ntable.month tr:first-child td{\\n    border: none; \\n}\\n\\ntable.month tr:nth-child(2) {\\n    border-top: 1px solid #f9f9f9;\\n}\\n\\n/*table.month tr:last-child {\\n    border-bottom: none;\\n}*/\\n\\ntable.month tr:last-child > td:last-child {\\n    border-right: 1px solid #f9f9f9;\\n}\\n\\ntable.month div > div:first-child{\\n    text-align: center;\\n    -webkit-user-select: none;\\n       -moz-user-select: none;\\n        -ms-user-select: none;\\n            user-select: none;\\n    outline: none;\\n}\\n\\ntable.month div.dateCell{\\n    width: 9ch;\\n    height: 9ch;\\n    background-color: #F2F9FF;\\n    color: #3673AA;\\n    line-height: 0.75em;\\n}\\n\\ntable.month .weeks div{\\n    color: #E4F2FF;\\n    background-color: #3673AA;\\n    text-align: center;\\n    width: 100%;\\n    -webkit-user-select: none;\\n       -moz-user-select: none;\\n        -ms-user-select: none;\\n            user-select: none;\\n    outline: none;\\n    cursor: default;\\n}\\n\\ntable.month tr.weeks {\\n    vertical-align: top;\\n    height: 2em;\\n}\\n\\ntable.month div.not-current-month {\\n    background-color: #f5f5f5;\\n    color: #8D8D8D;\\n}\\n\\n.selection {\\n    border: 1px solid;\\n    color: #3673AA;\\n    padding: 0.5em;\\n    overflow: auto;\\n    position: relative;\\n    height: 100%;\\n    width: 100%;\\n    font-size: 0.7vw;\\n    margin-top: 0.5em;\\n    background-color: white;\\n}\\n\\n.selection * {\\n    cursor: default;\\n}\\n\\n.selection div {\\n    padding-left: 0.6em;\\n}\\n\\n.selection div:hover {\\n    background-color: aliceblue;\\n}\\n\\n.selection div.selected {\\n    background-color: deepskyblue;\\n}\\n\\n.selection div.new {\\n    border: dotted 1px;\\n}\\n\\nh3{\\n    color: #004F76;\\n}\\n\\n.tmSelectInput {\\n    border: 1px solid #3673AA;\\n    padding: 0.25em;\\n    width: 8em;\\n}\\n\\n.shift {\\n    font-size: 12px;\\n    border: 1px solid;\\n    padding-left: 0.2em;\\n    width: 8ch;\\n    margin-right: 0.2em;\\n    background: lightyellow;\\n    display: inline-block;\\n    box-shadow: 2px 2px 3px 0px rgba(0, 0, 0, 0.15);\\n}\\n\\n.date {\\n    padding-top: 0.5em;\\n}\\n\\n.off {\\n    color: brown;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/konstantin/svn/rota-client/src/app/admin/users/edit-user/edit-special-interests.css\n// module id = ../../../../../src/app/admin/users/edit-user/edit-special-interests.css\n// module chunks = 1","module.exports = \"<button mat-raised-button color=\\\"primary\\\" (click)=\\\"newInterest()\\\"><span class=\\\"fa fa-plus\\\"></span>New</button>\\n\\n<div style=\\\"margin-botton: 1.5em; width: 30vw\\\" class=\\\"selection\\\">\\n    <div (dblclick)=\\\"selectInterest(interest)\\\" *ngFor=\\\"let interest of specialInterests\\\" [class.new]=\\\"!interest.id\\\"\\n        [class.selected]=\\\"selected_interest && selected_interest.id==interest.id\\\">\\n            {{interest.name}}\\n    </div>\\n</div>\\n\\n<form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onSaveClick()\\\">\\n    <input class=\\\"tmSelectInput\\\" matInput [id]='name' [formControlName]='\\\"name\\\"'>\\n</form>\\n\\n<button mat-raised-button color=\\\"accent\\\">Save</button>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/konstantin/svn/rota-client/src/app/admin/users/edit-user/edit-special-interests.html\n// module id = ../../../../../src/app/admin/users/edit-user/edit-special-interests.html\n// module chunks = 1","import { NgModule, HostListener} from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { FormControl, FormGroup, FormBuilder, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { Component, ViewChild, Inject, ElementRef } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA, MatInputModule, MatPaginator} from '@angular/material';\nimport { DatePipe } from '@angular/common';\nimport { Router } from '@angular/router';\nimport { DataSource } from '@angular/cdk/table';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\n//import { VehicleService } from '../../../service/vehicle.service';\nimport { Observable } from 'rxjs/Rx';\nimport { LocalStorageService } from 'angular-2-local-storage';\n\n\n/** importing Models */\n//import { Vehicle } from '../../../model/vehicle';\nimport { Shift } from '../../../model/user';\n\n@Component({\n    templateUrl: './edit-special-interests.html',\n    styleUrls: ['./edit-special-interests.css'],\n})\n\nexport class EditSpecialInterestsDialog{\n\n    public schedulePreview; \n    public specialInterests;\n    public saveCallback;\n    private form;\n    private selected_interest;\n\n    @ViewChild('defaultButton') private defaultButton: ElementRef;\n\n    constructor (\n        private dialogRef: MatDialogRef<EditSpecialInterestsDialog>,\n        private router: Router,\n        private formBuilder: FormBuilder,\n        private localStorageService: LocalStorageService,\n        @Inject(MAT_DIALOG_DATA) public data: any) {\n\n        this.saveCallback = data.saveCallback;\n        this.specialInterests = data.specialInterests;\n\n        this.form = this.formBuilder.group({\n            name: new FormControl('', [Validators.required]),\n        });\n    }\n\n    ngOnInit() {\n    }\n\n    ngAfterViewInit() {\n        setTimeout(() => {\n            try{\n                document.querySelector('input').focus();\n            } catch (e) {\n                //...shhhh\n            }\n        }, 500);\n    }\n\n    private onNoClick(): void {\n        this.dialogRef.close();\n    };\n\n    private onSaveClick(): void {\n        let id = null;\n        if(this.selected_interest) {\n            id = this.selected_interest.id;\n        }\n        let editedInterest = {\n            ...this.form.value,\n            id: id\n        };\n        this.saveCallback(editedInterest);\n        this.dialogRef.close();\n    }\n\n    private newInterest() {\n        let hasUnsaved = this.specialInterests.some((v) => {\n            if(v.id == null)\n                return true;\n        });\n\n        if(!hasUnsaved) {\n            this.specialInterests.push({id:null, name: 'New'});\n        }\n\n        this.selected_interest = this.specialInterests[this.specialInterests.length-1];\n        this.form.setValue({name: this.selected_interest.name});\n\n        document.querySelector('input').focus();\n    }\n\n    private selectInterest(interest: any) {\n        let bottomInterest = this.specialInterests[this.specialInterests.length-1];\n        if(interest!=bottomInterest && !bottomInterest.id) {\n            this.specialInterests.pop();\n        }\n        this.selected_interest = interest;\n\n        this.form.setValue({name:interest.name});\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/konstantin/svn/rota-client/src/app/admin/users/edit-user/edit-special-interests.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"table.weeks td {\\n    margin-right: 4px;\\n    background-color: #fff;\\n    border-right: 1px solid #d6d6d6;\\n}\\n\\ntable.weeks tr:first-child div {\\n    overflow: hidden;\\n    background-color: #3673AA;\\n    color: #E4F2FF;\\n    width: 5ch;\\n    text-align: center;\\n    -webkit-user-select: none;\\n       -moz-user-select: none;\\n        -ms-user-select: none;\\n            user-select: none;\\n    outline: none;\\n    cursor: default;\\n}\\n\\ntable.weeks div{\\n    background-color: #F2F9FF;\\n    text-align: center;\\n    -webkit-user-select: none;\\n       -moz-user-select: none;\\n        -ms-user-select: none;\\n            user-select: none;\\n    outline: none;\\n    width: 5ch;\\n}\\n\\n.colorBadge{\\n    display: inline-block;\\n    border-radius: 50%;\\n    width: 1em;\\n    height: 1em; \\n}\\n\\n.shift {\\n    overflow: hidden;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/konstantin/svn/rota-client/src/app/admin/users/user-list.component.css\n// module id = ../../../../../src/app/admin/users/user-list.component.css\n// module chunks = 1","module.exports = \"<div class=\\\"example-container mat-elevation-z8\\\">\\n\\n    <mat-table #table [dataSource]=\\\"dataSource\\\">\\n\\n        <!--- Note that these columns can be defined in any order.\\n            The actual rendered columns are set as a property on the row definition\\\" -->\\n\\n            <!-- Name Column -->\\n            <ng-container cdkColumnDef=\\\"name\\\">\\n                <mat-header-cell *cdkHeaderCellDef> Name </mat-header-cell>\\n                <mat-cell *cdkCellDef=\\\"let row\\\">\\n                    <a [routerLink]=\\\"['../edit-user', row.id]\\\"><span style=\\\"font-size: 1.8em;\\\" class=\\\"fa fa-user-md\\\" [style.color]=\\\"row.color\\\"></span> {{row.firstName}} {{row.lastName}}</a>\\n                </mat-cell>\\n            </ng-container>\\n\\n            <ng-container cdkColumnDef=\\\"workingDays\\\">\\n                <mat-header-cell *cdkHeaderCellDef style=\\\"flex: 0 0 200px\\\"> Working Days </mat-header-cell>\\n                <mat-cell *cdkCellDef=\\\"let row\\\" style=\\\"flex: 0 0 200px\\\">\\n                    <table class=\\\"weeks\\\">\\n                        <tr>\\n                            <td *ngFor=\\\"let day of row.workingDays\\\">\\n                                <div>{{shorten(day.day, 3)}}</div>\\n                            </td>\\n                        </tr>\\n                        <tr>\\n                            <td *ngFor=\\\"let day of row.workingDays\\\">\\n                                <div class=\\\"shift {{day.shift}}\\\">{{day.shift}}</div>\\n                            </td>\\n                        </tr>\\n                    </table>\\n                </mat-cell>\\n            </ng-container>\\n\\n            <mat-header-row *cdkHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n            <mat-row *cdkRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\n\\n    </mat-table>\\n\\n    <mat-paginator #paginator\\n         [length]=\\\"dataSource.totalCount\\\"\\n         [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\">\\n    </mat-paginator>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/konstantin/svn/rota-client/src/app/admin/users/user-list.component.html\n// module id = ../../../../../src/app/admin/users/user-list.component.html\n// module chunks = 1","import { NgModule, HostListener} from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { Component, ViewChild } from '@angular/core';\nimport { DatePipe } from '@angular/common';\nimport { Router } from '@angular/router';\nimport { DataSource } from '@angular/cdk/table';\nimport { MatPaginator } from '@angular/material';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { UserService } from '../../service/user.service';\nimport { Observable } from 'rxjs/Rx';\nimport { LocalStorageService } from 'angular-2-local-storage';\n\nimport { AdminComponent } from '../admin.component';\n\nimport { UsersComponent } from './users.component';\n\n/** importing Models */\nimport {Day, Shift, User, WorkingDay} from '../../model/user';\n\n@Component({\n  selector: 'user-list-component',\n  templateUrl: './user-list.component.html',\n  styleUrls: ['./user-list.component.css'],\n})\n\nexport class UserListComponent {\n  displayedColumns = [ 'name', 'workingDays'];\n  dataSource: UserDataSource | null;\n    public day:Day;\n    public shift:Shift;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n\n  constructor (\n\n    private router: Router,\n    private parentComponent: AdminComponent,\n    private userService: UserService,\n    private usersComponent: UsersComponent,\n    private localStorageService: LocalStorageService) {\n      this.day = new Day();\n      this.shift = new Shift();\n  }\n\n  ngOnInit() {\n      this.parentComponent.currentPage = \"Users\";\n      this.restoreProperties();\n      this.dataSource = new UserDataSource(this.userService, this.paginator, this.localStorageService);\n\n      this.usersComponent.pushHistory(-1);\n  }\n\n  private ngOnDestroy() {\n      this.storeProperties();\n  }\n\n  private storeProperties() {\n      this.localStorageService.set(this.constructor.name+'.pageIndex', this.paginator.pageIndex);\n      this.localStorageService.set(this.constructor.name+'.pageSize', this.paginator.pageSize);\n  }\n\n  private restoreProperties() {\n      let pageIndex = <number>this.localStorageService.get(this.constructor.name+'.pageIndex');\n      if(pageIndex != null) {\n            this.paginator.pageIndex = pageIndex;\n      }\n\n      let pageSize = <number>this.localStorageService.get(this.constructor.name+'.pageSize');\n      if(pageSize != null) {\n            this.paginator.pageSize = pageSize;\n      }\n  }\n\n  // ngOnDestroy will be only called if the user navigates to a different route. If she just closes\n  // the document destructor will not be called. Here we cover closing document.\n  @HostListener('window:beforeunload', [ '$event' ])\n  beforeUnloadHander(event: any) {\n      this.ngOnDestroy();\n  }\n\n    public shorten(str:string, len:number) {\n        return str.substr(0, len);\n    }\n}\n\n/**\n * Data source to provide what data should be rendered in the table. Note that the data source\n * can retrieve its data in any way. It is not the data source's responsibility to manage\n * the underlying data. Instead, it only needs to take the data and send the table exactly what\n * should be rendered.\n */\nexport class UserDataSource extends DataSource<any> {\n\n  public totalCount = 0;\n\n  constructor(\n    private userService: UserService,\n    private _paginator: MatPaginator,\n    private localStorageService: LocalStorageService) {\n\n    super();\n  }\n\n  /** Connect function called by the table to retrieve one stream containing the data to render. */\n  connect(): Observable<User[]> {\n    const displayDataChanges = [\n      this.userService.usersSubject,\n      this._paginator.page,\n    ];\n\n    //return Observable.merge(...displayDataChanges).map(this.userService.retrieve);\n    return Observable.merge(...displayDataChanges).map(() => {\n      // Grab the page's slice of data.\n      const startIndex = this._paginator.pageIndex * this._paginator.pageSize;\n      //return this.userService.users_collection.slice(startIndex, this._paginator.pageSize);\n      this.totalCount = this.userService.totalCount;\n      return this.userService.retrieve(startIndex, this._paginator.pageSize);\n    }).flatMap(e => {return e});\n  }\n\n  disconnect() {}\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/konstantin/svn/rota-client/src/app/admin/users/user-list.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"ng-component{\\n    padding: 1%;\\n}\\n\\na:hover, a:focus{\\n    text-decoration: none;\\n}\\n\\na.mat-tab-link:focus{\\n    background: #fff;\\n    text-decoration: none;\\n}\\n\\ni.fa-times{\\n    /* position: fixed; */\\n}\\n\\ni.fa-times:hover{\\n    cursor: pointer;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/konstantin/svn/rota-client/src/app/admin/users/users.component.css\n// module id = ../../../../../src/app/admin/users/users.component.css\n// module chunks = 1","module.exports = \"<nav mat-tab-nav-bar>\\n\\n  <span *ngFor=\\\"let link of navLinks\\\">\\n    <a mat-tab-link\\n      [routerLink]=\\\"link.ref\\\"\\n      routerLinkActive #rla=\\\"routerLinkActive\\\"\\n      [active]=\\\"rla.isActive\\\">\\n      <span *ngIf=\\\"titleType(link) == 0\\\">{{link.label}}</span>\\n      <i *ngIf=\\\"titleType(link) == 1\\\">{{link.label}}</i>\\n      <b *ngIf=\\\"titleType(link) == 2\\\">{{link.label}}</b>\\n\\n    </a>\\n    <i class=\\\"fa fa-times\\\" aria-hidden=\\\"true\\\" *ngIf=\\\"link.id>0\\\" (click)=\\\"closeUser(link.id)\\\"></i>\\n  </span>\\n</nav>\\n<router-outlet></router-outlet>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/konstantin/svn/rota-client/src/app/admin/users/users.component.html\n// module id = ../../../../../src/app/admin/users/users.component.html\n// module chunks = 1","import { Component, HostListener } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { ActivatedRoute, ParamMap, Router, NavigationEnd }  from '@angular/router';\nimport 'rxjs/add/operator/switchMap';\nimport { MatTabsModule } from '@angular/material';\nimport {MatCheckbox} from \"@angular/material\";\n\n// parent class\nimport { TabbedComponent, NavLink } from '../../model/tabbed.component';\n\nimport { LocalStorageService } from 'angular-2-local-storage';\n\nimport { AdminComponent } from '../admin.component';\n\nimport { HistoryService } from '../../service/history.service';\n\n@Component({\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.css'],\n})\n\nexport class UsersComponent extends TabbedComponent {\n\n    navLinks: NavLink[] = [\n      {label: 'Employee List', ref: 'user-list', id: -1, default: true},\n      {label: 'Create Employee', ref: 'create-user', id: -2, default: false}\n    ];\n\n    //activeId = 0;\n    public state = 'out';\n    protected componentUrl = '/admin/users';\n    public keepLive = true;\n\n    animationEnded(event: any) {\n      console.log(\"animationEnded\");\n    }\n\n    // ngOnInit() {\n    //   console.log(this.state);\n    //   //this.state = 'active';\n    //   console.log(this.state);\n    //   setTimeout(()=> this.state='in', 1);\n    // }\n\n    // ngOnDestroy() {\n    //   //this.state = 'inactive';\n    //   setTimeout(()=> this.state='out', 1);\n    // }\n\n    constructor (private route: ActivatedRoute,\n                 protected router:Router,\n                 protected location:Location,\n                 private localStorageService: LocalStorageService,\n                 private historyService: HistoryService,\n                 private adminComponent: AdminComponent) {\n                   super(location, router);\n                 }\n\n\n    ngOnInit() {\n      this.restoreProperties();\n      this.adminComponent.setActive(this.constructor.name);\n\n        let params = this.route.snapshot.queryParams;\n        if(params[\"redirectTo\"] != null && params[\"redirectTo\"] == 'lastVisited') {\n              let lastRoute = this.localStorageService.get(this.constructor.name+'.lastRoute');\n              if(lastRoute != null) {\n                this.router.navigate([lastRoute]);\n              }\n        }\n\n        this.clearInvalidTabs();\n    }\n    /** Opens a new tab. It's title will initialy be simply of the form \"id999\" where 999 is the userId passed to\n     *  this method. The child component (EditUser if nobody has changed it) will update tab's title with user's\n     *  name as soon as it has fetched the user object from the server.\n     */\n    editUser(userId:any): void {\n      for (let link of this.navLinks) {\n        if(link.id == userId){\n          return;\n        }\n      }\n\n      if(typeof userId != 'undefined') {\n          this.navLinks.push({label: \"id\"+userId, ref: 'edit-user/'+userId, id: userId, default: false});\n      }\n      //this.history.push({id: userId});\n    }\n\n\n    /** Closes a tab associated with the given userId. Method will check whether that tab is open and if that's the\n     *  case will go back one step in browser's history (that's the most natural behaviour and the one the user would\n     *  expect).\n     */\n    closeUser(userId:any): void {\n\n      let index: number = -1;\n\n      let counter = 0;\n      for (let link of this.navLinks) {\n        if(link.id == userId){\n          index = counter;\n          break;\n        }\n        counter++;\n      }\n\n      if(index > -1){\n        if(userId == this.activeId) {\n          this.back();\n        }\n        this.navLinks.splice(index, 1);\n      }\n    }\n\n    /** A supplementary method used by component's template. We are recognising 3 types of tabs: permament tabs (which\n     *  we are going to display as \"normal\" text), editing tab with id for title (this happens for a short time starting\n     *  from moment the tab is open until the user is fetched from the backend), editing tab with user's name\n     *  for title. The last two will be displayed differently from each other so it would be obvious for the user\n     *  what the titles stand for */\n    public titleType (link: any): number {\n      if(link.label.id == 0) { // a permament tab (e.g. \"Vehicle List\"). We are going to display its label as \"normal\" link\n        return 0;\n      } else if(link.label.indexOf(\"id\") == 0) { // editing tab with id for title\n        return 1;\n      } else { // editing tab with registration plate for title\n        return 0;\n      }\n    }\n\n    /** Updates tab title after it was created. Method would be called externally by the child component when the entire user\n     *  object is fetched from the backend. The tab will be identified by its userId value (since having multiple tabs open\n     *  against the same user doesn't make sense)\n     */\n    public updateTabTitle (userId: number, name: string): void {\n      for (let link of this.navLinks) {\n        if(link.id == userId) {\n          link.label = name;\n          break;\n        }\n      }\n    }\n\n    ngOnDestroy() {\n      this.storeProperties();\n    }\n\n    // ngOnDestroy will be only called if the user navigates to a different route. If she just closes\n    // the document destructor will not be called. Here we cover closing document.\n    @HostListener('window:beforeunload', [ '$event' ])\n    beforeUnloadHander(event: any) {\n        this.ngOnDestroy();\n    }\n\n    private storeProperties() {\n\n      //console.log(this.historyService.currentUrl);\n      this.localStorageService.set(this.constructor.name+'.navLinks', this.navLinks);\n      this.localStorageService.set(this.constructor.name+'.lastRoute', this.historyService.currentUrl);\n          // when storing properties we also want to store current URL, which we will redirect to when\n          // the user navigates back to this section of the application. This way navigation would feel\n          // less obtrusive and would allow the user to freely navigate between sections without losing\n          // focus to the last used tab\n    }\n\n    private restoreProperties() {\n      let navLinks = <NavLink[]> this.localStorageService.get(this.constructor.name+'.navLinks');\n      if(navLinks != null) {\n        this.navLinks = navLinks;\n      }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/konstantin/svn/rota-client/src/app/admin/users/users.component.ts","import { NgModule }       from '@angular/core';\nimport { CommonModule }   from '@angular/common';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {\n    MatAutocompleteModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,} from '@angular/material';\nimport {MdMultiselect} from 'md-multiselect';\nimport { DataSource, CdkTableModule } from '@angular/cdk/table';\nimport { FormsModule, ReactiveFormsModule }   from '@angular/forms';\nimport { RouterModule, Routes } from '@angular/router';\n\n/** Importing local modules */\nimport { MultiSelectInputModule } from '../../lib/multi-select-input/multi-select-input.module';\n\n/** Importing local components */\nimport { UsersComponent } from './users.component';\nimport { UserListComponent } from './user-list.component';\nimport { EditUserComponent } from './edit-user.component';\nimport { EditSpecialInterestsDialog } from './edit-user/edit-special-interests';\n\n\nexport const userRoutes: Routes = [\n    {\n        path: '',\n        component: UsersComponent,\n        //canActivate: [AuthGuard],\n        children: [\n            { path: '', pathMatch: 'full', redirectTo: 'user-list' },\n            { path: 'user-list', component: UserListComponent },\n            { path: 'edit-user/:id', component: EditUserComponent },\n            { path: 'create-user', component: EditUserComponent },\n        ]\n    }\n];\n\n@NgModule({\n    imports: [\n        CommonModule,\n\n        MatAutocompleteModule,\n        MatButtonModule,\n        MatButtonToggleModule,\n        MatCardModule,\n        MatCheckboxModule,\n        MatChipsModule,\n        MatDatepickerModule,\n        MatDialogModule,\n        MatExpansionModule,\n        MatGridListModule,\n        MatIconModule,\n        MatInputModule,\n        MatListModule,\n        MatMenuModule,\n        MatNativeDateModule,\n        MatPaginatorModule,\n        MatProgressBarModule,\n        MatProgressSpinnerModule,\n        MatRadioModule,\n        MatRippleModule,\n        MatSelectModule,\n        MatSidenavModule,\n        MatSliderModule,\n        MatSlideToggleModule,\n        MatSnackBarModule,\n        MatSortModule,\n        MatTableModule,\n        MatTabsModule,\n        MatToolbarModule,\n        MatTooltipModule,\n        CdkTableModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MultiSelectInputModule, \n        RouterModule.forChild(userRoutes)\n    ],\n    declarations: [\n        UsersComponent,\n        UserListComponent,\n        EditUserComponent,\n        EditSpecialInterestsDialog,\n    ],\n    entryComponents: [\n        EditSpecialInterestsDialog,\n    ],\n    providers: []\n})\n\nexport class UsersModule {}\n\n\n\n// WEBPACK FOOTER //\n// /home/konstantin/svn/rota-client/src/app/admin/users/users.module.ts","// import { Component } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { Router } from '@angular/router';\n// import { ActivatedRoute, Params }  from '@angular/router';\n// import 'rxjs/add/operator/switchMap';\n// import { MdTabsModule } from '@angular/material';\n\n\nexport class TabbedComponent  {\n\n    /** Stores history of visited tabs */\n    protected history: any[] = [];\n    /** Stores tabs */\n    protected navLinks: NavLink[] = [];\n    /** Active tab id */\n    public activeId: number;\n    /** route to the tabbed component. The child class must set this for the navigation features to work */\n    protected componentUrl: string = '';\n\n    constructor(protected location: Location,\n                protected router: Router) {}\n\n    protected back() {\n        this.history.pop();\n        let hisEntry;\n        do{\n           hisEntry = this.history.pop();\n        } while(hisEntry!=null && this.activeId == hisEntry.id);\n         \n\n        if(hisEntry == null){\n            console.log(\"wow\");\n            let defaultUrl = this.getDefaultUrl();\n            this.router.navigate([this.componentUrl, defaultUrl]);\n        }\n        else {\n            let isPresent = false   // this is the indication whether the tab exists\n            for(let e of this.navLinks) {\n                if(e.id == hisEntry.id) {\n                    isPresent = true;\n                    break;\n                }\n            }\n\n            if(!isPresent) {\n                this.back();\n            }\n            else {\n                this.router.navigate([this.componentUrl+'/'+this.getUrl(hisEntry.id)]);\n            }\n        }\n    }\n\n    public getDefaultUrl() {\n        for(let e of this.navLinks) {\n            if(e.default == true) {\n                return e.ref;\n            }\n        }\n    }\n\n    protected getUrl(id: number) {\n        let url = '';\n        for(let e of this.navLinks) {\n            if(e.id == id) {\n                url = e.ref;\n                break;\n            }\n        }\n        return url;\n    }\n\n    public pushHistory(id: number) {\n      this.history.push({id: id});\n    }\n\n    public clearInvalidTabs() {\n        this.navLinks = this.navLinks.filter((v) => {\n            if(typeof v == 'undefined')\n                return false;\n            else\n                return true;\n        });\n    }\n}\n\nexport class NavLink {\n  label: string;\n  ref: string;\n  id: number;\n  default: boolean;\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/konstantin/svn/rota-client/src/app/model/tabbed.component.ts"],"sourceRoot":""}