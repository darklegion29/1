{"version":3,"sources":["/home/konstantin/svn/rota-client/src/$_lazy_route_resource lazy","/home/konstantin/svn/rota-client/src/app/admin/admin.component.css","/home/konstantin/svn/rota-client/src/app/admin/admin.component.html","/home/konstantin/svn/rota-client/src/app/admin/admin.component.ts","/home/konstantin/svn/rota-client/src/app/admin/admin.module.ts","/home/konstantin/svn/rota-client/src/app/app.component.css","/home/konstantin/svn/rota-client/src/app/app.component.html","/home/konstantin/svn/rota-client/src/app/app.component.ts","/home/konstantin/svn/rota-client/src/app/app.module.ts","/home/konstantin/svn/rota-client/src/app/lib/confirm/confirm.html","/home/konstantin/svn/rota-client/src/app/lib/confirm/confirm.ts","/home/konstantin/svn/rota-client/src/app/lib/multi-select-input/multi-select-input.component.css","/home/konstantin/svn/rota-client/src/app/lib/multi-select-input/multi-select-input.component.html","/home/konstantin/svn/rota-client/src/app/lib/multi-select-input/multi-select-input.component.ts","/home/konstantin/svn/rota-client/src/app/lib/multi-select-input/multi-select-input.module.ts","/home/konstantin/svn/rota-client/src/app/lib/single-select-input/single-select-input.component.css","/home/konstantin/svn/rota-client/src/app/lib/single-select-input/single-select-input.component.html","/home/konstantin/svn/rota-client/src/app/lib/single-select-input/single-select-input.component.ts","/home/konstantin/svn/rota-client/src/app/lib/single-select-input/single-select-input.module.ts","/home/konstantin/svn/rota-client/src/app/login.component.html","/home/konstantin/svn/rota-client/src/app/login.component.ts","/home/konstantin/svn/rota-client/src/app/model/activity.ts","/home/konstantin/svn/rota-client/src/app/model/base.component.ts","/home/konstantin/svn/rota-client/src/app/model/criteria.ts","/home/konstantin/svn/rota-client/src/app/model/question-base.ts","/home/konstantin/svn/rota-client/src/app/model/schedule.ts","/home/konstantin/svn/rota-client/src/app/model/tmdate.ts","/home/konstantin/svn/rota-client/src/app/model/user.ts","/home/konstantin/svn/rota-client/src/app/service/activity.service.ts","/home/konstantin/svn/rota-client/src/app/service/admincomponent.service.ts","/home/konstantin/svn/rota-client/src/app/service/backend.service.ts","/home/konstantin/svn/rota-client/src/app/service/criteria.service.ts","/home/konstantin/svn/rota-client/src/app/service/css.service.ts","/home/konstantin/svn/rota-client/src/app/service/dynamic-form.service.ts","/home/konstantin/svn/rota-client/src/app/service/history.service.ts","/home/konstantin/svn/rota-client/src/app/service/schedule1.service.ts","/home/konstantin/svn/rota-client/src/app/service/schedule2.service.ts","/home/konstantin/svn/rota-client/src/app/service/schedule3.service.ts","/home/konstantin/svn/rota-client/src/app/service/skill-type.service.ts","/home/konstantin/svn/rota-client/src/app/service/skills.service.ts","/home/konstantin/svn/rota-client/src/app/service/user.service.ts","/home/konstantin/svn/rota-client/src/environments/environment.ts","/home/konstantin/svn/rota-client/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["var map = {\n\t\"app/admin/activities/activities.module\": [\n\t\t\"../../../../../src/app/admin/activities/activities.module.ts\",\n\t\t\"common\",\n\t\t\"activities.module\"\n\t],\n\t\"app/admin/schedule2/schedule2.module\": [\n\t\t\"../../../../../src/app/admin/schedule2/schedule2.module.ts\",\n\t\t\"common\",\n\t\t\"schedule2.module.0\"\n\t],\n\t\"app/admin/schedule3/schedule3.module\": [\n\t\t\"../../../../../src/app/admin/schedule3/schedule3.module.ts\",\n\t\t\"common\",\n\t\t\"schedule3.module\"\n\t],\n\t\"app/admin/skills/skill.module\": [\n\t\t\"../../../../../src/app/admin/skills/skill.module.ts\",\n\t\t\"common\",\n\t\t\"skill.module\"\n\t],\n\t\"app/admin/users/users.module\": [\n\t\t\"../../../../../src/app/admin/users/users.module.ts\",\n\t\t\"common\",\n\t\t\"users.module\"\n\t],\n\t\"app/customer/schedule2/schedule2.module\": [\n\t\t\"../../../../../src/app/customer/schedule2/schedule2.module.ts\",\n\t\t\"common\",\n\t\t\"schedule2.module\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids)\n\t\treturn Promise.reject(new Error(\"Cannot find module '\" + req + \"'.\"));\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__(ids[0]);\n\t});\n};\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"../../../../../src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/konstantin/svn/rota-client/src/$$_lazy_route_resource lazy\n// module id = ../../../../../src/$$_lazy_route_resource lazy recursive\n// module chunks = main","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"div{\\r\\n    /* border: 1px solid red;   */\\r\\n}\\r\\n\\r\\nhtml, body{\\r\\n  background: #fbfbfb;\\r\\n  color: #004F76;\\r\\n  height: 100%;\\r\\n  width: 100%;\\r\\n  -webkit-user-select: none;\\r\\n     -moz-user-select: none;\\r\\n      -ms-user-select: none;\\r\\n          user-select: none;\\r\\n  outline: none;\\r\\n}\\r\\n\\r\\n.leftSide{\\r\\n  background: #fff;\\r\\n  -webkit-box-shadow: 0 5px 5px -3px rgba(0, 0, 0, 0.2), 0 8px 10px 1px rgba(0, 0, 0, 0.14), 0 3px 14px 2px rgba(0, 0, 0, 0.12);\\r\\n          box-shadow: 0 5px 5px -3px rgba(0, 0, 0, 0.2), 0 8px 10px 1px rgba(0, 0, 0, 0.14), 0 3px 14px 2px rgba(0, 0, 0, 0.12);\\r\\n  padding: 0px;\\r\\n  font-size: 20px;\\r\\n}\\r\\n\\r\\n.fa-chevron-left{\\r\\n  position: absolute;\\r\\n  top: 50%;\\r\\n}\\r\\n\\r\\n.leadHead{\\r\\n  text-transform: uppercase;\\r\\n  padding: 14px;\\r\\n}\\r\\n\\r\\n.mainWrapper{\\r\\n  float: right;\\r\\n  padding: 1%;\\r\\n  padding-top: 1%;\\r\\n}\\r\\n\\r\\n.mainContent{\\r\\n  height: 90vh;\\r\\n  overflow: auto;\\r\\n}\\r\\n\\r\\nmd-grid-list{\\r\\n  padding: 2%;\\r\\n}\\r\\n\\r\\n.row{\\r\\n  margin-right: 0px;\\r\\n}\\r\\n\\r\\n.sideBarMenu[class^=\\\"col-\\\"]{\\r\\n    padding-left: 10px;\\r\\n    padding-right: 10px;\\r\\n}\\r\\n\\r\\n.mat-menu-item{\\r\\n  padding: 1em;\\r\\n  margin: 1em;\\r\\n  border-left: 4px solid #fff;\\r\\n  text-transform: uppercase;\\r\\n  color: #c6c6c6;\\r\\n  font-weight: bold;\\r\\n}\\r\\n\\r\\n.mat-menu-item:focus, .mat-menu-item:hover{\\r\\n  /*background: #fff;*/\\r\\n  color: #252525;\\r\\n  border-left: 4px solid #02d1a5;\\r\\n}\\r\\n\\r\\n.user span{\\r\\n  margin-left: 2%;\\r\\n}\\r\\n\\r\\n.user{\\r\\n  font-style: italic;\\r\\n  font-weight: bold;\\r\\n  padding: 6%;\\r\\n  border-top: 1px solid #ececec;\\r\\n}\\r\\n\\r\\n.logoWrapper div[class^=\\\"col-\\\"]{\\r\\n  padding-left: 0px !important;\\r\\n}\\r\\n\\r\\n.logoWrapper img{\\r\\n  padding: 4%;\\r\\n  max-width: 220px;\\r\\n}\\r\\n\\r\\nul li a:focus{\\r\\n  border-left: 4px solid #02d1a5;\\r\\n  text-decoration: none;\\r\\n}\\r\\n\\r\\nul li:hover .fa::before, ul li:active .fa::before{\\r\\n  color: #02d1a5;\\r\\n}\\r\\n\\r\\n.fa-rotate-90 {\\r\\n    -webkit-transform: rotate(-90deg);\\r\\n    transform: rotate(-90deg);\\r\\n}\\r\\n\\r\\n.createdBy{\\r\\n    width: 98%;\\r\\n    float: right;\\r\\n    text-transform: uppercase;\\r\\n}\\r\\n\\r\\n.createdBy a{\\r\\n  color: #02d1a4;\\r\\n  text-decoration: underline;\\r\\n}\\r\\n\\r\\n.logo{\\r\\n  text-align: center;\\r\\n  width: 90%;\\r\\n}\\r\\n\\r\\n.logoHebeData{\\r\\n  bottom: 2px;\\r\\n  opacity: 0.1;\\r\\n  position: absolute;\\r\\n  text-align: center;\\r\\n  width: 90%;\\r\\n}\\r\\n\\r\\n/* \\r\\n.navbar-toggleable-sm .navbar-collapse{\\r\\n  height: 96vh;\\r\\n} */\\r\\n\\r\\n@media (max-width:360px){\\r\\n  .mainWrapper{\\r\\n    float: none;\\r\\n    padding: 1%;\\r\\n  }\\r\\n}\\r\\n\\r\\n@media (max-width: 767px)\\r\\n{\\r\\n  .navbar-fixed-side\\r\\n  {\\r\\n    margin-left:0px;\\r\\n    margin-right:-15px;\\r\\n  }\\r\\n\\r\\n  ul li a, .user, .logoWrapper img{\\r\\n    padding: 2%;\\r\\n  }\\r\\n\\r\\n  .logoHebeData{\\r\\n    position: static;\\r\\n  }\\r\\n\\r\\n  .navbar-toggleable-sm .navbar-collapse{\\r\\n    height: auto;\\r\\n  }\\r\\n\\r\\n  .logo, .logoHebeData{\\r\\n    text-align: left;\\r\\n  }\\r\\n\\r\\n  nav{\\r\\n    margin-bottom: 40px;\\r\\n  }\\r\\n\\r\\n}\\r\\n\\r\\n@media (max-height: 680px)\\r\\n{\\r\\n  .logoHebeData{\\r\\n    position: static;\\r\\n  }\\r\\n}\\r\\n\\r\\n@media (min-width: 1280px) and (max-width: 1480px){\\r\\n  .sideBarMenu .col-lg-2{\\r\\n    max-width: 19%;\\r\\n  }\\r\\n}\\r\\n\\r\\n@media (min-width: 768px){\\r\\n  .navbar-fixed-side\\r\\n  {\\r\\n    position:fixed;\\r\\n    margin:0 -15px;\\r\\n    height:100vh;\\r\\n    width:inherit;\\r\\n    overflow:auto;\\r\\n    border-top-width:0;\\r\\n    border-bottom-width:0;\\r\\n    border-radius:0}\\r\\n  }\\r\\n\\r\\n#menu{\\r\\n  padding: 2%;\\r\\n}\\r\\n\\r\\nul {\\r\\n    list-style-type: none;\\r\\n    margin: 0;\\r\\n    padding: 0;\\r\\n    width: auto;\\r\\n    background-color: #fff;\\r\\n}\\r\\n\\r\\nli {\\r\\n  border-bottom: 1px solid #ececec;\\r\\n}\\r\\n\\r\\nli a {\\r\\n  display: block;\\r\\n  border-left: 4px solid #fff;\\r\\n  text-transform: uppercase;\\r\\n  color: #c6c6c6;\\r\\n  font-weight: bold;\\r\\n  padding: 6%;\\r\\n}\\r\\n\\r\\n/* Change the link color on hover */\\r\\n\\r\\nli a:hover {\\r\\n  text-decoration: none;\\r\\n\\r\\n  color: #252525;\\r\\n  border-left: 4px solid #02d1a5;\\r\\n  text-transform: uppercase;\\r\\n  font-weight: bold;\\r\\n}\\r\\n\\r\\nspan.fa{\\r\\n  margin-right: 10%;\\r\\n}\\r\\n\\r\\n.alert-count {\\r\\n  padding-left: 7px;\\r\\n  padding-right: 7px;\\r\\n  float:right;\\r\\n\\r\\n  color: white;\\r\\n  background-color: #F7102A;\\r\\n}\\r\\n\\r\\nul li:hover a.navigated-to .fa::before{\\r\\n  color: #02d1a5;\\r\\n}\\r\\n\\r\\nli a.navigated-to {\\r\\n  pointer-events: none;\\r\\n  color: #02d1a5;\\r\\n  border-left: 4px solid #02d1a5;\\r\\n}\\r\\n\\r\\n/***********************  TOP Bar ********************/\\r\\n\\r\\n.sidebar{ -webkit-transition: all 0.5s  ease-in-out; transition: all 0.5s  ease-in-out; }\\r\\n\\r\\n.revealMenuButton {\\r\\n    float: left;\\r\\n}\\r\\n\\r\\n.menulist {\\r\\n    opacity: 1;\\r\\n}\\r\\n\\r\\n.fadeIn {\\r\\n    -webkit-animation: fade-in 0.3s;\\r\\n            animation: fade-in 0.3s; \\r\\n    -webkit-animation-fill-mode: forwards; \\r\\n            animation-fill-mode: forwards;\\r\\n}\\r\\n\\r\\n.fadeOut {\\r\\n    -webkit-animation: fade-out 0.3s;\\r\\n            animation: fade-out 0.3s; \\r\\n    -webkit-animation-fill-mode: forwards; \\r\\n            animation-fill-mode: forwards;\\r\\n}\\r\\n\\r\\n@-webkit-keyframes fade-out{\\r\\n    0% { opacity: 1; }\\r\\n    100% {opacity: 0; -webkit-transform:translate(-50px); transform:translate(-50px); height: 0px;}\\r\\n}\\r\\n\\r\\n@keyframes fade-out{\\r\\n    0% { opacity: 1; }\\r\\n    100% {opacity: 0; -webkit-transform:translate(-50px); transform:translate(-50px); height: 0px;}\\r\\n}\\r\\n\\r\\n@-webkit-keyframes fade-in{\\r\\n    0% { opacity: 0; -webkit-transform:translate(-50px); transform:translate(-50px);}\\r\\n    100% {opacity: 1; -webkit-transform:translate(0px); transform:translate(0px);}\\r\\n}\\r\\n\\r\\n@keyframes fade-in{\\r\\n    0% { opacity: 0; -webkit-transform:translate(-50px); transform:translate(-50px);}\\r\\n    100% {opacity: 1; -webkit-transform:translate(0px); transform:translate(0px);}\\r\\n}\\r\\n\\r\\n.concealMenuButton {\\r\\n    margin-left: 0.5em;\\r\\n    width: 100%;\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\n.concealMenuButton:hover {\\r\\n    background-color: #D2D6EF;\\r\\n}\\r\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/konstantin/svn/rota-client/src/app/admin/admin.component.css\n// module id = ../../../../../src/app/admin/admin.component.css\n// module chunks = main","module.exports = \"<div class=\\\"col-lg-12 sideBarMenu\\\">\\n    <div class=\\\"menulist\\\">\\n        <div class=\\\"col-lg-2 col-md-4 col-sm-12 col-12 leftSide navbar-fixed-side\\\">\\n            <!-- <button mat-raised-button color=\\\"primary\\\" (click)=\\\"concealMainMenu()\\\" style=\\\"fa fa-tag\\\">Hide Menu</button> -->\\n            <div (click)=\\\"concealMainMenu()\\\" class=\\\"fa fa-dedent concealMenuButton\\\">Hide Menu</div>\\n            <div id=\\\"menu\\\" *ngIf=\\\"!menulist\\\">\\n                <nav class=\\\"nav navbar-light navbar-toggleable-sm\\\">\\n                    <!-- <button class=\\\"navbar-toggler navbar-toggler-right\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarWEX\\\" aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n                            <span class=\\\"navbar-toggler-icon\\\"></span>\\n                    </button> -->\\n\\n                    <div class=\\\"navbar-collapse collapse flex-column\\\" id=\\\"navbarWEX\\\">\\n                        <div class=\\\"logoWrapper logo justify-content-center\\\">\\n                            <img src=\\\"assets/images/logo.png\\\" alt=\\\"Logo\\\" class=\\\"col-md-12 col-10 col-lg-10\\\" />\\n                        </div>\\n                        <ul>\\n                            <li class=\\\"user\\\"><span>Rota Coordinator</span>\\n                            </li>\\n                            <li><a routerLink=\\\"activities\\\" [queryParams]=\\\"{redirectTo:'lastVisited'}\\\" [class.navigated-to]=\\\"navigation.ActivitiesComponent\\\"><span class=\\\"fa fa-hospital-o\\\">&nbsp;&nbsp;Activities</span></a></li>\\n                            <li><a routerLink=\\\"schedule2\\\" [queryParams]=\\\"{redirectTo:'lastVisited'}\\\" [class.navigated-to]=\\\"navigation.Schedule2Component\\\"><span class=\\\"fa fa-calendar\\\" style=\\\"font-size: 0.87em;\\\">&nbsp;&nbsp;On Call ROTA</span></a></li>\\n                            <li><a routerLink=\\\"schedule3\\\" [queryParams]=\\\"{redirectTo:'lastVisited'}\\\" [class.navigated-to]=\\\"navigation.Schedule3Component\\\"><span class=\\\"fa fa-calendar\\\">&nbsp;&nbsp;ROTA</span></a></li>\\n                            <li><a routerLink=\\\"users\\\" [queryParams]=\\\"{redirectTo:'lastVisited'}\\\" [class.navigated-to]=\\\"navigation.UsersComponent\\\"><span class=\\\"fa fa-user-md\\\" style=\\\"font-size: 0.9em\\\">&nbsp;&nbsp;Clinical&nbsp;Staff</span></a></li>\\n                            <li><a routerLink=\\\"skills\\\" [queryParams]=\\\"{redirectTo:'lastVisited'}\\\" [class.navigated-to]=\\\"navigation.Skills\\\"><span class=\\\"fa fa-medkit\\\" aria-hidden=\\\"true\\\" style=\\\"font-size: 0.9em\\\">&nbsp;Skills</span></a></li>\\n                        </ul>\\n                        <button mat-raised-button color=\\\"accent\\\" *ngFor=\\\"let button of taskBarButtons\\\" (click)=\\\"button.callback()\\\">{{button.label}}</button>\\n                        <div class=\\\"logoWrapper logoHebeData justify-content-center\\\">\\n                            <img src=\\\"assets/images/HebeData-Logo.png\\\" alt=\\\"Logo Hebe Data\\\" class=\\\"col-md-12 col-10 col-lg-10\\\" />\\n                        </div>\\n                    </div>\\n                </nav>\\n            </div>\\n        </div>\\n    </div>\\n    <button mat-raised-button *ngIf=\\\"isMainMenuConcealed\\\" class=\\\"fa fa-bars revealMenuButton\\\" (click)=\\\"revealMainMenu()\\\"></button>\\n\\n    <div #mainWrapper class=\\\"col-sm-12 col-lg-10 col-md-8 mainWrapper\\\" [class.col-lg-12]=\\\"isVisible\\\" [class.col-md-12]=\\\"isVisible\\\" [class.col-xl-12]=\\\"isVisible\\\">\\n        <div class=\\\"col-lg-12 mainContent example-sidenav-content\\\">\\n            <router-outlet></router-outlet>\\n        </div>\\n    </div>\\n</div>\\n\\n<div class=\\\"col-12 col-lg-12 col-sm-12 col-md-12\\\">\\n    <div class=\\\"createdBy col-10 col-lg-10 col-md-8 col-sm-8 text-right\\\">\\n        <span style=\\\"color: #252525;\\\">Created by</span> <a href=\\\"https://www.edatachase.com/\\\" target=\\\"_blank\\\"><span>EdataChase Ltd.</span></a>\\n    </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/konstantin/svn/rota-client/src/app/admin/admin.component.html\n// module id = ../../../../../src/app/admin/admin.component.html\n// module chunks = main","import { Component, HostBinding, ViewChild } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\n//import { HttpResponse } from '@angular/common/http';\nimport { Response } from '@angular/http';\nimport { Location } from '@angular/common';\n\nimport {DataSource} from '@angular/cdk/table';\n//import {MdPaginator} from '@angular/material';\nimport {BehaviorSubject} from 'rxjs/BehaviorSubject';\nimport {Observable} from 'rxjs/Observable';\nimport {CdkTableModule} from '@angular/cdk/table';\nimport {MatListModule} from '@angular/material';\nimport {MatGridListModule} from '@angular/material';\nimport 'rxjs/add/operator/startWith';\nimport 'rxjs/add/observable/merge';\nimport 'rxjs/add/operator/map';\n\nimport { ActivatedRoute, Params, Router }  from '@angular/router';\n\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\n\n/** Importing local models **/\nimport { BaseComponent } from '../model/base.component';\n\nimport { MatMenuModule, MatSidenavModule } from '@angular/material';\n\n/* Import local service */\nimport { AdminComponentService } from '../service/admincomponent.service';\n\n@Component({\n    selector: 'admin-component',\n    templateUrl: './admin.component.html',\n    styleUrls: ['./admin.component.css'],\n    //animations: [slideInDownAnimation],\n\n})\n\nexport class AdminComponent extends BaseComponent{\n\n    public currentPage: string = \"Admin\";\n    public loggedUser: string = \"Guest\";\n    public taskBarButtons = [];\n    public isMainMenuConcealed = false;\n    //public alertInfo: AlertServiceInfo;\n\n    public navigation = {\n        ScheduleComponent: true,\n        Schedule2Component: false,\n        Schedule3Component: false,\n        UsersComponent: false,\n        ActivitiesComponent: false,\n        Skills: false,\n    };\n\n    constructor(\n        private route: ActivatedRoute,\n        private adminComponentService: AdminComponentService,\n    ){\n        super();\n        this.adminComponentService.taskBarEvent.subscribe( (buttons) => {\n            this.taskBarButtons.length = 0;\n            this.taskBarButtons.splice(0,0,...buttons);\n        });\n    }\n\n    /** Sets the section associated with the given component as the active one. This method needs to be\n     *  called whenever administration component is initialized. Most likely you will call it from\n     *  *ngOnInit()* of the respective component.\n     *\n     *  Please keep in mind that the component needs to be triggered not from this method\n     *  but from an already implemented mechanism (such as using Router). This method only makes the\n     *  navigation button (which triggers the component) visibly *selected* so it would be obvious\n     *  to the user which section is currently active.\n     *\n     *  @param component Class name of the component that has just been activated\n     */\n    public setActive(component: string) {\n        for(let comp in this.navigation) {\n            this.navigation[comp] = false;\n        }\n\n        this.navigation[component] = true;\n    }\n\n    public revealMainMenu() {\n        try {\n            //this.concealElement('.hideMenuButton');\n            setTimeout(()=>{\n                this.isMainMenuConcealed = false;\n                let mainWrapper = document.querySelector('.mainWrapper') as any;\n\n                mainWrapper.classList.add('col-sm-12');\n                mainWrapper.classList.add('col-lg-10');\n                mainWrapper.classList.add('col-md-8');\n                mainWrapper.style.float = 'right';\n                this.revealElement('.menulist');\n            }, 0);\n        }\n        catch(e) {\n        }\n\n        this.adminComponentService.menuVisibilityEvent.emit(true);\n    }\n\n    public concealMainMenu() {\n        this.concealElement('.menulist');\n\n        setTimeout(()=>{\n            try {\n                let mainWrapper = document.querySelector('.mainWrapper') as any;\n\n                mainWrapper.classList.remove('col-sm-12');\n                mainWrapper.classList.remove('col-lg-10');\n                mainWrapper.classList.remove('col-md-8');\n                mainWrapper.style.float = 'unset';\n\n                this.isMainMenuConcealed = true;\n                this.revealElement('.revealMenuButton');\n            }\n            catch(e) {\n            }\n        }, 300);\n\n        this.adminComponentService.menuVisibilityEvent.emit(false);\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/konstantin/svn/rota-client/src/app/admin/admin.component.ts","import { NgModule } from '@angular/core';\nimport { CommonModule, DatePipe } from '@angular/common';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatButtonModule,\n    MatCheckboxModule,\n    MatCardModule,\n    MatMenuModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatInputModule,\n    MatPaginatorModule,\n    MatTableModule,\n    MatTabsModule,\n    MatSelectModule,\n    MatDatepickerModule,\n    MatNativeDateModule} from '@angular/material';\nimport { DataSource, CdkTableModule } from '@angular/cdk/table';\n\nimport { AdminComponent } from './admin.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { MultiSelectInputModule } from '../lib/multi-select-input/multi-select-input.module';\nimport { SingleSelectInputModule } from '../lib/single-select-input/single-select-input.module';\n\n/* Import local services */\nimport { AdminComponentService } from '../service/admincomponent.service';\nimport { SkillsComponent } from './skills/skills.component';\nimport { SkillTypeListComponent } from './skills/skill-type-list/skill-type-list.component';\n\n/*\nimport { TablePaginationExample } from './table-pagination-example';\n\n*/\nconst adminRoutes: Routes = [\n    {\n        path: 'admin',\n        component: AdminComponent,\n        /*canActivate: [AuthGuard],*/\n        children: [\n            {\n                path: '',\n                redirectTo: 'activities',\n                pathMatch: 'full'\n            },\n            {\n                path: 'schedule2',\n                loadChildren: 'app/admin/schedule2/schedule2.module#Schedule2Module',\n            },\n            {\n                path: 'schedule3',\n                loadChildren: 'app/admin/schedule3/schedule3.module#Schedule3Module',\n            },\n            {\n                path: 'users',\n                loadChildren: 'app/admin/users/users.module#UsersModule',\n            },\n            {\n                path: 'activities',\n                loadChildren: 'app/admin/activities/activities.module#ActivitiesModule',\n            },\n            {\n                path: 'skills',\n               // component: SkillsComponent\n                  loadChildren: 'app/admin/skills/skill.module#SkillModule',\n            },\n        ]\n    }\n];\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatButtonModule,\n        MatCheckboxModule,\n        MatCardModule,\n        MatMenuModule,\n        MatToolbarModule,\n        MatIconModule,\n        MatInputModule,\n        MatPaginatorModule,\n        MatTableModule,\n        MatTabsModule,\n        MatSelectModule,\n        MatDatepickerModule,\n        CdkTableModule,\n        MultiSelectInputModule,\n        SingleSelectInputModule,\n        RouterModule.forChild(adminRoutes),\n    ],\n    declarations: [\n        AdminComponent,\n\n    ],\n    providers: [\n        AdminComponentService,\n    ]\n})\nexport class AdminModule {}\n\n\n\n// WEBPACK FOOTER //\n// /home/konstantin/svn/rota-client/src/app/admin/admin.module.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/konstantin/svn/rota-client/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"<div (contextmenu)=\\\"preventContextMenu()\\\">\\n<router-outlet></router-outlet>\\n\\n<div class=\\\"tm_contextmenu\\\" *ngFor=\\\"let contextMenu of contextMenus\\\" [style.visibility]=\\\"contextMenu.visibility\\\"\\n     [style.left.px]=\\\"contextMenu.left\\\"\\n     [style.top.px]=\\\"contextMenu.top\\\"\\n     [style.height.px]=\\\"contextMenu.height\\\"\\n     [style.width.ch]=\\\"contextMenu.width\\\"\\n     >\\n     <div class=\\\"menu_item\\\" *ngFor=\\\"let item of contextMenu.items\\\"\\n          [class.disabled]=\\\"item.disabled\\\"\\n          [class.checked]=\\\"item.checked\\\"\\n          [class.separator]=\\\"item.separator\\\"\\n          (click)=\\\"item.clickCallback()\\\"\\n          (mouseenter)=\\\"item.mouseEnterCallback($event)\\\"\\n          (mouseleave)=\\\"item.mouseLeaveCallback($event)\\\"\\n          >\\n          <span *ngIf=\\\"item.checked\\\" class=\\\"fa fa-check\\\"></span>{{item.label}}\\n          <span *ngIf=\\\"item.child\\\" class=\\\"fa fa-arrow-right\\\" style=\\\"float:right;\\\"></span>\\n     </div>\\n</div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/konstantin/svn/rota-client/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import { HostListener, Component, EventEmitter } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\n//import { T_Response } from './t_response';\n\nimport { Router } from '@angular/router';\n//import { HttpResponse } from '@angular/common/http';\nimport { Response } from '@angular/http';\nimport { Location } from '@angular/common';\n\n/** Importing local models **/\nimport { ContextMenuEvent } from './model/context-menu';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n    public contextMenus = [];\n    public contextMenuTriggerEvent = new EventEmitter<ContextMenuEvent>();\n\n    constructor (private location: Location) {\n        this.contextMenuTriggerEvent.subscribe((cme => {\n            this.clearContextMenus();\n            this.revealContextMenu(cme);\n        }));\n    }\n\n    public clearContextMenus() {\n        this.contextMenus.length = 0;\n    }\n\n    public revealContextMenu(ev: ContextMenuEvent) {\n        this.contextMenus.push(ev);\n        setTimeout(()=>{\n            ev.displayMenu();\n        });\n    }\n\n    @HostListener('window:click', [ '$event' ])\n    window_click(event: any) {\n        this.clearContextMenus();\n        event.stopImmediatePropagation();\n        event.stopPropagation();\n        event.preventDefault();\n        return false;\n\n    }\n\n    public preventContextMenu() {\n        event.stopImmediatePropagation();\n        event.stopPropagation();\n        event.preventDefault();\n        return false;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/konstantin/svn/rota-client/src/app/app.component.ts","/** Importing 3rd party modules **/\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\nimport { FormsModule }   from '@angular/forms';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { LocalStorageModule } from 'angular-2-local-storage';\nimport { MatButtonModule, MatCheckboxModule, MatCardModule, MatMenuModule,\n    MatToolbarModule, MatIconModule, MatInputModule,MatProgressBarModule,MatNativeDateModule,MatSnackBarModule} from '@angular/material';\nimport { RouterModule, Routes }   from '@angular/router';\nimport { HttpModule }    from '@angular/http';\n\n/** Importing Local Component **/\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login.component';\n\nimport {StompConfig, StompService} from '@stomp/ng2-stompjs';\n\n/** Importing local modules **/\nimport { AdminModule } from './admin/admin.module';\n\n/** Importing local services **/\nimport { BackendService } from './service/backend.service';\nimport { CssService } from './service/css.service';\nimport { Schedule1Service } from './service/schedule1.service';\nimport { Schedule2Service } from './service/schedule2.service';\nimport { Schedule3Service } from './service/schedule3.service';\nimport { UserService } from './service/user.service';\nimport { HistoryService } from './service/history.service';\nimport { ActivityService } from './service/activity.service';\nimport { DynamicFormService } from './service/dynamic-form.service';\nimport { ConfirmDialog } from './lib/confirm/confirm';\nimport {CriteriaService} from './service/criteria.service';\nimport {SkillTypeService} from './service/skill-type.service';\nimport {SkillsService} from './service/skills.service';\n\nconst routes: Routes = [\n    {\n        path: '',\n        children: [\n            {\n                path: 'login-page',\n                component: LoginComponent,\n            },\n            {\n                path: 'customer',\n                loadChildren: 'app/customer/schedule2/schedule2.module#Schedule2Module',\n            },\n        ]\n    }\n];\n\n\nconst stompConfig: StompConfig = {\n    //url: 'ws://192.168.2.23:8090/socket',\n    //    url: 'ws://192.168.2.4:8090/socket',\n    //url: 'ws://192.168.2.2:8080/socket',\n    //url: 'ws://localhost:8090/socket',\n    url: 'ws://rotaswap.edatachase.co.uk:8080/socket',\n\n    // Headers\n    // Typical keys: login, passcode, host\n    headers: {\n        token: '4445',\n    },\n\n    // How often to heartbeat?\n    // Interval in milliseconds, set to 0 to disable\n    heartbeat_in: 0, // Typical value 0 - disabled\n    heartbeat_out: 20000, // Typical value 20000 - every 20 seconds\n\n    // Wait in milliseconds before attempting auto reconnect\n    // Set to 0 to disable\n    // Typical value 5000 (5 seconds)\n    reconnect_delay: 5000,\n\n    // Will log diagnostics on console\n    debug: true\n};\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        ConfirmDialog,\n        LoginComponent,\n        // BarChartDemoComponent,\n    ],\n    entryComponents: [\n        ConfirmDialog,\n    ],\n    imports: [\n        BrowserModule,\n        LocalStorageModule.withConfig({\n            prefix: 'RotaSwapp',\n            storageType: 'localStorage'\n        }),\n        NgbModule.forRoot(),\n        FormsModule,\n        BrowserAnimationsModule,\n        MatButtonModule,\n        MatCheckboxModule,\n        RouterModule,\n        MatCardModule,\n        MatMenuModule,\n        MatToolbarModule,\n        MatIconModule,\n        MatInputModule,\n        MatProgressBarModule,\n        MatSnackBarModule,\n        MatNativeDateModule,\n        ReactiveFormsModule,\n        HttpModule,\n        AdminModule,\n        RouterModule.forRoot(routes),\n    ],\n    providers: [\n        BackendService,\n        StompService,\n        {\n            provide: StompConfig,\n            useValue: stompConfig\n        },\n        HistoryService,\n        CssService,\n        Schedule1Service,\n        Schedule2Service,\n        Schedule3Service,\n        UserService,\n        ActivityService,\n        DynamicFormService,\n        CriteriaService,\n        SkillTypeService,\n        SkillsService,\n    ],\n    bootstrap: [AppComponent]\n})\nexport class AppModule {}\n\n\n\n// WEBPACK FOOTER //\n// /home/konstantin/svn/rota-client/src/app/app.module.ts","module.exports = \"<span style=\\\"white-space: pre;\\\">{{message}}</span>\\n<div style=\\\"clear:both\\\"></div>\\n<button md-button (click)=\\\"onYesClick()\\\">{{yesButtonLabel}}</button>\\n<button md-button #defaultButton (click)=\\\"onNoClick()\\\">{{noButtonLabel}}</button>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/konstantin/svn/rota-client/src/app/lib/confirm/confirm.html\n// module id = ../../../../../src/app/lib/confirm/confirm.html\n// module chunks = main","import { NgModule, HostListener} from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { Component, ViewChild, Inject, ElementRef } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA, MatInputModule, MatPaginator} from '@angular/material';\nimport { DatePipe } from '@angular/common';\nimport { Router } from '@angular/router';\nimport { DataSource } from '@angular/cdk/table';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\n//import { VehicleService } from '../../../service/vehicle.service';\nimport { Observable } from 'rxjs/Rx';\nimport { LocalStorageService } from 'angular-2-local-storage';\n\n\n/** importing Models */\n//import { Vehicle } from '../../../model/vehicle';\n\n@Component({\n    templateUrl: './confirm.html',\n    styles: [`\n    span {\n        margin: 1em;\n        margin-bottom: 8em;\n    }\n\n    div {\n        height: 4em;\n    }\n\n    button {\n        float:right;\n        margin-right: 1em;\n    }\n\n    button:last-of-type {\n        margin-right: 2em;\n    }\n  `]\n})\n\nexport class ConfirmDialog{\n\n    public message = \"\";\n    public yesButtonLabel = \"\";\n    public noButtonLabel = \"\";\n    private yesCallback: Function;\n    @ViewChild('defaultButton') private defaultButton: ElementRef;\n\n\n    constructor (\n        private dialogRef: MatDialogRef<ConfirmDialog>,\n        private router: Router,\n        //private userService: VehicleService,\n        private localStorageService: LocalStorageService,\n        @Inject(MAT_DIALOG_DATA) public data: any) {\n        this.message = data.message;\n        this.yesButtonLabel = data.yesButtonLabel;\n        this.noButtonLabel = data.noButtonLabel;\n        this.yesCallback = data.yesCallback;\n    }\n\n    ngOnInit() {\n    }\n\n    ngAfterViewInit() {\n        setTimeout(() => {\n            try{\n                this.defaultButton.nativeElement.focus();\n            } catch (e) {\n                //...shhhh\n            }\n        }, 500);\n    }\n\n    private onNoClick(): void {\n        this.dialogRef.close();\n    };\n\n    private onYesClick(): void {\n        this.yesCallback();\n        this.dialogRef.close();\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/konstantin/svn/rota-client/src/app/lib/confirm/confirm.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".root {\\n}\\n\\n.root button {\\n    margin-top: 0.5em;\\n    background-color: #3673AA;\\n}\\n\\n.empty {\\n    height: 5em;\\n}\\n\\n.selection {\\n    border: 1px solid;\\n    color: #3673AA;\\n    padding: 0.5em;\\n    overflow: auto;\\n}\\n\\n.no-consultants {\\n    color: #AFAFAF;\\n    text-align: center;\\n}\\n\\n@media screen and (min-width: 1900px) {\\n    .root {\\n    }\\n}\\n\\n@media (min-width: 768px) {\\n    .root{\\n    }\\n}\\n\\n@media (min-width: 992px) {\\n    .root{\\n    }\\n}\\n\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/konstantin/svn/rota-client/src/app/lib/multi-select-input/multi-select-input.component.css\n// module id = ../../../../../src/app/lib/multi-select-input/multi-select-input.component.css\n// module chunks = main","module.exports = \"<div *ngIf=\\\"isSelecting\\\" class=\\\"root\\\">\\n    <div class=\\\"selection\\\" [style.height.px]='height'>\\n      <div *ngFor=\\\"let item of items; let i=index\\\">\\n          <mat-checkbox (click)=\\\"check(item)\\\" class=\\\"checkbox\\\" [checked]=\\\"isChecked(item)\\\">{{item.text}}</mat-checkbox>\\n      </div>\\n    </div>\\n    <button *ngIf=\\\"!listOnly\\\" type=\\\"button\\\" mat-raised-button color=\\\"accent\\\" (click)=\\\"switchSelectionViewOff()\\\">Selection Completed</button>\\n</div>\\n<div *ngIf=\\\"!isSelecting\\\" class=\\\"root\\\">\\n    <div class=\\\"selection\\\" [class.empty]='model.length == 0' [style.height.px]='height'>\\n        <div *ngIf=\\\"model.length==0\\\" class='no-consultants'>{{emptyMessage}}</div>\\n      <div *ngFor=\\\"let item of model; let i=index\\\">\\n          <mat-checkbox [disabled]='true' [checked]='true' class=\\\"checkbox\\\">{{item.text}}</mat-checkbox>\\n      </div>\\n    </div>\\n    <button *ngIf=\\\"!listOnly\\\" type=\\\"button\\\" mat-raised-button color=\\\"accent\\\" (click)=\\\"switchSelectionViewOn()\\\" [disabled]='!enabled'>Select</button>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/konstantin/svn/rota-client/src/app/lib/multi-select-input/multi-select-input.component.html\n// module id = ../../../../../src/app/lib/multi-select-input/multi-select-input.component.html\n// module chunks = main","import { Component, Input, Output, OnInit, OnChanges, HostListener, EventEmitter } from '@angular/core';\nimport { TmDate } from '../../model/tmdate';\nimport { MatCheckboxModule, } from '@angular/material';\n\n@Component({\n    selector: 'multi-select-input-component',\n    templateUrl: './multi-select-input.component.html',\n    styleUrls: ['./multi-select-input.component.css'],\n}) export class MultiSelectInputComponent{\n\n    public isSelecting = false;\n    @Input('items') public items;\n    @Input('model') public model;\n    @Input('enabled') public enabled = true;\n    @Input('listOnly') public listOnly = false;\n    @Input('height') public height = 160;\n    @Input('emptyMessage') public emptyMessage;\n    @Output('modelChange') public modelChange = new EventEmitter<any>();\n    @Input('comparisonCallback') public comparisonCallback = (item1: any, item2: any) => {\n        return item1 == item2;\n    };\n\n    public constructor() {\n        console.log(this.model);\n    }\n\n    public ngAfterViewInit() {\n        if(this.listOnly == true) {\n            this.isSelecting = true;\n        }\n    }\n\n    public isChecked(item: any) {\n        return this.getModelItem(item) != null;\n    }\n\n    public getModelItem(item: any) {\n        for(let mi of this.model) {\n            if(this.comparisonCallback) {\n              if(this.comparisonCallback(mi.value, item.value)) {\n                  return mi;\n              }\n            }\n            else if(mi.value == item.value) {\n                return mi;\n            }\n        }\n        return null;\n    }\n\n    public check(item: any) {\n        let mi = this.getModelItem(item);\n        if(!mi){\n            this.addModelItem(item);\n        }\n        else {\n            this.removeModelItem(item);\n        }\n\n        this.modelChange.emit(this.model);\n    }\n\n    public addModelItem(item: any) {\n        this.model.push(item);\n    }\n\n    public removeModelItem(item: any) {\n        let index = null;\n        for(let i=0; i<=this.model.length; i++) {\n            if(this.comparisonCallback) {\n              if(this.comparisonCallback(this.model[i].value, item.value)) {\n                  index = i;\n                  break;\n              }\n            }\n            else if(this.model[i].value == item.value) {\n                index = i;\n                break;\n            }\n        }\n\n        if(index != null) {\n            this.model.splice(index,1);\n        }\n    }\n\n    public switchSelectionViewOn() {\n        this.isSelecting = true;\n    }\n\n    public switchSelectionViewOff() {\n        this.isSelecting = false;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/konstantin/svn/rota-client/src/app/lib/multi-select-input/multi-select-input.component.ts","import { NgModule}       from '@angular/core';\nimport { MultiSelectInputComponent } from './multi-select-input.component';\nimport { MatCheckboxModule, MatButtonModule} from '@angular/material';\n//import { CommonModule } from '@angular/platform-browser';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n    imports: [\n        MatCheckboxModule,\n        MatButtonModule,\n        CommonModule,\n    ],\n    exports: [\n        MultiSelectInputComponent\n    ],\n    declarations: [\n        MultiSelectInputComponent\n    ],\n})\n\nexport class MultiSelectInputModule {\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/konstantin/svn/rota-client/src/app/lib/multi-select-input/multi-select-input.module.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".root {\\n    height: 100%;\\n}\\n\\n.root button {\\n    margin-top: 0.5em;\\n    background-color: #3673AA;\\n}\\n\\n.empty {\\n    height: 5em;\\n}\\n\\n.selection {\\n    border: 1px solid;\\n    color: #3673AA;\\n    padding: 0.5em;\\n    overflow: auto;\\n    position: relative;\\n    height: 100%;\\n    width: 100%;\\n    font-size: 0.7vw;\\n    margin-top: 0.5em;\\n    background-color: white;\\n}\\n\\n.selection * {\\n    cursor: default;\\n}\\n\\n.selection div {\\n    padding-left: 0.6em;\\n}\\n\\n.selection div:hover {\\n    background-color: aliceblue;\\n}\\n\\n.selection div.selected {\\n    background-color: deepskyblue;\\n}\\n\\n.empty{\\n    color: #AFAFAF;\\n    text-align: center;\\n}\\n\\n@media screen and (min-width: 1900px) {\\n    .root {\\n    }\\n}\\n\\n@media (min-width: 768px) {\\n    .root{\\n    }\\n}\\n\\n@media (min-width: 992px) {\\n    .root{\\n    }\\n}\\n\\n.loadingIndication {\\n    position:absolute;\\n    top:0;\\n    right:0;\\n    bottom:0;\\n    left:0;\\n    background-color:white;\\n    opacity:0.8;\\n    z-index:30;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/konstantin/svn/rota-client/src/app/lib/single-select-input/single-select-input.component.css\n// module id = ../../../../../src/app/lib/single-select-input/single-select-input.component.css\n// module chunks = main","module.exports = \"<div class=\\\"root\\\">\\n    <div class=\\\"selection\\\">\\n        <div *ngIf=\\\"loading\\\" class=\\\"loadingIndication\\\">\\n        <mat-progress-spinner mode=\\\"indeterminate\\\" style=\\\"top:30%; left: 30%\\\">\\n        </mat-progress-spinner>\\n    </div>\\n      <div *ngIf=\\\"items.length==0\\\" class='empty'>{{emptyMessage}}</div>\\n      <div *ngFor=\\\"let item of items; let i=index\\\"\\n           (click)=\\\"check(item)\\\"\\n           (dblclick)=\\\"_doubleClick(item)\\\"\\n           [class.selected]=\\\"item == model\\\">\\n          {{item.text}}\\n      </div>\\n    </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/konstantin/svn/rota-client/src/app/lib/single-select-input/single-select-input.component.html\n// module id = ../../../../../src/app/lib/single-select-input/single-select-input.component.html\n// module chunks = main","import { Component, Input, Output, OnInit, OnChanges, HostListener, EventEmitter } from '@angular/core';\nimport { TmDate } from '../../model/tmdate';\nimport { MatCheckboxModule, MatButtonModule, MatProgressBarModule} from '@angular/material';\n\n@Component({\n    selector: 'single-select-input-component',\n    templateUrl: './single-select-input.component.html',\n    styleUrls: ['./single-select-input.component.css'],\n}) export class SingleSelectInputComponent{\n\n    public isSelecting = false;\n    @Input('items') public items;\n    @Input('model') public model;\n    @Input('enabled') public enabled = true;\n    @Input('listOnly') public listOnly = false;\n    @Input('height') public height = 160;\n    @Input('emptyMessage') public emptyMessage;\n    @Output('modelChange') public modelChange = new EventEmitter<any>();\n    @Output() public doubleClick = new EventEmitter<any>();\n    @Input() public loading = false;\n\n    public constructor() {\n    }\n\n    public ngAfterViewInit() {\n    }\n\n    public check(item: any) {\n        this.model = item;\n        this.modelChange.emit(this.model);\n    }\n\n    public _doubleClick(item: any) {\n        this.model = item;\n        this.doubleClick.emit(this.model);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/konstantin/svn/rota-client/src/app/lib/single-select-input/single-select-input.component.ts","import { NgModule}       from '@angular/core';\nimport { SingleSelectInputComponent } from './single-select-input.component';\nimport { MatCheckboxModule, MatButtonModule, MatProgressSpinnerModule,MatProgressBarModule} from '@angular/material';\n//import { CommonModule } from '@angular/platform-browser';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n    imports: [\n        MatCheckboxModule,\n        MatButtonModule,\n        MatProgressBarModule,\n        MatProgressSpinnerModule,\n        CommonModule,\n    ],\n    exports: [\n        SingleSelectInputComponent\n    ],\n    declarations: [\n        SingleSelectInputComponent\n    ],\n})\n\nexport class SingleSelectInputModule {\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/konstantin/svn/rota-client/src/app/lib/single-select-input/single-select-input.module.ts","module.exports = \"<mat-toolbar color=\\\"primary\\\">\\n\\n    <span>RotaSwapp</span>\\n    <span class=\\\"example-spacer\\\"></span>\\n    \\n</mat-toolbar>\\n\\n<!--The whole content below can be removed with the new code.-->\\n<div style=\\\"text-align:center; margin-top: 2em\\\">\\n  <h3>\\n    Please login with your credentials\\n  </h3>\\n</div>\\n\\n<div style=\\\"text-align: center\\\">\\n  <form class=\\\"example-form\\\" (ngSubmit)=\\\"login()\\\" [formGroup]=\\\"loginForm\\\">\\n    <mat-input-container class=\\\"example-full-width\\\">\\n      <input matInput placeholder=\\\"User Name\\\" formControlName=\\\"uname\\\">\\n    </mat-input-container>\\n    <div></div>\\n    <mat-input-container class=\\\"example-full-width\\\">\\n      <input matInput placeholder=\\\"Password\\\" type=\\\"password\\\" formControlName=\\\"password\\\">\\n    </mat-input-container>\\n\\n    <input type=\\\"hidden\\\" name=\\\"_csrf\\\" value=\\\"${_csrf.token}\\\" />\\n  </form>\\n\\n  <button mat-raised-button type=\\\"submit\\\" (click)=\\\"login()\\\">login</button>\\n</div>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/konstantin/svn/rota-client/src/app/login.component.html\n// module id = ../../../../../src/app/login.component.html\n// module chunks = main","import { Component, OnInit }   from '@angular/core';\nimport { Router, ActivatedRoute }      from '@angular/router';\nimport { FormControl, FormGroup, FormBuilder, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { Headers, Http, Response, RequestOptions } from '@angular/http';\nimport * as Rx from 'rxjs/Rx';\n\n@Component({\n    templateUrl: './login.component.html'\n})\n\nexport class LoginComponent {\n    message: string;\n\n    private loginForm;\n\n    constructor(public router: Router,\n        private route: ActivatedRoute,\n        private http: Http,\n        private formBuilder: FormBuilder) {\n        this.setMessage();\n\n        this.loginForm = this.formBuilder.group({\n            uname: new FormControl(),\n            password: new FormControl(),\n        });\n    }\n\n    private ngOnInit() {\n        this.route.params.subscribe(params => {\n            if(params['username']) {\n                //this.authService.login(params['username']);\n            }\n        });\n    }\n\n    setMessage() {\n        //this.message = 'Logged ' + (this.authService.isLoggedIn ? 'in' : 'out');\n    }\n\n    login() {\n        console.log(\"login attempt\");\n        this.message = 'Trying to log in ...';\n\n        let url = '/login';\n\n        var headers = new Headers();\n        headers.append('Content-Type', 'application/x-www-form-urlencoded');\n\n        let options = new RequestOptions({ headers: headers });\n\n        let hidden = document.querySelector('input[type=hidden]');\n        let hidden_data = \"\";\n        try{\n           hidden_data = \"&\"+hidden.getAttribute(\"name\")+\"=\"+hidden.getAttribute(\"value\"); \n        }\n        catch (e){\n        }\n\n        console.log(this.loginForm.controls.uname);\n        var body = \"username=\" + this.loginForm.value.uname + \"&password=\" + this.loginForm.value.password + hidden_data + \"&submit=Login\";\n        return new Promise((resolve) => {\n            this.http.post(url, body, options).subscribe((data) => {\n                console.log(data.headers);\n            }\n            )\n        });\n        // this.authService.login().subscribe(() => {\n        //   this.setMessage();\n        //   if (this.authService.isLoggedIn) {\n        //     // Get the redirect URL from our auth service\n        //     // If no redirect has been set, use the default\n        //     let redirect = this.authService.redirectUrl ? this.authService.redirectUrl : '/admin/users';\n\n        //     // Redirect the user\n        //     this.router.navigate([redirect]);\n        //   }\n        // });\n    }\n\n    logout() {\n        //this.authService.logout();\n        //this.setMessage();\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/konstantin/svn/rota-client/src/app/login.component.ts","import { CriteriaExpression } from './criteria';\n\nexport class Activity {\n    id: number;\n    name: string;\n    type: any;\n    description: string; \n    scheduleStartDate: any;\n    scheduleEndDate: any;\n    activityShifts: any[];\n    activityConsultants: any[];\n    //activitySpecialities?: any[];\n    expression: CriteriaExpression;\n\n    public constructor(input: any) {\n        this.id = input.id || 0;\n        this.name = input.name || '';\n        this.type = input.type || {id: 0};\n        this.description = input.description || '';\n        this.scheduleStartDate = input.scheduleStartDate || '';\n        this.scheduleEndDate = input.scheduleEndDate || null;\n        this.activityShifts = input.activityShifts || [];\n        this.activityConsultants = input.activityConsultants || [];\n        this.expression = input.expression || {};\n    }\n\n    public pack() {\n        this.expression.pack();\n    }\n}\n\nexport class ActivityType {\n    static Training: string = 'Trainig';\n    static Service: string = 'Service';\n    static Late: string = 'Late';\n    static Night: string = 'Night';\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/konstantin/svn/rota-client/src/app/model/activity.ts","// import { Component } from '@angular/core';\n//import { Location } from '@angular/common';\n//import { Router } from '@angular/router';\n\nexport class BaseComponent  {\n\n    public revealElement(selector: string) {\n        let elements = document.querySelectorAll(selector) as any;\n        for(let e of elements) {\n            e.classList.remove(\"fadeOut\");\n            e.classList.remove(\"fadeIn\");\n\n            e.classList.add(\"fadeIn\");\n        }\n    }\n\n    public concealElement(selector: string) {\n        let elements = document.querySelectorAll(selector) as any;\n        for(let e of elements) {\n            e.classList.remove(\"fadeOut\");\n            e.classList.remove(\"fadeIn\");\n\n            e.classList.add(\"fadeOut\");\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/konstantin/svn/rota-client/src/app/model/base.component.ts","import { UserService } from '../service/user.service';\n\nexport enum Operation{\n    AND=\"AND\",\n    OR=\"OR\"\n}\n\nexport class CriteriaExpression {\n    public id: number|null;\n    public operationType: string;\n    public expressionRowSet: ExpressionRowSetEntity[]=[];\n    public static criteriaTypeOptions: any[] = [];\n    public static criteriaOptions: any[] = [];\n\n    private static _userService: UserService;\n\n    constructor(object: any) {\n\n        this.id=object.id;\n        this.operationType=object.operationType;\n        for(let item of object.expressionRowSet)\n        {\n            this.expressionRowSet.push(new ExpressionRowSetEntity(item));\n        }\n\n    }\n\n    public createExpressionRowSetEntity()\n    {\n        let row = ExpressionRowSetEntity.createEmpty();\n        this.expressionRowSet.push(row);\n        return row;\n    }\n\n    public static createEmpty()\n    {\n        return new CriteriaExpression(\n            {id:null,operationType:Operation.AND,expressionRowSet:[]});\n    }\n\n    public removeExpressionRowSetEntity(expressionRowSetEntity: ExpressionRowSetEntity) {\n        let index = -1;\n        let counter = 0;\n        for(let row of this.expressionRowSet) {\n            if(row == expressionRowSetEntity) {\n                index = counter;\n                break;\n            }\n            counter++;\n        }\n\n        if(index > -1) {\n            this.expressionRowSet.splice(index, 1);\n        }\n    }\n\n    public getPayload()\n    {\n        this.pack();\n        return this;\n    }\n\n    public pack() {\n        for(let row of this.expressionRowSet) {\n            for(let expr of row.expressionConfigurationSet) {\n                expr.pack();\n            }\n        }\n    }\n\n    public static setUserService(_userService: UserService) {\n        CriteriaExpression._userService = _userService;\n        ExpressionConfigurationSetEntity.userService = _userService;\n    }\n    \n    private static fetchCriteriaTypeOptions() {\n        return CriteriaExpression._userService._getCriteriaTypes().then(criteriaTypes => {\n            for(let _type of criteriaTypes) {\n                this.criteriaTypeOptions.push(_type);\n                //ExpressionConfigurationSetEntity.critebb\n            }\n        });\n    }\n    \n    private static fetchCriteriaOptions() {\n        return CriteriaExpression._userService._getCriterias().then(criterias => {\n            for(let _criteria of criterias) {\n                this.criteriaOptions.push(_criteria);\n                //ExpressionConfigurationSetEntity.critebb\n            }\n        });\n    }\n}\n\nexport class ExpressionRowSetEntity {\n    id: number|null;\n    operationType: string;\n    expressionConfigurationSet: (ExpressionConfigurationSetEntity)[]=[];\n    constructor(object: any) {\n        this.id=object.id;\n        this.operationType=object.operationType;\n        for(let item of object.expressionConfigurationSet)\n        {\n            this.expressionConfigurationSet.push(new ExpressionConfigurationSetEntity(item));\n        }\n\n    }\n\n    public static createEmpty()\n    {\n        return new ExpressionRowSetEntity(\n            {id:null,operationType:Operation.OR,expressionConfigurationSet:[]});\n    }\n\n    public removeExpressionConfigurationSetEntity(expressionConfigurationSetEntity: ExpressionConfigurationSetEntity) {\n        let index = -1;\n        let counter = 0;\n        for(let expression of this.expressionConfigurationSet) {\n            if(expression == expressionConfigurationSetEntity) {\n                index = counter;\n                break;\n            }\n            counter++;\n        }\n\n        if(index > -1) {\n            this.expressionConfigurationSet.splice(index, 1);\n        }\n    }\n\n    createExpressionConfigurationSetEntity()\n    {\n        this.expressionConfigurationSet.push(ExpressionConfigurationSetEntity.createEmpty());\n    }\n}\n\nexport class ExpressionConfigurationSetEntity {\n    id: number|null;\n    operationType: string;\n    configurationCriteriaSet: (ConfigurationCriteriaSetEntity)[]=[];\n    count: number;\n    model?: any = [];\n    options?: any[] = [];\n    criteriaType: any;\n    public static userService: UserService;\n\n    private configurationCriteriaSetToCriteriaTypeMap={};\n\n    constructor(object: any) {\n        this.id=object.id;\n        this.operationType=object.operationType;\n        this.count=object.count;\n        for(let item of object.configurationCriteriaSet)\n        {\n            this.configurationCriteriaSet.push(new ConfigurationCriteriaSetEntity(item));\n        }\n\n        //\n        //User first ConfigurationCriteria's type. If there are no ConfigurationCriterias default to criteria type \"Grade\"\n        //\n        if(this.configurationCriteriaSet[0] && this.configurationCriteriaSet[0].criteria) {\n            this.criteriaType = this.configurationCriteriaSet[0].criteria.criteriaType.name;\n        }\n        else {\n            this.criteriaType = 'Grade'; //quick and dirty\n        }\n        this.putCriteriaOptions(this.criteriaType);\n\n        //\n        //Since the data model that arrives from the server differs from the structure used by the form we need to unpack the former\n        this.unpack();\n    }\n\n    get criteriaTypeOptions(): string[] {\n        return CriteriaExpression.criteriaTypeOptions;\n    }\n\n    public static createEmpty()\n    {\n        return new ExpressionConfigurationSetEntity(\n            {id:null,operationType:Operation.OR,configurationCriteriaSet:[],count:0});\n    }\n\n    public pack() {\n        this.configurationCriteriaSet = [];\n\n        for(let item in this.configurationCriteriaSetToCriteriaTypeMap) {\n            if(this.configurationCriteriaSetToCriteriaTypeMap[item].length>0) {\n                for(let configurationCriteriaSetItem of this.configurationCriteriaSetToCriteriaTypeMap[item]) {\n                    this.configurationCriteriaSet.push(configurationCriteriaSetItem);\n                }\n            }\n        }\n    }\n\n    public unpack() {\n        if(this.configurationCriteriaSet && this.configurationCriteriaSet.length > 0) {\n            for(let v of this.configurationCriteriaSet) {\n                this.model.push({value:v, text:v.criteria.name});\n            }\n        }\n    }\n\n    public changeCriteriaType(criteriaType: string) {\n        this.model.length = 0;\n        this.putCriteriaOptions(criteriaType);\n    }\n\n    public putCriteriaOptions(criteriaType: string) {\n        this.options.length = 0;\n\n        for(let _criteria of CriteriaExpression.criteriaOptions) {\n            if(_criteria.criteriaType.name == criteriaType) {\n                let criteriaEntity = new ConfigurationCriteriaSetEntity({id: null, criteria: _criteria});\n                this.options.push(criteriaEntity);\n            }\n        }\n    }\n\n    private static _comparisonCallback = (item1: any, item2: any) => {\n         return item1.criteria.name == item2.criteria.name;\n    }\n\n    get comparisonCallback(): Function {\n        return ExpressionConfigurationSetEntity._comparisonCallback; \n    }\n\n    public initConfigurationCriteriaSetByCriteriaType(typeList : CriteriaType[])\n    {\n        for(let type of typeList)\n        {\n            this.configurationCriteriaSetToCriteriaTypeMap[type.id]=[];\n        }\n        for (let configurationCriteriaSetItem of this.configurationCriteriaSet)\n        {\n            /* some category might not be part of typeList */\n            if(!(configurationCriteriaSetItem.criteria.criteriaType.id in this.configurationCriteriaSetToCriteriaTypeMap))\n            {\n                this.configurationCriteriaSetToCriteriaTypeMap[configurationCriteriaSetItem.criteria.criteriaType.id]=[];\n            }\n            this.configurationCriteriaSetToCriteriaTypeMap[configurationCriteriaSetItem.criteria.criteriaType.id].push(configurationCriteriaSetItem);\n        }\n    }\n\n    public getConfigurationCriteriaSetByType(type: CriteriaType):(ConfigurationCriteriaSetEntity)[]\n    {\n        return this.configurationCriteriaSetToCriteriaTypeMap[type.id];\n    }\n}\n\nexport class ConfigurationCriteriaSetEntity {\n    id: number|null;\n    criteria: Criteria;\n    constructor(object: any) {\n        this.id=object.id;\n        this.criteria=new Criteria(object.criteria);\n    }\n}\n\nexport class Criteria {\n    id: number|null;\n    name: string;\n    criteriaType: CriteriaType;\n\n    constructor(object: any) {\n        this.id = object.id;\n        this.name = object.name;\n        if ( object.criteriaType) {\n            this.criteriaType = new CriteriaType(object.criteriaType);\n        }\n    }\n}\n\nexport class CriteriaType {\n    id: number|null;\n    name: string;\n\n    constructor(object: any) {\n        this.id = object.id;\n        this.name = object.name;\n    }\n}\n\nexport class CriteriaList {\n    private categoryList : CriteriaType[] =[];\n    private mapTypeToCriteria={};\n\n    public getCategoryList(): CriteriaType[] {\n        return this.categoryList;\n    }\n\n    public getCriteriaListByCategory(type: CriteriaType): ConfigurationCriteriaSetEntity[] {\n        return this.mapTypeToCriteria[type.id];\n    }\n\n    public getCriteriaListByCategoryId(id: number): ConfigurationCriteriaSetEntity[] {\n        return this.mapTypeToCriteria[id];\n    }\n\n    public addCriteria(criteria: Criteria){\n        if (!(criteria.criteriaType.id in this.mapTypeToCriteria)) {\n            this.mapTypeToCriteria[criteria.criteriaType.id] = [];\n            this.categoryList.push(criteria.criteriaType);\n        }\n        this.mapTypeToCriteria[criteria.criteriaType.id].push(new ConfigurationCriteriaSetEntity({'criteria':criteria,'id':null}));\n    }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// /home/konstantin/svn/rota-client/src/app/model/criteria.ts","export class QuestionBase<T>{\n    value: T;\n    key: string;\n    model?: any;\n    /**\n     * Used by MultiSelectInput to force it list all options all the time\n     */\n    listOnly?: any;\n    label: string;\n    required: boolean;\n    order: number;\n    controlType: string;\n    severity: string;\n    column: number;\n    /**\n     * Used by the UserForm class to keep related fields in a single column\n     */\n    group?: string;\n\n    constructor(options: {\n        value?: T,\n        key?: string,\n        label?: string,\n        required?: boolean,\n        order?: number,\n        controlType?: string,\n        severity?: string,\n        column?: number,\n        group?: string,\n    } = {}) {\n        this.value = options.value;\n        this.key = options.key || '';\n        this.label = options.label || '';\n        this.required = !!options.required;\n        this.order = options.order === undefined ? 1 : options.order;\n        this.controlType = options.controlType || '';\n        this.severity = options.severity || '';\n        this.column = options.column || 0;\n        this.group = options.group || '';\n    }\n}\n\nexport class CheckboxQuestion extends QuestionBase<string> {\n    controlType = 'checkbox';\n    type: string;\n\n    constructor(options: {} = {}) {\n        super(options);\n        this.type = options['type'] || '';\n    }\n}\n\nexport class TextboxQuestion extends QuestionBase<string> {\n    controlType = 'textbox';\n    type: string;\n\n    constructor(options: {} = {}) {\n        super(options);\n        this.type = options['type'] || '';\n    }\n}\n\nexport class DropdownQuestion extends QuestionBase<string> {\n    controlType = 'dropdown';\n    options: {key: string, value: string}[] = [];\n    selected: {};\n\n    constructor(options: {} = {}) {\n        super(options);\n        this.options = options['options'] || [];\n        this.selected = options['selected'] || {};\n    }\n}\n\nexport class MultiSelectQuestion extends QuestionBase<any> {\n    controlType = 'multiselect';\n    comparisonCallback = null;\n    label: string = '';\n    options: {text: string, value: any}[] = [];\n    model:{text: string, value: any}[] = [];\n\n    constructor(options: {} = {}) {\n        super(options);\n        this.listOnly = options['listOnly'] || false;\n        this.label = options['label'] || '';\n        this.options = options['options'] || [];\n        this.model = options['model'] || [];\n        this.comparisonCallback = options['comparisonCallback'];\n    }\n}\n\nexport class AppendNewItem extends QuestionBase<any> {\n    callback: Function|null;\n    controlType: 'addNewItem';\n    label: string = '';\n    tooltip: string = '';\n\n    constructor(options: {} = {}) {\n        super(options);\n        this.label = options['label'] || '';\n        this.tooltip = options['tooltip'] || '';\n        this.callback = options['callback'] || null;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/konstantin/svn/rota-client/src/app/model/question-base.ts","import { User } from './user';\nimport { TmDate, TmLength } from  './tmdate';\nimport { Activity } from './activity';\n\nexport class AssignmentEmployee{\n    id: number;\n    employee: User;\n}\n\nexport class AssignmentActivity{\n    id: number;\n    activity: Activity;\n}\n\nexport class AssignmentShift {\n    id: number;\n    shift: string;\n}\n\nexport class Assignment {\n    id?: number;\n    assignmentId: number;\n    assignmentEmployees: AssignmentEmployee[];\n    //    assignmentTrailers: AssignmentTrailer[];\n    assignmentActivities: AssignmentActivity[];\n    startTime?: TmDate;\n    dateFrom?: number;\n    timeLength?: TmLength;\n    dateTo?: number;\n    offsetLeft: number;\n    width: number;\n    z_index?: number;\n    z_index_old?: number;\n    shift?: string;\n    shiftName?: string;\n    day?: number;\n    weekDay?: number;\n    unsuitable?: boolean;\n    highlighted?: boolean;\n    /** Used to specify that employee(s) from this assignment are being selected for movement to another assignment. It's purpose is to highlight the assignment\n     * in a distinct way*/\n    origin?: boolean;\n    selected?: boolean;\n    markedForComparison?: boolean;\n\n    public constructor(ass) {\n        this.id = ass.id;\n        this.assignmentId = ass.id;\n        this.assignmentEmployees = ass.assignmentEmployees;\n        this.assignmentActivities = ass.assignmentActivities ;\n        this.startTime = ass.startTime;\n        this.dateFrom = ass.dateFrom;\n        this.timeLength = ass.timeLength;\n        this.dateTo = ass.dateTo;\n        this.offsetLeft = ass.offsetLeft;\n        this.width = ass.width;\n        this.z_index = ass.z_index;\n        this.shift = ass.shift;\n        this.shiftName = ass.shiftName;\n        this.day = ass.day;\n        this.weekDay = ass.weekDay;\n    }\n\n\n    public getShiftName() {\n        switch(this.shift) {\n            case 'OffNight':\n                return 'Night';\n            case 'OffLate':\n                return 'Zero Late';\n            case 'AnnualLate':\n                return 'Annual Late';\n            case 'NotWorkingLate':\n                return 'Off Late';\n            case 'StudyLate':\n                return 'Study Late';\n            case 'OffNight':\n                return 'Zero Night';\n            case 'AnnualNight':\n                return 'Annual Night';\n            case 'NotWorkingNight':\n                return 'Off Night';\n            case 'StudyNight':\n                return 'Study Night';\n            case 'Off':\n                return 'Zero';\n            case 'NotWorking':\n                return 'Off';\n            default:\n                return this.shift;\n        }\n    }\n}\n\nexport class ActivitySchedule{\n    activity?: Activity;\n    registrar?: User;\n    assignments: Assignment[];\n    highlighted?: boolean = false;\n}\n\nexport class EmployeeSchedule{\n    employee?: User;\n    assignments: Assignment[];\n    highlighted?: boolean = false;\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/konstantin/svn/rota-client/src/app/model/schedule.ts","export class TmDate {\n\n    public date: Date;\n    /** Determines whether this TmDate object should be highlighted. Whether to honor this is up to the component which displayes this object **/\n    public highlighted: boolean = false;\n\n    constructor(){\n        this.date = new Date();\n    }\n\n    /** Returns instance with current date and clock of 00:00:00 */\n    public static today(){\n        let instance = new this();\n        instance.setTime(\"00:00:00 UTC\");\n        return instance;\n    }\n\n    public static getMonthList () {\n        return ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n    }\n\n    /** Returns instance with current date and time. Analogous to calling constructor */\n    public static now(){\n        return new this();\n    }\n\n    /** Returns a copy of the instance */\n    public fork(): TmDate {\n        let forked = new TmDate();\n        forked.date.setTime(this.date.getTime());\n        return forked;\n    }\n\n    public setTime(time: string): this {\n        var regexp = new RegExp('(\\\\d\\\\d):(\\\\d\\\\d):(\\\\d\\\\d)');\n        var match = regexp.exec(time);\n        this.date.setUTCHours(+match[1]);\n        this.date.setUTCMinutes(+match[2]);\n        this.date.setUTCSeconds(+match[3]);\n\n        // return instance to allow for chaining\n        return this;\n    }\n\n    public getDateString(): string {\n        let month: number|string = this.date.getUTCMonth()+1;\n        let hour: number|string = this.date.getUTCHours();\n        let minute: number|string = this.date.getUTCMinutes();\n        let second: number|string = this.date.getUTCSeconds();\n        let date: number|string = this.date.getUTCDate();\n\n        if (month < 10) {\n            month = \"0\"+month;\n        }\n        if (hour < 10) {\n            hour = \"0\"+hour;\n        }\n        if (minute < 10) {\n            minute = \"0\"+minute;\n        }\n        if (second < 10) {\n            second = \"0\"+second;\n        }\n        if(date < 10) {\n            date = \"0\"+date;\n        }\n        \n        return this.date.getUTCFullYear()+\"-\"+month+\"-\"+date+\" \"\n               +hour+\":\"+minute+\":\"+second;\n    }\n\n    public getShortDateWithYear(): string {\n        let month: any = this.date.getUTCMonth()+1;\n        if (month < 10) {\n            month = \"0\"+month;\n        }\n        return this.date.getUTCFullYear()+\"/\"+month+\"/\"+this.date.getUTCDate(); \n    }\n\n    public get_ISO_8601_Date() {\n        let month: any = this.date.getUTCMonth()+1;\n        if (month < 10) {\n            month = \"0\"+month;\n        }\n        let date: any = this.date.getUTCDate();\n        if (date < 10) {\n            date = \"0\"+date;\n        }\n        return this.date.getUTCFullYear()+\"-\"+month+\"-\"+date;\n    }\n\n    public get_ISO_8601_Week_Number() {\n        var target  = new Date(this.date.valueOf());\n        var dayNr   = (this.date.getDay() + 6) % 7;\n        target.setDate(target.getDate() - dayNr + 3);\n        var firstThursday = target.valueOf();\n        target.setMonth(0, 1);\n        if (target.getDay() != 4) {\n            target.setMonth(0, 1 + ((4 - target.getDay()) + 7) % 7);\n        }\n\n        return 1 + Math.ceil((firstThursday - target.getTime()) / 604800000);\n    }\n\n    public getShortDate(): string {\n        let month: any = this.date.getUTCMonth()+1;\n        if (month < 10) {\n            month = \"0\"+month;\n        }\n        return this.date.getUTCDate()+\"/\"+month; \n    }\n\n    public alterDate(day: number): TmDate {\n        this.date.setTime(this.date.getTime()+(3600*1000*24*day));\n\n        return this;\n    }\n\n    public setFromTmDate(date: TmDate): this{\n        this.date = new Date(date.date);\n\n        // return instance to allow for chaining\n        return this;\n    }\n\n    public setFromDate(date: any): this {\n        this.date = new Date(date);\n        return this;\n    }\n\n    /** Set instance's date. Format is dd.mm.yyyy*/\n    public setDate(date: string) {\n        var regexp = new RegExp('(\\\\d\\\\d).(\\\\d\\\\d).(\\\\d\\\\d\\\\d\\\\d)');\n        var match = regexp.exec(date);\n        this.date.setUTCDate(+match[1]);\n        this.date.setUTCMonth(+match[2]);\n        this.date.setUTCFullYear(+match[3]);\n    }\n\n    /** Set instance's date. Format is dd.mm.yyyy*/\n    public setDateYMD(date: string) {\n        var regexp = new RegExp('(\\\\d\\\\d\\\\d\\\\d).(\\\\d\\\\d).(\\\\d\\\\d)');\n        var match = regexp.exec(date);\n        this.date.setUTCFullYear(+match[1]);\n        this.date.setUTCMonth(+match[2]);\n        this.date.setUTCDate(+match[3]);\n    }\n\n    /** Alters month according to parameter. Use relative numbers\n     */\n    public alterMonth(month: number) {\n        let currentMonth = this.date.getUTCMonth();\n        this.date.setUTCMonth(currentMonth + month);\n\n        return this;\n    }\n\n    /** Performs mathematical less-than-or-equal test between current instance and another one */\n    public isLessOrEqual(otherDate: TmDate): boolean {\n        return (this.date <= otherDate.date);\n    }\n\n    public isGreaterOrEqual(otherDate: TmDate): boolean {\n        return (this.date >= otherDate.date);\n    }\n\n    public getWeekDay() {\n        switch(this.date.getDay()) {\n            case 0:\n                return 'Sunday';\n            case 1:\n                return 'Monday';\n            case 2:\n                return 'Tuesday';\n            case 3:\n                return 'Wednesday';\n            case 4:\n                return 'Thursday';\n            case 5:\n                return 'Friday';\n            case 6:\n                return 'Saturday';\n        }\n    }\n\n    public getMonth() {\n        switch(this.date.getMonth()) {\n            case 0:\n                return 'January';\n            case 1:\n                return 'February';\n            case 2:\n                return 'March';\n            case 3:\n                return 'April';\n            case 4:\n                return 'May';\n            case 5:\n                return 'June';\n            case 6:\n                return 'July';\n            case 7:\n                return 'August';\n            case 8:\n                return 'September';\n            case 9:\n                return 'October';\n            case 10:\n                return 'November';\n            case 11:\n                return 'December';\n        }\n    }\n\n    public setMonth(month: string) {\n        console.log(this.date);\n        switch(month) {\n            case 'January':\n                this.date.setUTCMonth(0);\n                break;\n            case 'February':\n                this.date.setUTCMonth(1);\n                break;\n            case 'March':\n                this.date.setUTCMonth(2);\n                break;\n            case 'April':\n                this.date.setUTCMonth(3);\n                break;\n            case 'May':\n                this.date.setUTCMonth(4);\n                break;\n            case 'June':\n                this.date.setUTCMonth(5);\n                break;\n            case 'July':\n                this.date.setUTCMonth(6);\n                break;\n            case 'August':\n                this.date.setUTCMonth(7);\n                break;\n            case 'September':\n                this.date.setUTCMonth(8);\n                break;\n            case 'October':\n                this.date.setUTCMonth(9);\n                break;\n            case 'November':\n                this.date.setUTCMonth(10);\n                break;\n            case 'December':\n                this.date.setUTCMonth(11);\n                break;\n        }\n        console.log(this.date);\n    }\n\n    public stdTimezoneOffset() {\n        var jan = new Date(this.date.getFullYear(), 0, 1);\n        var jul = new Date(this.date.getFullYear(), 6, 1);\n        return Math.max(jan.getTimezoneOffset(), jul.getTimezoneOffset());\n    }\n\n    public plusLength(length: TmLength) {\n        let newDate = this.fork();\n        newDate.date.setTime(newDate.date.getTime()+(length.seconds*1000));\n        return newDate;\n    }\n\n    public getHumanDate() {\n        let date:any = this.date.getUTCDate();\n        switch(date) {\n            case 1:\n                date = '1st';\n                break;\n            case 2:\n                date = '2nd';\n                break;\n            case 3:\n                date = '3rd';\n                break;\n            default:\n                date = date+\"th\";\n                break;\n        }\n\n        return date+\" of \"+this.getMonth()+\" \"+this.date.getUTCFullYear();\n    }\n}\n\n/** A convinient model for keeping time length. */\nexport class TmLength {\n\n    public seconds: number;\n\n    public setHours(hours: number) {\n        this.seconds = hours*3600;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/konstantin/svn/rota-client/src/app/model/tmdate.ts","import { QuestionBase, TextboxQuestion, CheckboxQuestion, MultiSelectQuestion, DropdownQuestion, AppendNewItem } from '../model/question-base';\nimport { FormGroup } from '@angular/forms';\nimport { DynamicFormService} from  '../service/dynamic-form.service';\n\nexport class User {\n    id: number;\n    grade: string;\n    trainingLevel: string;\n    role: string;\n    firstName: string;\n    lastName: string;\n    title: string;\n    excludeFromRota: boolean;\n    initials: string;\n    dateCreated: string;\n    color: string;\n    workingDays: WorkingDay[];\n    specialInterests?: any[];\n    employees: User[];\n    supervisors: any[];\n    phones:Phone[];\n    emails:Email[];\n    employeeCriteria?: EmployeeCriteria[];\n\n    /**\n     * Accepts a plain user object and blesses it into a feature User object\n     */\n    public constructor(user: any) {\n        this.id = user.id;\n        this.grade = user.grade;\n        this.trainingLevel = user.trainingLevel;\n        this.role = user.role;\n        this.firstName = user.firstName;\n        this.lastName = user.lastName;\n        this.title = user.title;\n        this.excludeFromRota = user.excludeFromRota;\n        this.initials = user.initials;\n        this.dateCreated = user.dateCreated;\n        this.color = user.color;\n        this.workingDays = WorkingDay.factory(user.workingDays);\n        this.specialInterests = user.specialInterests;\n        //this.employees = User.factory(user.employees);\n        this.supervisors = User.factory(user.supervisors);\n        this.phones = Phone.factory(user.phones);\n        this.emails = Email.factory(user.emails);\n        this.employeeCriteria = EmployeeCriteria.factory(user.employeeCriteria);\n    }\n\n    /**\n     * Factory method for instantiating multiple User objects at once. Accepts\n     * an array of plain user objects and blesses them into feature User objects\n     */\n    public static factory(input: object[]): User[] {\n        let users: User[] = [];\n\n        for(let user of input) {\n            users.push(new User(user));\n        }\n\n        return users;\n    }\n}\n\nclass Form {\n    public dynamicFormStruct: QuestionBase<any>[] = [];\n    public formGroup: FormGroup;\n\n    public getFormStructByKey(key: string) {\n        for(let struct of this.dynamicFormStruct) {\n            if(struct.key == key) {\n                return struct;\n            }\n        }\n        return null;\n    }\n\n    public putAfterLast(key: string, item: any) {\n        let index;\n        for(let i=this.dynamicFormStruct.length-1; i >= 0; i--) {\n            if(this.dynamicFormStruct[i].key == key) {\n                index = i;\n            }\n        }\n\n        this.dynamicFormStruct.splice(index, 0, item);\n    }\n}\n\nexport class UserForm {\n\n    public formDisabled = false;\n\n    /**\n     * The term dynamicForm is a bit ambiguous here. Both **dynamicForm** and **commonForm** are Dynamic Form structures. The reason\n     * it's called like this is because fields contained here are defined by the backend and can be configured at any time to be\n     * something different. Compare this to the *common* fields which are more rigid and hard to alter than the dynamic counterparts.\n     */\n    public dynamicForm: Form;\n    /**\n     * This is a DynamicForm structure just like **dynamicForm**\n     */\n    public commonForm: Form;\n    public user: User;\n    public static dynamicFormService;\n    public static userService;\n\n    public static weekDays = [\n        {text: 'Monday', value: 'Monday'},\n        {text: 'Tuesday', value: 'Tuesday'},\n        {text: 'Wednesday', value: 'Wednesday'},\n        {text: 'Thursday', value: 'Thursday'},\n        {text: 'Friday', value: 'Friday'},\n    ];\n\n    public static colNumber = 3;\n    public columns = [];\n\n    public static factory(user: User): Promise<UserForm> {\n        //        let dynamicFormService = DynamicFormService.instance;\n        //        if(!dynamicFormService) {\n        //            throw new Error('dynamicFormService is null!');\n        //        }\n\n        return this.userService._getUsers(0, 1000, ['Consultant']).then(consultants => {\n\n            let column = 0;\n            /*\n             * Prepare options for the consultant input element\n             */\n            let consultantOptions = [];\n            for(let u of consultants) {\n                consultantOptions.push({value: u.id, text: u.firstName+\" \"+u.lastName});\n            }\n\n            let userForm = new UserForm();\n            userForm.user = user;\n            userForm.dynamicForm = new Form();\n            userForm.commonForm = new Form();\n\n            userForm.commonForm.dynamicFormStruct.push(new TextboxQuestion({\n                key: 'firstName',\n                label: 'First Name',\n                value: user.firstName,\n                column: column,\n            }));\n            userForm.commonForm.dynamicFormStruct.push(new TextboxQuestion({\n                key: 'lastName',\n                label: 'Last Name',\n                value: user.lastName,\n                column: column,\n            }));\n            userForm.commonForm.dynamicFormStruct.push(new TextboxQuestion({\n                key: 'title',\n                label: 'Title',\n                value: user.title,\n                column: column,\n            }));\n            userForm.commonForm.dynamicFormStruct.push(new TextboxQuestion({\n                key: 'initials',\n                label: 'Initials',\n                value: user.initials,\n                column: column,\n            }));\n            \n            userForm.commonForm.dynamicFormStruct.push(new CheckboxQuestion({\n                key: 'excludeFromRota',\n                label: 'Exclude this person from Automated Rota',\n                value: user.excludeFromRota,\n                column: column,\n            }));\n\n            if(!user.emails || user.emails.length == 0) {\n                    userForm.commonForm.dynamicFormStruct.push(new TextboxQuestion({\n                        key: 'email',\n                        label: 'Email',\n                        value: '',\n                        column: column,\n                        group: 'email',\n                    }));\n            }\n            else {\n                for(let email of user.emails){\n                    userForm.commonForm.dynamicFormStruct.push(new TextboxQuestion({\n                        key: 'email',\n                        label: 'Email',\n                        removable: true,\n                        column: column,\n                        group: 'email',\n                        value: email.email//.email.email\n                    }));\n                }\n            }\n\n            /**\n             * Appending the \"Add another email\" button\n             */\n//            userForm.commonForm.dynamicFormStruct.push(new AppendNewItem({\n//                label: '+',\n//                group: 'email',\n//                tooltip: 'Add new email',\n//                callback: () => {\n//                    userForm.commonForm.putAfterLast('email', new TextboxQuestion({\n//                        key: 'email',\n//                        label: 'Email',\n//                        removable: true,\n//                        column: column,\n//                        group: 'email',\n//                        value: ''//.email.email\n//                    }));\n//                    userForm.calculateColumns();\n//                }\n//            }));\n\n            if(!user.phones || user.phones.length == 0) {\n                    userForm.commonForm.dynamicFormStruct.push(new TextboxQuestion({\n                        key: 'phone',\n                        label: 'Phone',\n                        column: column,\n                        group: 'phone',\n                        value: '',\n                    }));\n            }\n            else {\n                for(let phone of user.phones){\n                    userForm.commonForm.dynamicFormStruct.push(new TextboxQuestion({\n                        key: 'phone',\n                        label: 'Phone',\n                        column: column,\n                        group: 'phone',\n                        value: phone.phone//.phone.phone\n                    }));\n                }\n            }\n\n            /**\n             * Appending the \"Add another phone\" button\n             */\n//            userForm.commonForm.dynamicFormStruct.push(new AppendNewItem({\n//                label: '+',\n//                group: 'phone',\n//                tooltip: 'Add new phone',\n//                callback: () => {\n//                    userForm.commonForm.putAfterLast('phone', new TextboxQuestion({\n//                        key: 'phone',\n//                        label: 'Phone',\n//                        removable: true,\n//                        column: column,\n//                        group: 'phone',\n//                        value: ''//.email.email\n//                    }));\n//                    userForm.calculateColumns();\n//                }\n//            }));\n\n//            let phone0value = '';\n//            if(user.emails[0]) {\n//                phone0value = user.phones[0].phone;\n//            }\n\n//            userForm.commonForm.dynamicFormStruct.push(new TextboxQuestion({\n//                key: 'phone',\n//                label: 'Phone',\n//                value: phone0value,\n//            }));\n\n            column++;\n            userForm.commonForm.dynamicFormStruct.push(new MultiSelectQuestion({\n                key: 'workingDays',\n                label: 'Working Days',\n                listOnly: true,\n                column: column,\n                model: [], // we will fill the model in a while\n                options: UserForm.weekDays,\n            }));\n\n            userForm.commonForm.dynamicFormStruct.push(new MultiSelectQuestion({\n                key: 'supervisors',\n                label: 'Consultants',\n                column: column,\n                model: [], // we will fill the model in a while\n                options: consultantOptions,\n            }));\n\n            userForm.unpackConsultantsModel();\n            userForm.unpackWorkingDays();\n            userForm.commonForm.formGroup = UserForm.dynamicFormService.toFormGroup(userForm.commonForm.dynamicFormStruct);\n\n            column++;\n            return UserForm.userService._getCriterias().then((criterias) => {\n                return UserForm.userService._getCriteriaTypes().then(criteriaTypes => {\n                    for(let ctype of criteriaTypes) {\n                        let model = [];\n                        for(let ec of user.employeeCriteria) {\n                            if(ec.criteria.criteriaType.name == ctype.name) {\n                                model.push({text: ec.criteria.name, value: ec});\n                            }\n                        }\n                        let typeCriterias = [];\n                        for(let c of criterias) {\n                            if(c.criteriaType.name == ctype.name) {\n                                typeCriterias.push({text: c.name, value: {criteria: c}});\n                            }\n                        }\n\n                        userForm.dynamicForm.dynamicFormStruct.push(new MultiSelectQuestion({\n                            key: ctype.name,\n                            label: ctype.name,\n                            options: typeCriterias,\n                            model: model,\n                            column: column,\n                            comparisonCallback: (item1: any, item2: any) => {\n                                return item1.criteria.name == item2.criteria.name;\n                            }\n                        }));\n                    }\n\n                    userForm.dynamicForm.formGroup = this.dynamicFormService.toFormGroup(userForm.dynamicForm.dynamicFormStruct);\n\n                    userForm.calculateColumns();\n                    return Promise.resolve(userForm);\n                });\n            });\n        });\n    }\n\n    public calculateColumns() {\n        let fields = [...this.commonForm.dynamicFormStruct, ...this.dynamicForm.dynamicFormStruct];\n        let columns = [];\n        let column = [];\n        let columnIItems = Math.ceil(fields.length / UserForm.colNumber);\n        let ic = 0;\n        let i = 0;\n        let field;\n        while(field = fields.shift()) {\n            if(i > columnIItems || (field.controlType == 'multiselect' && i >= columnIItems)){\n                if(field.group == '' || (column[i-1] && column[i-1].group != field.group)){\n                    columns.push(column);\n                    column = [];\n                    i = 0;\n                }\n            }\n\n            column.push(field);\n            //\n            // Multiselect fields cover twice the space (approximately)\n            if(field.controlType == 'multiselect') {\n                i += 2;\n            }\n            else{\n                i++;\n            }\n        }\n\n        if(column.length > 0) {\n            columns.push(column);\n        }\n\n//        for(let i=0; i < UserForm.colNumber; i++) {\n//            let column = [];\n//            for(let ii=0; ii < columnIItems; ii++) {\n//                /*\n//                 * Quit loop if there are no more fields\n//                 */\n//                if(fields[(i*columnIItems)+ii] != undefined) {\n//                    column.push(fields[(i*columnIItems)+ii]);\n//                }\n//            }\n//            columns.push(column);\n//        }\n\n        this.columns = columns;\n    }\n\n    public save() {\n        this.packConsultantsModel();\n        this.packEmployeeCriteria();\n        this.packWorkingDays();\n        let user = { ...this.user, ...this.commonForm.formGroup.value, ...this.dynamicForm.formGroup.value };\n\n        let v = false;\n        if(v!=false) {\n            return Promise.resolve({status: 'ok'});//\n        }\n        for(let k in user) {\n            if(user[k] && typeof user[k] == 'string' && user[k].length == 0) {\n                user[k] = null;\n            }\n        }\n//        if(!user.workingDays) {\n//            user.workingDays = []\n//        }\n//\n//        user.workingDays.push({day: 'Monday', shift: user.Monday});\n//        user.workingDays.push({day: 'Tuesday', shift: user.Tuesday});\n//        user.workingDays.push({day: 'Wednesday', shift: user.Wednesday});\n//        user.workingDays.push({day: 'Thursday', shift: user.Thursday});\n//        user.workingDays.push({day: 'Friday', shift: user.Friday});\n//        user.workingDays.push({day: 'Saturday', shift: user.Saturday});\n//        user.workingDays.push({day: 'Sunday', shift: user.Sunday});\n\n        user.emails = [{email:user.email, type: 'work'}];\n        user.phones = [{phone:user.phone, type: 'work'}];\n\n\n        delete(this.user.grade);\n        delete(this.user.trainingLevel);\n        delete(this.user.role);\n        return UserForm.userService.saveUser(user);\n    }\n\n    public unpackConsultantsModel() {\n        if(this.user.supervisors && this.user.supervisors.length > 0) {\n            for(let v of this.user.supervisors) {\n                this.commonForm.getFormStructByKey('supervisors').model.push({value:\"\"+v.supervisor.id, text:v.supervisor.firstName+\" \"+v.supervisor.lastName});\n            }\n        }\n    }\n\n    public packConsultantsModel() {\n        // A consultant cannot have another consultant above him\n        if(this.user.grade == 'Consultant') {\n            return\n        }\n\n        if(!this.user.supervisors) {\n            this.user.supervisors = [];\n        }\n\n        for(let v of this.commonForm.getFormStructByKey('supervisors').model) {\n            this.user.supervisors.push({supervisor: {id: v.value}});\n        }\n    }\n\n    public packEmployeeCriteria() {\n        if(!this.user.employeeCriteria) {\n            this.user.employeeCriteria = [];\n        }\n        else {\n            this.user.employeeCriteria.length = 0;\n        }\n\n        for(let formStruct  of this.dynamicForm.dynamicFormStruct) {\n            for(let model of (formStruct as MultiSelectQuestion).model) {\n                this.user.employeeCriteria.push(model.value);\n            }\n        }\n    }\n\n    public unpackEmployeeCriteria() {\n        if(this.user.employeeCriteria && this.user.employeeCriteria.length > 0) {\n            for(let v of this.user.employeeCriteria) {\n                this.dynamicForm.getFormStructByKey(v.criteria.criteriaType.name)\n                    .model.push({value:v, text:v.criteria.name});\n            }\n        }\n    }\n\n    private packWorkingDays() {\n        let workingDays = [];\n        for(let day of UserForm.weekDays) {\n            if(this.commonForm.getFormStructByKey('workingDays').model.find((v) => {\n                return v.value == day.value;\n            })){\n                workingDays.push({day: day.value, shift: 'Day'});\n            }\n            else{\n                workingDays.push({day: day.value, shift: 'NotWorking'});\n            }\n        }\n\n        this.user.workingDays = workingDays;\n    }\n\n    private unpackWorkingDays() {\n        if(this.user.workingDays && this.user.workingDays.length > 0) {\n            for(let day of this.user.workingDays) {\n                if(day.shift == 'Day') {\n                    this.commonForm.getFormStructByKey('workingDays').model.push({value:day.day, text:day.day});\n                }\n            }\n        }\n    }\n\n    //\n    //    public getConsultants() {\n    //        this.userService._getUsers(0, 1000, ['Consultant']).then(users => {\n    //            if(users){\n    //                this.consultants.length = 0;\n    //                for(let u of users) {\n    //                    this..push({value: u.id, text: u.firstName+\" \"+u.lastName});\n    //                }\n    //            }\n    //        });\n    //    }\n\n    public toggleFormDisability() {\n        this.formDisabled = !this.formDisabled;\n        this.applyFormDisability();\n    }\n\n    public disableForm() {\n        this.formDisabled = true;\n        this.applyFormDisability();\n    }\n\n    public enableForm() {\n        this.formDisabled = false;\n        this.applyFormDisability();\n    }\n\n    public applyFormDisability() {\n        for(let key in this.commonForm.formGroup.controls) {\n            if(this.formDisabled == true) {\n                this.commonForm.formGroup.controls[key].disable();\n            } else {\n                this.commonForm.formGroup.controls[key].enable();\n            }\n        }\n        for(let key in this.dynamicForm.formGroup.controls) {\n            if(this.formDisabled == true) {\n                this.dynamicForm.formGroup.controls[key].disable();\n            } else {\n                this.dynamicForm.formGroup.controls[key].enable();\n            }\n        }\n    }\n}\n\nexport class EmployeeSupervisor {\n    id: number;\n    employee: User;\n    supervisor: User;\n}\n\nexport class EmployeeCriteria {\n    id: number;\n    employee: User;\n    criteria: Criteria;\n\n    public constructor(input: any) {\n        this.id = input.id;\n        //this.employee = new User(input.employee);\n        this.criteria = new Criteria(input.criteria);\n    }\n\n    public static factory(input: object[]): EmployeeCriteria[] {\n        let employeeCriterias: EmployeeCriteria[] = [];\n\n        for(let employeeCriteria of input) {\n            employeeCriterias.push(new EmployeeCriteria(employeeCriteria));\n        }\n\n        return employeeCriterias;\n    }\n}\n\nexport class Criteria {\n    id: number;\n    criteriaType: CriteriaType;\n    name: string;\n\n    public constructor(input: any) {\n        this.id = input.id;\n        this.criteriaType = new CriteriaType(input.criteriaType);\n        this.name = input.name;\n    }\n}\n\nexport class CriteriaType {\n    id: number;\n    name: string;\n\n    public constructor(input: any) {\n        this.id = input.id;\n        this.name = input.name;\n    }\n}\n\nexport class Phone {\n    id?: number;\n    phone:string;\n    type?:string;\n\n    public constructor(input: any) {\n        this.id = input.id;\n        this.phone = input.phone;\n        this.type = input.type;\n    }\n\n    public static factory(input: object[]): Phone[] {\n        let phones: Phone[] = [];\n\n        for(let phone of input) {\n            phones.push(new Phone(phone));\n        }\n\n        return phones;\n    }\n}\n\nexport enum Type {\n    Personal = \"personal\",\n        Work = \"work\",\n        Beep = \"beep\",\n}\n\n\nexport class Email {\n    id?: number;\n    email:string;\n    type?:string;\n\n    public constructor(input: any) {\n        this.id = input.id;\n        this.email = input.email;\n        this.type = input.type;\n    }\n\n    public static factory(input: object[]): Email[] {\n        let emails: Email[] = [];\n\n        for(let email of input) {\n            emails.push(new Email(email));\n        }\n\n        return emails;\n    }\n}\n\nexport enum Grade {\n    FY = \"FY\",\n        JuniorRegistrar = \"JuniorRegistrar\",\n        SeniorRegistrar = \"SeniorRegistrar\",\n        SHO = \"SHO\",\n        Consultant = \"Consultant\",\n}\n\nexport enum Role {\n    Trainee = \"Trainee\",\n        CRF = \"CRF\",\n        TrustGrade = \"TrustGrade\",\n}\n\nexport enum TrainingLevel {\n    FY1 = \"FY1\",\n        FY2 = \"FY2\",\n        ST1 = \"ST1\",\n        ST2 = \"ST2\",\n        ST3 = \"ST3\",\n        ST4 = \"ST4\",\n        ST5 = \"ST5\",\n        ST6 = \"ST6\",\n        ST7 = \"ST7\",\n}\n\nexport class WorkingDay {\n    id: number;\n    day: string;\n    shift: string;\n\n    public constructor(input: any) {\n        this.id = input.id;\n        this.day = input.day;\n        this.shift = input.shift;\n    }\n\n    public static factory(input: object[]): WorkingDay[] {\n        let workingDays: WorkingDay[] = [];\n\n        for(let day of input) {\n            workingDays.push(new WorkingDay(day));\n        }\n\n        return workingDays;\n    }\n}\n\nexport enum Day {\n    Monday = \"Monday\",\n        Tuesday = \"Tuesday\",\n        Wednesday = \"Wednesday\",\n        Thursday = \"Thursday\",\n        Friday = \"Friday\",\n        Saturday = \"Saturday\",\n        Sunday = \"Sunday\",\n}\n\nexport enum Shift {\n    OFF = \"OFF\",\n        AM = \"AM\",\n        PM = \"PM\",\n        Late = \"Late\",\n        Day = \"Day\",\n        OC = \"OC\",\n        Night = \"Night\",\n        Annual = \"Annual\",\n        Study = \"Study\",\n        NotAssigned = \"NotAssigned\",\n}\n\nexport class RmsUser {\n    id: number;\n}\n\nexport class ConsultantList {\n    private consultantList : User[] =[];\n    private mapTypeToUser={};\n\n    public getConsultantList(): User[] {\n        return this.consultantList;\n    }\n\n//    public getCriteriaListByCategory(type: User): ConfigurationCriteriaSetEntity[] {\n//        return this.mapTypeToCriteria[type.id];\n//    }\n//\n//    public getCriteriaListByCategoryId(id: number): ConfigurationCriteriaSetEntity[] {\n//        return this.mapTypeToCriteria[id];\n//    }\n\n//    public addConsultant(user: User){\n//        if (!(user.id in this.mapTypeToUser)) {\n//            this.mapTypeToUser[user.userType.id] = [];\n//            this.consultantList.push(user.userType);\n//        }\n//\n//        this.mapTypeToUser[user.userType.id].push(new ConfigurationUserSetEntity({'user':user,'id':null}));\n//    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/konstantin/svn/rota-client/src/app/model/user.ts","import { Injectable } from '@angular/core'\nimport { Headers, Http, Response } from '@angular/http';\nimport 'rxjs/add/operator/toPromise';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Observable } from 'rxjs/Observable';\n/** imports related to UserDataSource */\nimport { DataSource } from '@angular/cdk/table';\nimport { LocalStorageService } from 'angular-2-local-storage';\n\n/** Importing models */\nimport { Activity, } from '../model/activity';\nimport { BackendResult } from '../model/backend-result';\nimport { Shift, Grade, TrainingLevel } from '../model/user';\nimport { TmDate } from '../model/tmdate';\nimport { CriteriaExpression } from '../model/criteria';\nimport { UserService } from '../service/user.service';\n\n@Injectable()\nexport class ActivityService {\n\n    /** HTTP headers that we like to send with every request. Angular is going to merge them to browser's ones*/\n    private headers = new Headers({ 'Content-Type': 'application/json' });\n\n    /** Holds activity type list. Initially it is empty but will get populated after the first call to getActivityTypes() */\n    private activityTypes: Array<object> = [];\n\n    public activitiesSubject: BehaviorSubject<Activity[]> = new BehaviorSubject<Activity[]>([]);\n    public activities_collection: Activity[] = [];\n\n    public totalCount = 0;\n\n    // We will cache the last result from the server.\n    private lastOffset = 0;\n    private lasPageSize = 0;\n\n    constructor(private http:Http, private localStorageService: LocalStorageService, private userService: UserService) {\n        this.restoreProperties(); // restore service's properties from local storage\n    }\n\n    /** Stores selected properties from this service to browser's local storage. NOTE Since Angular\n     *  service don't have destructors (at least as far as I know) we will call this method whenever\n     *  those properties are changed\n     */\n    private storeProperties() {\n        this.localStorageService.set(this.constructor.name + '.lastOffset', this.lastOffset);\n        this.localStorageService.set(this.constructor.name + '.lasPageSize', this.lasPageSize);\n        this.localStorageService.set(this.constructor.name + '.totalCount', this.totalCount);\n    }\n\n    /** Restores selected properties from this service.   */\n    private restoreProperties() {\n        const lastOffset = <number>this.localStorageService.get(this.constructor.name + '.lastOffset');\n        if (lastOffset != null) {\n            this.lastOffset = lastOffset;\n        }\n\n        const lasPageSize = <number>this.localStorageService.get(this.constructor.name + '.lasPageSize');\n        if (lasPageSize != null) {\n            this.lasPageSize = lasPageSize;\n        }\n\n        const totalCount = <number>this.localStorageService.get(this.constructor.name + '.totalCount');\n        if (totalCount != null) {\n            //this.totalCount = totalCount;\n        }\n    }\n\n    /** Fetches activities from backend.\n     *\n     *  @param offset number indicating how many rows to skip when returning activities\n     *  @param limit  number indicating how many activities to include in the result\n     *  @return Promise\n     */\n    public _getActivities(offset: number=0, limit: number=1000, activityTypes=null): Promise<Activity[]> {\n        let url: string = 'api/activity/list';\n        let payload: {[key:string]: object|string};\n        payload = {\n            'types': activityTypes,\n            'pager' : {\n                'offset': offset,\n                'limit': limit,\n            },\n        };\n\n        return this.http\n        .post(url, JSON.stringify(payload), { headers: this.headers })\n        .toPromise().then(response => {\n            const responseJson = response.json();\n            //let activities = responseJson.activityList as Activity[];\n            this.totalCount = responseJson.totalCount; //responseJson.totalCount as number;\n            const activities = responseJson.activities;\n            return Promise.resolve(activities)\n        })\n    }\n\n    public _getAllActivities(offset: number=0, limit: number=1000, activityTypes=null): Promise<Activity[]> {\n        let url: string = 'api/activity/list-all';\n        let payload: {[key:string]: object|string};\n        payload = {\n            'types': activityTypes,\n            'pager' : {\n                'offset': offset,\n                'limit': limit,\n            },\n        };\n\n        return this.http\n        .post(url, JSON.stringify(payload), { headers: this.headers })\n        .toPromise().then(response => {\n            const responseJson = response.json();\n            //let activities = responseJson.activityList as Activity[];\n            this.totalCount = responseJson.totalCount; //responseJson.totalCount as number;\n            const activities = responseJson.activities;\n            return Promise.resolve(activities)\n        })\n    }\n    /** Fetches activities from backend.\n     *\n     *  @param offset number indicating how many rows to skip when returning activities\n     *  @param limit  number indicating how many activities to include in the result\n     *  @return Promise\n     */\n    //  public getActivityHistory(activityId: number, offset: number=0, limit: number=20): Promise<ActivityHistoryEntry[]> {\n    //        let url: string = 'api/activity/history';\n    //        let payload: {[key:string]: object|string|number};\n    //        payload = {\n    //              \"pager\" : {\n    //                    \"offset\": offset,\n    //                    \"limit\": limit,\n    //              },\n    //              \"id\": activityId,\n    //      };\n    //\n    //        return this.http\n    //        .post(url, JSON.stringify(payload), { headers: this.headers })\n    //        .toPromise().then(response => {\n    //            let responseJson = response.json();\n    //            //let activities = responseJson.activityList as Activity[];\n    //            this.totalCount = responseJson.totalCount; //responseJson.totalCount as number;\n    //            let activityHistories = responseJson.activityHistories;\n    //            return Promise.resolve(activityHistories)\n    //        })\n    //  }\n\n    /** Retrieves activities from the backend. The last result will be cached. So if the user navigates\n     *  somewhere else and comes back to the List Activities page she would see the last fetched results\n     *  (without unpleasent blinking)\n     *\n     *  @param offset number indicating how many rows to skip when returning activities\n     *  @param pageSize number indicating how many activities to include in the result\n     *  @return Observable\n     */\n    retrieve(offset: number, pageSize: number): Observable<Activity[]> {\n        let promise: Promise<Activity[]>;\n        //      if (this.lastOffset == offset && this.lasPageSize == pageSize && this.activities_collection.length > 0) {\n        //            promise = Promise.resolve(this.activities_collection); // return cached result if the criteria passed\n        //                                                              // through (offset, pageSize) is the same\n        //                                                              // as the last one\n        //      }\n        //      else {\n        promise = this._getActivities(offset, pageSize);\n        this.lasPageSize = pageSize;\n        this.lastOffset = offset;\n        this.storeProperties();\n        //      }\n\n        return Observable.fromPromise(promise.then(users => {\n            const _users = users.slice();\n            this.activities_collection.length = 0;\n            this.activities_collection.splice(0,0, ..._users);\n            return this.activities_collection;\n        }));\n    }\n\n    /** This is a convinient function to call getActivities() with *id* as the only parameter */\n    getActivity(activityId: number): Promise<Activity> {\n        const url = 'api/activity/list-detailed';\n        let payload: {[key: string]: number|object};\n\n        payload = {\n            pager: {\n                'offset': 0,\n                'limit': 1,\n            },\n            id: activityId,\n        };\n            return this.userService._getCriterias().then((criterias) => {\n                return this.userService._getCriteriaTypes().then(criteriaTypes => {\n                    for(let ctype of criteriaTypes) {\n                        let model = [];\n//                        for(let ec of user.employeeCriteria) {\n//                            if(ec.criteria.criteriaType.name == ctype.name) {\n//                                model.push({text: ec.criteria.name, value: ec});\n//                            }\n//                        }\n                        let typeCriterias = [];\n                        for(let c of criterias) {\n                            if(c.criteriaType.name == ctype.name) {\n                                typeCriterias.push({text: c.name, value: {criteria: c}});\n                            }\n                        }\n\n//                        userForm.dynamicForm.dynamicFormStruct.push(new MultiSelectQuestion({\n//                            key: ctype.name,\n//                            label: ctype.name,\n//                            options: typeCriterias,\n//                            model: model,\n//                            column: column,\n//                            comparisonCallback: (item1: any, item2: any) => {\n//                                return item1.criteria.name == item2.criteria.name;\n//                            }\n//                        }));\n                    }\n\n                    //userForm.dynamicForm.formGroup = this.dynamicFormService.toFormGroup(userForm.dynamicForm.dynamicFormStruct);\n\n                    //userForm.calculateColumns();\n                    //return Promise.resolve(userForm);\n                    return this.http\n                    .post(url, payload, { headers: this.headers })\n                    .toPromise().then(response => {\n                        let activity = response.json();\n                        if(activity == null) {\n                            throw \"basi filma\";\n                        }\n                        CriteriaExpression.setUserService(this.userService); \n                        activity.expression=new CriteriaExpression(activity.expression);\n\n                        //delete(activity.id);\n                        try {\n                            let date = new Date();\n                            date.setTime(activity.scheduleStartDate);\n                            activity.scheduleStartDate = date.toISOString();\n                        }\n                        catch(e) {\n                        }\n                        try {\n                            if(activity.scheduleEndDate) {\n                                let date = new Date();\n                                date.setTime(activity.scheduleEndDate);\n                                activity.scheduleEndDate = date.toISOString();\n                            }\n                        }\n                        catch(e) {\n                        }\n\n                        return Promise.resolve(activity);\n                    });\n                });\n            });\n    }\n\n    public prepareConfiguration(activity: any) {\n        const n_staffTrainLevelCount = [];\n        for (const p in TrainingLevel) {\n            n_staffTrainLevelCount.push({trainingLevel: p, count: 0});\n        }\n\n        const _staffTrainLevelCount = [];\n        for (const p in TrainingLevel) {\n            _staffTrainLevelCount.push({trainingLevel: p, count: 0});\n        }\n\n        const n_staffGradeCount = [];\n        let disabled = false;\n        for (const p in Grade) {\n            disabled = (p == 'Consultant') ? true : false;\n            n_staffGradeCount.push({grade: p, count: 0, disabled: disabled});\n        }\n\n        const _staffGradeCount = [];\n        for (const p in Grade) {\n            _staffGradeCount.push({grade: p, count: 0, disabled: false});\n        }\n\n        activity.configuration = {\n            countFY: 8,\n            gradeCounts: n_staffGradeCount,\n            trainingLevelCounts: n_staffTrainLevelCount,\n        };\n\n        activity.configurationConsultant = {\n            gradeCounts: _staffGradeCount,\n            trainingLevelCounts: _staffTrainLevelCount,\n        };\n    }\n\n    public prepareShifts(shift: string) {\n        let shift_;\n\n        let cronExpression;\n        if (shift == 'Off') {\n            cronExpression = '* * * * * Mon,Tue,Wed,Thu,Fri,Sat,Sun';\n        }\n        else {\n            cronExpression = '';\n        }\n\n        shift_ = {\n            cron: [{weekNumber: 0, type: 'weekly', expression: cronExpression}],\n            shift: shift,\n        };\n\n        return shift_;\n    }\n\n    public getEmptyActivity(): Activity {\n        let time = new Date();\n        let activity = new Activity({\n            description: '',\n            name: '',\n            type: {id: 0},\n            activityShifts: [],\n            activityConsultants: [],\n            scheduleStartDate: time.toISOString(),\n            scheduleEndDate: null,\n            expression: CriteriaExpression.createEmpty()\n        });\n\n        //let activityShifts = [];\n        for (const shift of ['Off', 'AM', 'PM']) {\n            activity.activityShifts.push(this.prepareShifts(shift));\n        }\n        this.prepareConfiguration(activity);\n\n        return activity;\n    }\n\n    /** Save activity to the server. If the *activity* object doesn't have *id* property a new instance will be\n     *  recorded in database, otherwise (and if the id is valid) the existing activity will be updated\n     */\n    saveActivity(activity: Activity): Promise<any> {\n        const url = 'api/activity/save';\n\n        activity.expression.pack();\n\n        let v = 2;\n        if(v == 1) {\n            return Promise.resolve({status: 'ok'});\n        }\n        return this.http\n        .post(url, JSON.stringify(activity), { headers: this.headers })\n        .toPromise().then(response => {\n            //return Promise.resolve({status: response.json().status});\n            return Promise.resolve({status: 'ok', id: response.json().activity.id});\n        }).catch(response => {\n            return Promise.resolve({status: 'failure'});\n        });\n    }\n\n    /** Save activity to the server. If the *activity* object doesn't have *id* property a new instance will be\n     *  recorded in database, otherwise (and if the id is valid) the existing activity will be updated\n     */\n    deleteActivity(activityId: number): Promise<any> {\n        const url = 'api/activity/delete';\n\n        const payload = {\n            id: activityId,\n        };\n\n        return this.http\n        .post(url, JSON.stringify(payload), { headers: this.headers })\n        .toPromise().then(response => {\n            return Promise.resolve({status: response.json().status});\n            //return Promise.resolve({status: '',});\n        }).catch(response => {\n            return Promise.resolve({status: 'failure'});\n        });\n    }\n\n    /** Returns a promise which when resolved will contain a list of activity types. When this method is called for the first\n     * time types will be fetched from the backend and stored locally as cache. All subsequent calls to this method will\n     * return cached data (this is for performance reasons).\n     */\n    getActivityTypes(): Promise<any> {\n        const url = 'api/activity/getTypes';\n\n        if (this.activityTypes.length == 0) {\n            return this.http.post(url, null, { headers: this.headers }).toPromise().then(response => {\n                this.activityTypes = response.json();\n                return Promise.resolve(this.activityTypes);\n            });\n        }\n        else {\n            return Promise.resolve(this.activityTypes);\n        }\n    }\n\n    schedulePreview(activity, previewStartDate, previewEndDate): Promise<any>{\n        const url = 'api/activity/preview';\n\n        const _activity = {...activity, type: 'Service', name: 'name'};\n        const payload = {\n            activity: _activity,\n            previewStartDate: previewStartDate,\n            previewEndDate: previewEndDate,\n        };\n\n        return this.http\n        .post(url, JSON.stringify(payload), { headers: this.headers })\n        .toPromise().then(response => {\n            //return Promise.resolve({status: response.json().status});\n            return response.json();\n        }).catch(response => {\n            return Promise.resolve({status: 'failure'});\n        });\n    }\n\n    public fetchSpread(dateFrom: TmDate, dateTo: TmDate, callback: Function) {\n        const url = 'api/activity/spread';\n        let payload: {[key: string]: object|string};\n        payload = {\n            dateFrom: dateFrom.get_ISO_8601_Date(),\n            dateTo: dateTo.get_ISO_8601_Date(),\n        };\n\n        this.http\n        .post(url, JSON.stringify(payload), { headers: this.headers })\n        .toPromise().then(response => {\n            const responseJson = response.json();\n            //let activities = responseJson.activityList as Activity[];\n            this.totalCount = responseJson.totalCount; //responseJson.totalCount as number;\n            callback(responseJson.spreads);\n        })\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/konstantin/svn/rota-client/src/app/service/activity.service.ts","import { Injectable, EventEmitter } from '@angular/core'\n//import { Headers, Http, Response } from '@angular/http';\n//import 'rxjs/add/operator/toPromise';\n\n//import * as Rx from 'rxjs/Rx';\n\n// /** imports related to UserDataSource */\n// import { DataSource } from '@angular/cdk';\n\n/** Importing models */\n\n//import { Subscription } from 'rxjs/Subscription';\n//import { Observable } from 'rxjs/Observable';\n\n//import { BehaviorSubject } from 'rxjs/BehaviorSubject';\n\n/* Import models */\n//import { Vehicle } from '../model/activity';\n\n@Injectable()\nexport class AdminComponentService {\n    public taskBarEvent = new EventEmitter<any>();\n    public menuVisibilityEvent = new EventEmitter<any>();\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/konstantin/svn/rota-client/src/app/service/admincomponent.service.ts","import { Headers, Http } from '@angular/http';\nimport 'rxjs/add/operator/toPromise';\nimport {Injectable} from '@angular/core';\nimport { Response } from '@angular/http';\nimport { StompService } from '@stomp/ng2-stompjs';\n//import { Message } from '@stomp/stompjs';\n//import { T_Response } from './t_response';\n\n@Injectable()\nexport class BackendService {\n\n    private headers = new Headers({ 'Content-Type': 'application/json' });\n    //private url = 'api/backend';\n    public instanceKey: string = '';\n    public instanceKeyPromise: Promise<string>;\n    private instanceHeartBeatInterval = 20000; //1 minute in milliseconds\n\n    constructor(private http:Http,\n                private stompService: StompService,) {\n        //this.getInstanceKey();\n    }\n\n    public getInstanceKey(): Promise<string> {\n        let url: string = 'api/instanceKey/get';\n\n        if (this.instanceKeyPromise == null) {\n            this.instanceKeyPromise = this.http\n            .post(url, null, { headers: this.headers })\n            .toPromise().then((response: Response)=>{\n                this.instanceKey = response.json().instanceKey;\n                console.log(\"INSTANCE_KEY \",this.instanceKey);\n                this.stompService.subscribe('/com/'+this.instanceKey).subscribe(this.onInstanceExtend);\n                let payload = {\n                    instanceKey: this.instanceKey,\n                };\n                this.stompService.publish('/com/extend', JSON.stringify(payload));\n\n                setInterval(()=>{\n                    this.stompService.publish('/com/extend', JSON.stringify(payload));\n                    //console.log(\"\")\n                }, this.instanceHeartBeatInterval);\n\n                return this.instanceKey;\n            });\n        }\n\n        return this.instanceKeyPromise;\n    }\n\n    public onInstanceExtend = (message: any) => {\n        let incoming = JSON.parse(message.body);\n\n        if(incoming.instanceKey == null){\n            //window.location.reload(false); \n        }\n    }\n\n    // login(uname:string, password:string): Promise<Response> {\n\n    //     let url: string = 'f?Id=2';\n    //     let payload: {[key:string]: string};\n    //     payload = {'uname':uname, 'password':password};\n\n    //     return this.http\n    //     .post(url, JSON.stringify(payload), { headers: this.headers })\n    //     .toPromise()\n    //     .catch(this.handleError);\n\n    //     //promise.then(response => response.json().status)\n    // }\n\n    // public getJ(): Promise<Response> {\n\n    //     let url: string = '/f2';\n    //     let payload: {[key:string]: string};\n    //    // payload = {'uname':uname, 'password':password};\n\n    //     return this.http\n    //         .post(url, JSON.stringify(payload), { headers: this.headers })\n    //         .toPromise()\n    //         .catch(this.handleError);\n\n    //     //promise.then(response => response.json().status)\n    // }\n\n    // private handleError(error: any): Promise<any> {\n    //     console.error('An error occurred', error);\n    //     return Promise.reject(error.message || error);\n    // }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/konstantin/svn/rota-client/src/app/service/backend.service.ts","import { Injectable } from '@angular/core';\nimport {Headers, Http} from '@angular/http';\nimport {LocalStorageService} from 'angular-2-local-storage';\nimport {User} from '../model/user';\nimport {Criteria, CriteriaType, CriteriaList} from '../model/criteria';\n\n@Injectable()\nexport class CriteriaService {\n\n    private criteriaList:CriteriaList=null;\n\n    private headers = new Headers({ 'Content-Type': 'application/json' });\n    constructor(private http: Http) {\n\n    }\n\n    public getCriteriaList(): Promise<CriteriaList> {\n        const url = 'api/employee/getCriterias';\n        let payload = {};\n        return this.http\n            .post(url, JSON.stringify(payload), { headers: this.headers })\n            .toPromise().then(response => {\n                if(null!==this.criteriaList)\n                {\n                    return Promise.resolve(this.criteriaList);\n                }\n                const responseJson = response.json();\n                let criteriaList = new CriteriaList();\n                for(let index in responseJson) {\n                    let criteria=new Criteria(responseJson[index]);\n                    criteriaList.addCriteria(criteria);\n                }\n                return Promise.resolve(criteriaList)\n            })\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/konstantin/svn/rota-client/src/app/service/criteria.service.ts","import { Injectable, Inject } from '@angular/core'\nimport {DOCUMENT} from '@angular/common';\n\n@Injectable()\nexport class CssService {\n\n    constructor(@Inject(DOCUMENT) private document: any) {\n    }\n\n    /** Returns an array of CSSStyleRule objects.\n     * \n     *  @param selector A string to match the style rule. The selector is the complete portion of text\n     *  before the curly braces. So if you have rule like this:\n     *  .title, .sub-tutle {font-weight: bold}\n     *  the selector is \".title, .sub-tutle\"\n     */\n    public getStyle(selector: string): CSSStyleRule[] {\n        let result: CSSStyleRule[] = [];\n        let regSelector = new RegExp(selector);\n        for(var i=0; i<document.styleSheets.length; i++) {\n            try{\n                var sheet = <CSSStyleSheet>document.styleSheets[i];\n                for(let i in sheet.cssRules) {\n                    try{\n                        if (sheet.cssRules[i].type == CSSRule.STYLE_RULE) {\n                                if(regSelector.test((<CSSStyleRule>sheet.cssRules[i]).selectorText)) {\n                                    console.log((<CSSStyleRule>sheet.cssRules[i]).selectorText);\n                                    result.push(<CSSStyleRule>sheet.cssRules[i]);\n                                }\n                        }\n                    }catch (e){\n                        // ... nothing to be found here\n                    }\n                }\n            } catch (e) {\n                // ... I'm off for a week, please don't let anybody know, thanks.\n            }\n        }\n        return result;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /home/konstantin/svn/rota-client/src/app/service/css.service.ts","import { Injectable }   from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\n\nimport { QuestionBase } from '../model/question-base';\n//import { QuestionBase } from '../model/checklist';\n\n\n@Injectable()\nexport class DynamicFormService{\n\n    toFormGroup(questions: any[] ) {\n        let group: any = {};\n\n        questions.forEach(question => {\n            if(question.controlType == 'multiselect') {\n                return;\n            }\n\n            group[question.key] = question.required ? new FormControl(question.value || '', Validators.required)\n                : new FormControl(question.value || '');\n        });\n        return new FormGroup(group);\n    }\n\n    toFormGroupValue(questions: any[] ) {\n        let group: any = {};\n\n        questions.forEach(question => {\n            group[question.key] = question.value;\n        });\n        return group;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/konstantin/svn/rota-client/src/app/service/dynamic-form.service.ts","import { Injectable } from '@angular/core'\nimport { Router, NavigationEnd } from '@angular/router';\n\n@Injectable()\nexport class HistoryService {\n\n    public currentUrl: string = '';\n\n    constructor(private router: Router) {\n        this.router.events.subscribe(event => {\n            if(event instanceof NavigationEnd){\n                this.currentUrl = event.url;\n            }\n        })\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /home/konstantin/svn/rota-client/src/app/service/history.service.ts","import { Injectable } from '@angular/core'\nimport { Headers, Http, Response } from '@angular/http';\nimport 'rxjs/add/operator/toPromise';\n\nimport * as Rx from 'rxjs/Rx';\n\n// /** imports related to UserDataSource */\n// import { DataSource } from '@angular/cdk';\n\n/** Importing models */\nimport { Assignment } from  '../model/schedule';\n\nimport { Subscription } from 'rxjs/Subscription';\nimport { Observable } from 'rxjs/Observable';\nimport { StompService } from '@stomp/ng2-stompjs';\n//import { Message } from '@stomp/stompjs';\n\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\n\nimport { BackendService } from './backend.service';\n\n/* Import models */\n//import { Vehicle } from '../model/activity';\nimport { TmDate, TmLength } from '../model/tmdate';\n\n@Injectable()\nexport class Schedule1Service {\n\n    /** HTTP headers that we like to send with every request. Angular is going to merge them with browser's ones*/\n    private headers = new Headers({ 'Content-Type': 'application/json' });\n\n    // Stream of messages\n    private subscription: Subscription;\n    public messages: Observable<any>;\n\n    // Subscription status\n    public subscribed: boolean = false; \n    public subscribedPromise: Promise<boolean>;\n\n    private transactionKey = 0;\n    private remote_requests: any[] = [];\n\n    private peerSaveCallbacks: Function[] = [];\n    private peerDeleteCallbacks: Function[] = [];\n\n\n    //public alertsSubject: BehaviorSubject<Alert[]> = new BehaviorSubject<Alert[]>([]);\n    //public alerts_collection: Alert[] = [];\n\n    constructor(private http:Http,\n        private stompService: StompService,\n        private backend: BackendService) {\n        this._subscribe();\n    }\n\n    public _subscribe() {\n        if (this.subscribed) {\n            return;\n        }\n\n        // Stream of messages\n        this.backend.getInstanceKey().then(key=>{\n            this.messages = this.stompService.subscribe('/com/schedule/'+this.backend.instanceKey);\n            // Subscribe a function to be run on_next message\n            this.subscription = this.messages.subscribe(this.on_next);\n\n            this.subscribed = true;\n        })\n    }\n\n    //TODO update transaction keys accordingly\n    //    public addAssignment(assignment: any, callback: any){\n    //        //assignment.instanceKey = this.backend.instanceKey;\n    //\n    //        let payload = {\n    //            transactionKey: this.transactionKey,\n    //            instanceKey: this.backend.instanceKey,\n    //            ...assignment\n    //        };\n    //        payload.startTime = payload.startTime.getDateString();\n    //        payload.timeLength = payload.timeLength.seconds;\n    //\n    //        this.stompService.publish('/com/schedule/save', JSON.stringify(payload));\n    //\n    //        payload.callback = callback;\n    //        payload.requestType = 'save';\n    //        //payload.assignment = assignment;\n    //        this.remote_requests[this.transactionKey] = payload;//new Promise();\n    //        this.transactionKey++;\n    //        //return this.remote_requests[this.transactionKey];\n    //    }\n\n    public saveAssignment(assignment: any, callback: any) {\n        //assignment.instanceKey = this.backend.instanceKey;\n\n        //this.whenSubscribed().then({;\n        let payload = {\n            transactionKey: this.transactionKey,\n            instanceKey: this.backend.instanceKey,\n            ...assignment\n        };\n        payload.requestType = 'save';\n        payload.tag = 'consultant';\n        //payload.startTime = payload.startTime.getDateString();\n        //payload.timeLength = payload.timeLength.seconds;\n\n        this.stompService.publish('/com/schedule/save', JSON.stringify(payload));\n\n        payload.callback = callback;\n        //payload.assignment = assignment;\n        this.remote_requests[this.transactionKey] = payload;//new Promise();\n        this.transactionKey++;\n        //return this.remote_requests[this.transactionKey];\n    }\n\n    public fetchAssignments(activityIds: string[], callback: Function) {\n        let activities: any[] = [];\n        for(let v of activityIds){\n            if(v != null){\n                activities.push({id:0, activity: {id: v}});\n            }\n        }\n\n        this.backend.getInstanceKey().then(key=>{\n            let payload: any = {\n                transactionKey: this.transactionKey,\n                instanceKey: this.backend.instanceKey,\n                //startTime: startDate.getDateString(),\n                //timeLength: length.seconds,\n                requestType: 'fetch',\n                assignmentActivities: activities\n            };\n            //  this.stompService.publish('/com/schedule/fetch-weekly', JSON.stringify(payload));\n            this.http\n                .post('api/assignment/fetch-weekly', JSON.stringify(payload), { headers: this.headers })\n                .toPromise().then((message: any)=>\n                    {\n                        let data = JSON.parse(message._body);\n                        callback(data.assignmentList);\n                    });\n\n            //payload.callback = callback;\n            // this.remote_requests[this.transactionKey] = payload;//new Promise();\n            //this.transactionKey++;\n        });\n    }\n\n    public fetchAssignments2(startDate: TmDate, length: TmLength, activityIds: string[], callback: Function){\n        let activities: any[] = [];\n        for(let v of activityIds){\n            if(v != null){\n                activities.push({id:0, activity: {id: v}});\n            }\n        }\n\n        this.backend.getInstanceKey().then(key=>{\n            let payload: any = {\n                transactionKey: this.transactionKey,\n                instanceKey: this.backend.instanceKey,\n                startTime: startDate.getDateString(),\n                timeLength: length.seconds,\n                requestType: 'fetch',\n                assignmentActivities: activities\n            };\n            this.stompService.publish('/com/schedule/fetch', JSON.stringify(payload));\n\n            payload.callback = callback;\n            this.remote_requests[this.transactionKey] = payload;//new Promise();\n            this.transactionKey++;\n        });\n    }\n\n    public deleteAssignment(assignmentId: number|string, callback: Function){\n        //assignment.instanceKey = this.backend.instanceKey;\n\n        let payload = {\n            transactionKey: this.transactionKey,\n            instanceKey: this.backend.instanceKey,\n            assignmentId: assignmentId,\n            callback: callback,\n            requestType: 'delete',\n        };\n        //payload.startTime = payload.startTime.getDateString();\n        //payload.timeLength = payload.timeLength.seconds;\n\n        this.stompService.publish('/com/schedule/delete', JSON.stringify(payload));\n\n        //payload.assignment = assignment;\n        this.remote_requests[this.transactionKey] = payload;//new Promise();\n        this.transactionKey++;\n        //return this.remote_requests[this.transactionKey];\n    }\n\n    /** Consume a message from the _stompService */\n    public on_next = (message: any) => {\n        this.backend.getInstanceKey().then(instanceKey => {\n            // Store message in \"historic messages\" queue\n            let incoming = JSON.parse(message.body);\n\n            if(incoming.instanceKey == null){\n                //window.location.reload(false); \n            }\n            else if (incoming.instanceKey != instanceKey) {\n                if(incoming.requestType == 'save') {\n                    //TODO make sure that the backend returns assignment id\n                    incoming.assignmentList[0].previousAssignmentVehicle = incoming.previousAssignmentVehicle;\n                    for(let callback of this.peerSaveCallbacks) {\n                        callback(incoming.assignmentList[0]);\n                    }\n                }\n                else if(incoming.requestType == 'delete') {\n                    //TODO make sure that the backend returns assignment id\n                    for(let callback of this.peerDeleteCallbacks) {\n                        callback(incoming.assignmentId);\n                    }\n                }\n            } else {\n                if(this.remote_requests[incoming.transactionKey].requestType == 'save') {\n                    //TODO make sure that the backend returns assignment id\n                    this.remote_requests[incoming.transactionKey].assignmentId = incoming.assignmentId;\n                    if(incoming.transactionKey != null && this.remote_requests[incoming.transactionKey].callback != null) {\n                        this.remote_requests[incoming.transactionKey].callback(incoming);\n                    }\n                }\n                else if(this.remote_requests[incoming.transactionKey].requestType == 'fetch') {\n                    //TODO make sure that the backend returns assignment id\n                    this.remote_requests[incoming.transactionKey].assignmentId = incoming.assignmentId;\n                    if(incoming.transactionKey != null && this.remote_requests[incoming.transactionKey].callback != null) {\n                        this.remote_requests[incoming.transactionKey].callback(incoming.assignmentList);\n                    }\n                }\n                else if(this.remote_requests[incoming.transactionKey].requestType == 'delete') {\n                    this.remote_requests[incoming.transactionKey].assignmentId = incoming.assignmentId;\n                    if(incoming.transactionKey != null && this.remote_requests[incoming.transactionKey].callback != null) {\n                        this.remote_requests[incoming.transactionKey].callback(incoming.assignmentId);\n                    }\n                }\n\n                console.log(alert);\n\n                // this.alerts_collection.unshift(alert);\n                // this.alertsSubject.next(this.alerts_collection);\n\n                // Count it\n                //this.count++;\n\n                // Log it to the console\n                //console.log(message);\n            }\n        });\n    }\n\n    public addPeerSaveCallback(callback: Function) {\n        this.peerSaveCallbacks.push(callback);\n    }\n\n    public addPeerDeleteCallback(callback: Function) {\n        this.peerDeleteCallbacks.push(callback);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/konstantin/svn/rota-client/src/app/service/schedule1.service.ts","import { Injectable } from '@angular/core'\nimport { Headers, Http, Response } from '@angular/http';\nimport 'rxjs/add/operator/toPromise';\n\nimport * as Rx from 'rxjs/Rx';\n\n// /** imports related to UserDataSource */\n// import { DataSource } from '@angular/cdk';\n\n/** Importing models */\nimport { Assignment } from  '../model/schedule';\n\nimport { Subscription } from 'rxjs/Subscription';\nimport { Observable } from 'rxjs/Observable';\nimport { StompService } from '@stomp/ng2-stompjs';\n//import { Message } from '@stomp/stompjs';\n\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\n\nimport { BackendService } from './backend.service';\n\n/* Import models */\n//import { Vehicle } from '../model/activity';\nimport { TmDate, TmLength } from '../model/tmdate';\n\n@Injectable()\nexport class Schedule2Service {\n\n    /** HTTP headers that we like to send with every request. Angular is going to merge them with browser's ones*/\n    private headers = new Headers({ 'Content-Type': 'application/json' });\n\n    // Stream of messages\n    private subscription: Subscription;\n    public messages: Observable<any>;\n\n    // Subscription status\n    public subscribed: boolean = false;\n    public subscribedPromise: Promise<boolean>;\n\n    private transactionKey = 0;\n    private remote_requests: any[] = [];\n\n    private peerSaveCallbacks: Function[] = [];\n    private peerDeleteCallbacks: Function[] = [];\n\n\n    //public alertsSubject: BehaviorSubject<Alert[]> = new BehaviorSubject<Alert[]>([]);\n    //public alerts_collection: Alert[] = [];\n\n    constructor(private http:Http,\n        private stompService: StompService,\n        private backend: BackendService) {\n        this._subscribe();\n    }\n\n    public _subscribe() {\n        if (this.subscribed) {\n            return;\n        }\n\n        // Stream of messages\n        this.backend.getInstanceKey().then(key=>{\n            this.messages = this.stompService.subscribe('/com/schedule/'+this.backend.instanceKey);\n            // Subscribe a function to be run on_next message\n            this.subscription = this.messages.subscribe(this.on_next);\n\n            this.subscribed = true;\n        })\n    }\n\n    //TODO update transaction keys accordingly\n    //    public addAssignment(assignment: any, callback: any){\n    //        //assignment.instanceKey = this.backend.instanceKey;\n    //\n    //        let payload = {\n    //            transactionKey: this.transactionKey,\n    //            instanceKey: this.backend.instanceKey,\n    //            ...assignment\n    //        };\n    //        payload.startTime = payload.startTime.getDateString();\n    //        payload.timeLength = payload.timeLength.seconds;\n    //\n    //        this.stompService.publish('/com/schedule/save', JSON.stringify(payload));\n    //\n    //        payload.callback = callback;\n    //        payload.requestType = 'save';\n    //        //payload.assignment = assignment;\n    //        this.remote_requests[this.transactionKey] = payload;//new Promise();\n    //        this.transactionKey++;\n    //        //return this.remote_requests[this.transactionKey];\n    //    }\n\n    public saveAssignment(assignment: any, callback: any) {\n        //assignment.instanceKey = this.backend.instanceKey;\n\n        //this.whenSubscribed().then({;\n        let payload = {\n            transactionKey: this.transactionKey,\n            instanceKey: this.backend.instanceKey,\n            ...assignment\n        };\n        payload.requestType = 'save';\n        payload.tag = 'registrar'; // since the backend implementation is the same for all schedules\n        //\n\n        let isoTimeDate = assignment.startTime.get_ISO_8601_Date() + \" 00:00:00\";\n        payload.startTime = isoTimeDate;\n        payload.timeLength = payload.timeLength.seconds;\n        //payload.startTime = payload.startTime.getDateString();\n        //payload.timeLength = payload.timeLength.seconds;\n\n        this.stompService.publish('/com/schedule/save', JSON.stringify(payload));\n\n        payload.callback = callback;\n        //payload.assignment = assignment;\n        this.remote_requests[this.transactionKey] = payload;//new Promise();\n        this.transactionKey++;\n        //return this.remote_requests[this.transactionKey];\n    }\n\n    public fetchAssignments(startDate: TmDate, length: TmLength, employeeIds: string[], callback: Function){\n        //    let activities: any[] = [];\n        //    for(let v of activityIds){\n        //      if(v != null){\n        //        activities.push({id:0, activity: {id: v}});\n        //      }\n        //    }\n\n        employeeIds = employeeIds.length > 0 ? employeeIds : null;\n        this.backend.getInstanceKey().then(key=>{\n            let payload: any = {\n                employees: employeeIds,\n                //transactionKey: this.transactionKey,\n                instanceKey: this.backend.instanceKey,\n                startTime: startDate.getDateString(),\n                timeLength: length.seconds,\n                requestType: 'fetch',\n                //assignmentActivities: activities\n            };\n            //this.stompService.publish('/com/schedule/fetch-shifts', JSON.stringify(payload));\n            this.http\n                .post('api/assignment/fetch-shifts', JSON.stringify(payload), { headers: this.headers })\n                .toPromise().then((message: any)=>{\n                    let response = JSON.parse(message._body);\n                    let assignments = []\n                    for(let a of response.assignmentList) {\n                        let tmDate = new TmDate();\n                        tmDate.date.setTime(a.dateFrom);\n                        a.startTime = tmDate;\n\n                        let ass = new Assignment(a);\n                        assignments.push(ass);\n                    }\n                    callback(assignments);\n                });\n\n\n            // payload.callback = callback;\n            // this.remote_requests[this.transactionKey] = payload;//new Promise();\n            // this.transactionKey++;\n        });\n    }\n\n    public deleteAssignment(assignmentId: number|string, callback: Function){\n        //assignment.instanceKey = this.backend.instanceKey;\n\n        let payload = {\n            transactionKey: this.transactionKey,\n            instanceKey: this.backend.instanceKey,\n            assignmentId: assignmentId,\n            callback: callback,\n            requestType: 'delete',\n        };\n        //payload.startTime = payload.startTime.getDateString();\n        //payload.timeLength = payload.timeLength.seconds;\n\n        this.stompService.publish('/com/schedule/delete', JSON.stringify(payload));\n\n        //payload.assignment = assignment;\n        this.remote_requests[this.transactionKey] = payload;//new Promise();\n        this.transactionKey++;\n        //return this.remote_requests[this.transactionKey];\n    }\n\n    /** Consume a message from the _stompService */\n    public on_next = (message: any) => {\n        this.backend.getInstanceKey().then(instanceKey => {\n            // Store message in \"historic messages\" queue\n            let incoming = JSON.parse(message.body);\n\n            if(incoming.instanceKey == null){\n                //window.location.reload(false);\n            }\n            else if (incoming.instanceKey != instanceKey) {\n                if(incoming.requestType == 'save') {\n                    //TODO make sure that the backend returns assignment id\n                    incoming.assignmentList[0].previousAssignmentVehicle = incoming.previousAssignmentVehicle;\n                    for(let callback of this.peerSaveCallbacks) {\n                        callback(incoming.assignmentList[0]);\n                    }\n                }\n                else if(incoming.requestType == 'delete') {\n                    //TODO make sure that the backend returns assignment id\n                    for(let callback of this.peerDeleteCallbacks) {\n                        callback(incoming.assignmentId);\n                    }\n                }\n            } else {\n                if(this.remote_requests[incoming.transactionKey].requestType == 'save') {\n                    //TODO make sure that the backend returns assignment id\n                    this.remote_requests[incoming.transactionKey].assignmentId = incoming.assignmentId;\n                    if(incoming.transactionKey != null && this.remote_requests[incoming.transactionKey].callback != null) {\n                        this.remote_requests[incoming.transactionKey].callback(incoming);\n                    }\n                }\n                else if(this.remote_requests[incoming.transactionKey].requestType == 'fetch') {\n                    //TODO make sure that the backend returns assignment id\n                    this.remote_requests[incoming.transactionKey].assignmentId = incoming.assignmentId;\n                    if(incoming.transactionKey != null && this.remote_requests[incoming.transactionKey].callback != null) {\n                        this.remote_requests[incoming.transactionKey].callback(incoming.assignmentList);\n                    }\n                }\n                else if(this.remote_requests[incoming.transactionKey].requestType == 'delete') {\n                    this.remote_requests[incoming.transactionKey].assignmentId = incoming.assignmentId;\n                    if(incoming.transactionKey != null && this.remote_requests[incoming.transactionKey].callback != null) {\n                        this.remote_requests[incoming.transactionKey].callback(incoming.assignmentId);\n                    }\n                }\n\n                console.log(alert);\n\n                // this.alerts_collection.unshift(alert);\n                // this.alertsSubject.next(this.alerts_collection);\n\n                // Count it\n                //this.count++;\n\n                // Log it to the console\n                //console.log(message);\n            }\n        });\n    }\n\n    public addPeerSaveCallback(callback: Function) {\n        this.peerSaveCallbacks.push(callback);\n    }\n\n    public addPeerDeleteCallback(callback: Function) {\n        this.peerDeleteCallbacks.push(callback);\n    }\n\n    public suggestSwap (assignmentId: any, employee: any, employees: any[], callback: Function) {\n        this.backend.getInstanceKey().then(key => {\n            let payload: any = {\n                employees: employees,\n                employee:employee,\n                assignmentId:assignmentId,\n                //transactionKey: this.transactionKey,\n                instanceKey: this.backend.instanceKey,\n            };\n            this.http\n                .post('api/assignment/suggestSwap', JSON.stringify(payload), { headers: this.headers })\n                .toPromise().then((message: any)=>{\n                    let response;\n                    try{\n                        response = JSON.parse(message._body);\n                    }\n                    catch (e) {\n                        response = [];\n                    }\n                    for(let a of response) {\n                        let tmDate = new TmDate();\n                        tmDate.date.setTime(a.dateFrom);\n                        a.startTime = tmDate;\n                    }\n                    callback(response);\n                });\n        });\n    }\n\n    public suggestSwap3Way(assignmentId: any, employee: any, employees: any[], callback: Function) {\n        this.backend.getInstanceKey().then(key => {\n            let payload: any = {\n                employees: employees,\n                employee:employee,\n                assignmentId:assignmentId,\n                instanceKey: this.backend.instanceKey,\n            };\n            this.http\n                .post('api/assignment/suggestSwapTreeWay', JSON.stringify(payload), { headers: this.headers })\n                .toPromise().then((message: any)=>{\n                    let response;\n                    try{\n                        response = JSON.parse(message._body);\n                    }\n                    catch (e) {\n                        response = [];\n                    }\n                    for(let g of response) {\n                        for(let a of g) {\n                            let tmDate = new TmDate();\n                            tmDate.date.setTime(a.dateFrom);\n                            a.startTime = tmDate;\n                        }\n                    }\n                    callback(response);\n                });\n        });\n    }\n\n    public twoWaySwap (assignment1:any, assignment2: any, callback: Function) {\n        this.backend.getInstanceKey().then(key => {\n            let payload: any = {\n                assignment: assignment1,\n                assignment2: assignment2,\n                instanceKey: this.backend.instanceKey,\n            };\n            this.http\n                .post('api/assignment/twoWaySwap', JSON.stringify(payload), { headers: this.headers })\n                .toPromise().then((message: any)=>{\n                    let response = JSON.parse(message._body);\n                    callback(response.status);\n                });\n        });\n    }\n\n    public threeWaySwap (assignment1:any, assignment2: any, assignment3: any, callback: Function) {\n        this.backend.getInstanceKey().then(key => {\n            let payload: any = {\n                assignment: assignment1,\n                assignment2: assignment2,\n                assignment3: assignment3,\n                instanceKey: this.backend.instanceKey,\n            };\n            this.http\n                .post('api/assignment/treeWaySwap', JSON.stringify(payload), { headers: this.headers })\n                .toPromise().then((message: any)=>{\n                    let response = JSON.parse(message._body);\n                    callback(response.status);\n                });\n        });\n    }\n\n    public getSwapCart(callback: Function) {\n        this.backend.getInstanceKey().then(key => {\n            let payload: any = {\n            };\n            this.http\n                .post('api/assignment/getSwapCart', JSON.stringify(null), { headers: this.headers })\n                .toPromise().then((message: any)=>{\n                    let response = JSON.parse(message._body);\n                    callback(response);\n                });\n        });\n    }\n\n    public getUnconfirmed(callback: Function) {\n        this.backend.getInstanceKey().then(key => {\n            let payload: any = {\n            };\n            this.http\n                .post('api/assignment/getNotConfirmSwap', JSON.stringify(null), { headers: this.headers })\n                .toPromise().then((message: any)=>{\n                    let response = JSON.parse(message._body);\n                    callback(response);\n                });\n        });\n    }\n\n    public commitCart(cartItems: any[], callback: Function) {\n        this.backend.getInstanceKey().then(key => {\n            let payload: any = {\n                swapHistories: cartItems\n            };\n            this.http\n                .post('api/assignment/commitSwapCart', JSON.stringify(payload), { headers: this.headers })\n                .toPromise().then((message: any)=>{\n                    let response = JSON.parse(message._body);\n                    callback(response);\n                });\n        });\n    }\n\n    public confirmSwap(cartItems: any[], callback: Function) {\n        this.backend.getInstanceKey().then(key => {\n            let payload: any = {\n                swapHistories: cartItems\n            };\n            this.http\n                .post('api/assignment/confirmSwap', JSON.stringify(payload), { headers: this.headers })\n                .toPromise().then((message: any)=>{\n                    let response = JSON.parse(message._body);\n                    callback(response);\n                });\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/konstantin/svn/rota-client/src/app/service/schedule2.service.ts","import { Injectable } from '@angular/core'\nimport { Headers, Http, Response } from '@angular/http';\nimport 'rxjs/add/operator/toPromise';\n\nimport * as Rx from 'rxjs/Rx';\n\n// /** imports related to UserDataSource */\n// import { DataSource } from '@angular/cdk';\n\n/** Importing models */\nimport { Assignment } from  '../model/schedule';\n\nimport { Subscription } from 'rxjs/Subscription';\nimport { Observable } from 'rxjs/Observable';\nimport { StompService } from '@stomp/ng2-stompjs';\n//import { Message } from '@stomp/stompjs';\n\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\n\nimport { BackendService } from './backend.service';\n\n/* Import models */\n//import { Vehicle } from '../model/activity';\nimport { TmDate, TmLength } from '../model/tmdate';\n\n@Injectable()\nexport class Schedule3Service {\n\n    /** HTTP headers that we like to send with every request. Angular is going to merge them with browser's ones*/\n    private headers = new Headers({ 'Content-Type': 'application/json' });\n\n    // Stream of messages\n    private subscription: Subscription;\n    public messages: Observable<any>;\n\n    // Subscription status\n    public subscribed: boolean = false;\n    public subscribedPromise: Promise<boolean>;\n\n    private transactionKey = 0;\n    private remote_requests: any[] = [];\n\n    private peerSaveCallbacks: Function[] = [];\n    private peerDeleteCallbacks: Function[] = [];\n\n\n    //public alertsSubject: BehaviorSubject<Alert[]> = new BehaviorSubject<Alert[]>([]);\n    //public alerts_collection: Alert[] = [];\n\n    constructor(private http:Http,\n        private stompService: StompService,\n        private backend: BackendService) {\n        this._subscribe();\n    }\n\n    public _subscribe() {\n        if (this.subscribed) {\n            return;\n        }\n\n        // Stream of messages\n        this.backend.getInstanceKey().then(key=>{\n            this.messages = this.stompService.subscribe('/com/schedule/'+this.backend.instanceKey);\n            // Subscribe a function to be run on_next message\n            this.subscription = this.messages.subscribe(this.on_next);\n\n            this.subscribed = true;\n        })\n    }\n\n    //TODO update transaction keys accordingly\n    //    public addAssignment(assignment: any, callback: any){\n    //        //assignment.instanceKey = this.backend.instanceKey;\n    //\n    //        let payload = {\n    //            transactionKey: this.transactionKey,\n    //            instanceKey: this.backend.instanceKey,\n    //            ...assignment\n    //        };\n    //        payload.startTime = payload.startTime.getDateString();\n    //        payload.timeLength = payload.timeLength.seconds;\n    //\n    //        this.stompService.publish('/com/schedule/save', JSON.stringify(payload));\n    //\n    //        payload.callback = callback;\n    //        payload.requestType = 'save';\n    //        //payload.assignment = assignment;\n    //        this.remote_requests[this.transactionKey] = payload;//new Promise();\n    //        this.transactionKey++;\n    //        //return this.remote_requests[this.transactionKey];\n    //    }\n\n    public saveAssignment(assignment: any, callback: any) {\n        //assignment.instanceKey = this.backend.instanceKey;\n\n        //this.whenSubscribed().then({;\n        let payload = {\n            transactionKey: this.transactionKey,\n            instanceKey: this.backend.instanceKey,\n            ...assignment\n        };\n        payload.requestType = 'save';\n        payload.tag = 'overall'; // since the backend implementation is the same for all schedules\n        //\n\n        let isoTimeDate = assignment.startTime.get_ISO_8601_Date() + \" 00:00:00\";\n        payload.startTime = isoTimeDate;\n        payload.timeLength = payload.timeLength.seconds;\n        //payload.startTime = payload.startTime.getDateString();\n        //payload.timeLength = payload.timeLength.seconds;\n\n        this.stompService.publish('/com/schedule/save', JSON.stringify(payload));\n\n        payload.callback = callback;\n        //payload.assignment = assignment;\n        this.remote_requests[this.transactionKey] = payload;//new Promise();\n        this.transactionKey++;\n        //return this.remote_requests[this.transactionKey];\n    }\n\n    public fetchAssignments(startDate: TmDate, length: TmLength, activityIds: string[], callback: Function){\n        let activities: any[] = [];\n        for(let v of activityIds){\n            if(v != null){\n                activities.push({id:0, activity: {id: v}});\n            }\n        }\n\n        this.backend.getInstanceKey().then(key=>{\n            let payload: any = {\n                //transactionKey: this.transactionKey,\n                instanceKey: this.backend.instanceKey,\n                startTime: startDate.getDateString(),\n                timeLength: length.seconds,\n                requestType: 'fetch',\n                //assignmentActivities: activities\n            };\n            //this.stompService.publish('/com/schedule/fetch-shifts', JSON.stringify(payload));\n            this.http\n                .post('api/assignment/fetch', JSON.stringify(payload), { headers: this.headers })\n                .toPromise().then((message: any)=>{\n                    let response = JSON.parse(message._body);\n                    callback(response.assignmentList);\n                });\n\n\n            // payload.callback = callback;\n            // this.remote_requests[this.transactionKey] = payload;//new Promise();\n            // this.transactionKey++;\n        });\n    }\n\n    public fetchAssignmentsForUsers(startDate: TmDate, length: TmLength, userIds: any[], callback: Function) {\n        let users: any[] = [];\n        for(let v of userIds){\n            if(v != null){\n                users.push({id: v});\n            }\n        }\n\n        this.backend.getInstanceKey().then(key=>{\n            let payload: any = {\n                //transactionKey: this.transactionKey,\n                instanceKey: this.backend.instanceKey,\n                startTime: startDate.getDateString(),\n                timeLength: length.seconds,\n                requestType: 'fetch',\n                employees: users\n            };\n            //this.stompService.publish('/com/schedule/fetch-shifts', JSON.stringify(payload));\n            this.http\n                .post('api/assignment/fetch', JSON.stringify(payload), { headers: this.headers })\n                .toPromise().then((message: any)=>{\n                    let response = JSON.parse(message._body);\n                    //                    let assignmentList = []\n//                    for(let ass of response.assignmentList) {\n//                        if(ass.assignmentEmployees[0].employee.id == userIds[0]) {\n//                            assignmentList.push(ass);\n//                        }\n//                    }\n                    callback(response.assignmentList);\n                });\n\n\n            // payload.callback = callback;\n            // this.remote_requests[this.transactionKey] = payload;//new Promise();\n            // this.transactionKey++;\n        });\n    }\n\n    public moveEmployee(assignmentEmployees: any[], assignmentId: any, callback: Function){\n        let payload = {\n            assignmentId: assignmentId,\n            assignmentEmployees: assignmentEmployees,\n        };\n\n        this.http\n            .post('api/assignment/move', JSON.stringify(payload), { headers: this.headers })\n            .toPromise().then((message: any)=>{\n                let response = message.json(); \n                callback(response.assignmentList);\n            });\n        //    let activities: any[] = [];\n        //    for(let v of activityIds){\n        //      if(v != null){\n        //        activities.push({id:0, activity: {id: v}});\n        //      }\n        //    }\n        //\n        //    this.backend.getInstanceKey().then(key=>{\n        //      let payload: any = {\n        //        //transactionKey: this.transactionKey,\n        //        instanceKey: this.backend.instanceKey,\n        //        startTime: startDate.getDateString(),\n        //        timeLength: length.seconds,\n        //        requestType: 'fetch',\n        //        //assignmentActivities: activities\n        //      };\n        //      //this.stompService.publish('/com/schedule/fetch-shifts', JSON.stringify(payload));\n        //      this.http\n        //        .post('api/assignment/fetch', JSON.stringify(payload), { headers: this.headers })\n        //        .toPromise().then((message: any)=>{\n        //          let response = JSON.parse(message._body);\n        //          callback(response.assignmentList);\n        //        });\n        //\n        //\n        //      // payload.callback = callback;\n        //      // this.remote_requests[this.transactionKey] = payload;//new Promise();\n        //      // this.transactionKey++;\n        //    });\n    }\n\n    public deleteAssignment(assignmentId: number|string, callback: Function){\n        //assignment.instanceKey = this.backend.instanceKey;\n\n        let payload = {\n            transactionKey: this.transactionKey,\n            instanceKey: this.backend.instanceKey,\n            assignmentId: assignmentId,\n            callback: callback,\n            requestType: 'delete',\n        };\n        //payload.startTime = payload.startTime.getDateString();\n        //payload.timeLength = payload.timeLength.seconds;\n\n        this.stompService.publish('/com/schedule/delete', JSON.stringify(payload));\n\n        //payload.assignment = assignment;\n        this.remote_requests[this.transactionKey] = payload;//new Promise();\n        this.transactionKey++;\n        //return this.remote_requests[this.transactionKey];\n    }\n\n    public generateSchedule(startDate, length, callback: Function) {\n        let payload = {\n            startTime: startDate.getDateString(),\n            timeLength: length.seconds,\n        };\n\n        this.http\n            .post('api/assignment/generate', JSON.stringify(payload), { headers: this.headers })\n            .toPromise().then((message: any)=>{\n                let response = message.json(); \n                callback(response.assignmentList);\n            });\n    }\n\n    /** Consume a message from the _stompService */\n    public on_next = (message: any) => {\n        this.backend.getInstanceKey().then(instanceKey => {\n            // Store message in \"historic messages\" queue\n            let incoming = JSON.parse(message.body);\n\n            if(incoming.instanceKey == null){\n                //window.location.reload(false);\n            }\n            else if (incoming.instanceKey != instanceKey) {\n                if(incoming.requestType == 'save') {\n                    //TODO make sure that the backend returns assignment id\n                    incoming.assignmentList[0].previousAssignmentVehicle = incoming.previousAssignmentVehicle;\n                    for(let callback of this.peerSaveCallbacks) {\n                        callback(incoming.assignmentList[0]);\n                    }\n                }\n                else if(incoming.requestType == 'delete') {\n                    //TODO make sure that the backend returns assignment id\n                    for(let callback of this.peerDeleteCallbacks) {\n                        callback(incoming.assignmentId);\n                    }\n                }\n            } else {\n                if(this.remote_requests[incoming.transactionKey].requestType == 'save') {\n                    //TODO make sure that the backend returns assignment id\n                    this.remote_requests[incoming.transactionKey].assignmentId = incoming.assignmentId;\n                    if(incoming.transactionKey != null && this.remote_requests[incoming.transactionKey].callback != null) {\n                        this.remote_requests[incoming.transactionKey].callback(incoming);\n                    }\n                }\n                else if(this.remote_requests[incoming.transactionKey].requestType == 'fetch') {\n                    //TODO make sure that the backend returns assignment id\n                    this.remote_requests[incoming.transactionKey].assignmentId = incoming.assignmentId;\n                    if(incoming.transactionKey != null && this.remote_requests[incoming.transactionKey].callback != null) {\n                        this.remote_requests[incoming.transactionKey].callback(incoming.assignmentList);\n                    }\n                }\n                else if(this.remote_requests[incoming.transactionKey].requestType == 'delete') {\n                    this.remote_requests[incoming.transactionKey].assignmentId = incoming.assignmentId;\n                    if(incoming.transactionKey != null && this.remote_requests[incoming.transactionKey].callback != null) {\n                        this.remote_requests[incoming.transactionKey].callback(incoming.assignmentId);\n                    }\n                }\n\n                console.log(alert);\n\n                // this.alerts_collection.unshift(alert);\n                // this.alertsSubject.next(this.alerts_collection);\n\n                // Count it\n                //this.count++;\n\n                // Log it to the console\n                //console.log(message);\n            }\n        });\n    }\n\n    public addPeerSaveCallback(callback: Function) {\n        this.peerSaveCallbacks.push(callback);\n    }\n\n    public addPeerDeleteCallback(callback: Function) {\n        this.peerDeleteCallbacks.push(callback);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/konstantin/svn/rota-client/src/app/service/schedule3.service.ts","import { Injectable } from '@angular/core';\nimport {Criteria, CriteriaList, CriteriaType} from '../model/criteria';\nimport {Headers, Http} from '@angular/http';\nimport {HttpClientModule} from '@angular/common/http';\n\n@Injectable()\nexport class SkillTypeService {\n\n    private headers = new Headers({'Content-Type': 'application/json'});\n    public totalCount: number;\n\n    constructor(private http: Http) {\n\n    }\n\n    public getCriteriaTypeList(): Promise<CriteriaType[]> {\n        const url = 'api/employee/listCriteriaTypes';\n        let payload: {};\n        payload = {};\n        return this.http\n            .post(url, JSON.stringify(payload), {headers: this.headers})\n            .toPromise().then(response => {\n                const responseJson = response.json();\n                const responseList = new ResponseListCriteriaType(responseJson);\n                this.totalCount = responseJson.totalCount;\n                return Promise.resolve(responseJson.criteriaTypes);\n            })\n    }\n\n    public getCriteriaTypes(): Promise<CriteriaType[]> {\n        const url = 'api/employee/listCriteriaTypes';\n        let payload: {};\n        payload = {};\n        return this.http\n            .post(url, JSON.stringify(payload), {headers: this.headers})\n            .toPromise().then(response => {\n                const responseJson = response.json();\n                const responseList = new ResponseListCriteriaType(responseJson);\n                this.totalCount = responseJson.totalCount;\n                return responseJson.criteriaTypes;\n            })\n    }\n\n    public saveCriteriaType(criteriaType: CriteriaType): Promise<CriteriaType> {\n\n        const url = 'api/employee/saveCriteriaType';\n        let payload: {};\n        payload = criteriaType;\n        return this.http\n            .post(url, JSON.stringify(payload), {headers: this.headers})\n            .toPromise().then(response => {\n                const responseJson = response.json();\n                const responseList = new ResponseListCriteriaType(responseJson);\n                this.totalCount = responseJson.totalCount;\n                return Promise.resolve(responseJson);\n            })\n\n    }\n\n\n}\n\nclass ResponseListCriteriaType {\n\n    public criteriaTypes: CriteriaType[];\n    public totalCount: number;\n\n\n    constructor(Object:  any) {\n        this.criteriaTypes = Object.criteriaTypes;\n        this.totalCount = Object.totalCount;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/konstantin/svn/rota-client/src/app/service/skill-type.service.ts","import { Injectable } from '@angular/core';\nimport {Headers, Http} from '@angular/http';\nimport {Criteria, CriteriaType} from '../model/criteria';\nimport * as url from 'url';\n\n@Injectable()\nexport class SkillsService {\n\n    private headers = new Headers({'Content-Type': 'application/json'});\n    public totalCount: number;\n\n    constructor(private http: Http) {\n\n    }\n\n    public getCriteriaList(): Promise<Criteria[]> {\n        let url;\n        url = 'api/employee/listCriterias';\n\n        let payload: {};\n\n        return this.http\n            .post(url, JSON.stringify(payload), {headers: this.headers})\n            .toPromise().then(response => {\n                const responseJson = response.json();\n                this.totalCount = responseJson.totalCount;\n                return Promise.resolve(responseJson.criterias);\n            })\n    }\n\n    public getCriteriaByType(type: CriteriaType): Promise<Criteria[]> {\n        let url = 'api/employee/getCriteriasByType';\n        let payload: {};\n        payload = type;\n\n        return this.http\n            .post(url, JSON.stringify(payload), {headers: this.headers})\n            .toPromise().then(response => {\n                const responseJson = response.json();\n                return Promise.resolve(responseJson);\n            })\n    }\n\n\n    public saveCriteria(criteria: Criteria) {\n\n        const url = 'api/employee/saveCriteria';\n        let payload: {};\n        payload = criteria;\n        return this.http\n            .post(url, JSON.stringify(payload), {headers: this.headers})\n            .toPromise().then(response => {\n                const responseJson = response.json();\n\n                this.totalCount = responseJson.totalCount;\n                return Promise.resolve(responseJson);\n            })\n\n    }\n\n\n}\n\nclass ResponseListCriteria {\n\n    public criterias: Criteria[];\n    public totalCount: number;\n\n\n    constructor(Object:  any) {\n        this.criterias = Object.criterias;\n        this.totalCount = Object.totalCount;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /home/konstantin/svn/rota-client/src/app/service/skills.service.ts","import { Injectable } from '@angular/core'\nimport { Headers, Http, Response } from '@angular/http';\nimport 'rxjs/add/operator/toPromise';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Observable } from 'rxjs/Observable';\n/** imports related to UserDataSource */\nimport { DataSource } from '@angular/cdk/table';\nimport { LocalStorageService } from 'angular-2-local-storage';\n\n/** Importing models */\nimport { UserForm, User, Shift, Grade, TrainingLevel, Role, Criteria, CriteriaType } from  '../model/user';\nimport { BackendResult } from '../model/backend-result';\n\nimport { QuestionBase, DropdownQuestion, TextboxQuestion, MultiSelectQuestion } from '../model/question-base';\n\n@Injectable()\nexport class UserService {\n\n    /** HTTP headers that we like to send with every request. Angular is going to merge them with browser's ones*/\n    private headers = new Headers({ 'Content-Type': 'application/json' });\n\n    public usersSubject: BehaviorSubject<User[]> = new BehaviorSubject<User[]>([]);\n    public users_collection: User[] = [];\n\n    public totalCount = 18;\n\n    // We will cache the last result from the server.\n    private lastOffset = 0;\n    private lasPageSize = 0;\n\n    constructor(private http: Http, private localStorageService: LocalStorageService) {\n        this.restoreProperties(); // restore service's properties from local storage\n    }\n\n    /** Stores selected properties from this service to browser's local storage. NOTE Since Angular\n     *  service don't have destructors (at least as far as I know) we will call this method whenever\n     *  those properties are changed\n     */\n    private storeProperties() {\n        this.localStorageService.set(this.constructor.name + '.lastOffset', this.lastOffset);\n        this.localStorageService.set(this.constructor.name + '.lasPageSize', this.lasPageSize);\n        this.localStorageService.set(this.constructor.name + '.totalCount', this.totalCount);\n        //   this.localStorageService.set(this.constructor.name+'.users_collection', this.users_collection);\n    }\n\n    /** Restores selected properties from this service.   */\n    private restoreProperties() {\n        const lastOffset = <number>this.localStorageService.get(this.constructor.name + '.lastOffset');\n        if (lastOffset != null) {\n            this.lastOffset = lastOffset;\n        }\n\n        const lasPageSize = <number>this.localStorageService.get(this.constructor.name + '.lasPageSize');\n        if (lasPageSize != null) {\n            this.lasPageSize = lasPageSize;\n        }\n\n        const totalCount = <number>this.localStorageService.get(this.constructor.name + '.totalCount');\n        if (totalCount != null) {\n            this.totalCount = totalCount;\n        }\n\n        //   let users_collection = <User[]>this.localStorageService.get(this.constructor.name+'.users_collection');\n        //   if(users_collection != null) {\n        //         this.users_collection = users_collection;\n        //   }\n    }\n\n    /** Fetches users from backend.\n     *\n     *  @param offset number indicating how many rows to skip when returning users\n     *  @param limit  number indicating how many users to include in the result\n     *  @return Promise\n     */\n    public _getUsers(offset: number= 0, limit: number= 1000, grades=null): Promise<User[]> {\n        const url = 'api/employee/list';\n        let payload: {[key: string]: object|string};\n        payload = {\n            'grades' : grades,\n            'pager' : {\n                'offset': offset,\n                'limit': limit,\n            },\n        };\n\n        return this.http\n        .post(url, JSON.stringify(payload), { headers: this.headers })\n        .toPromise().then(response => {\n            const responseJson = response.json();\n            //let users = responseJson.userList as User[];\n            this.totalCount = responseJson.totalCount; //responseJson.totalCount as number;\n            const users = responseJson.employees;\n            //                user.color = user.color ? '#'+user.color : '';\n            return Promise.resolve(users)\n        })\n    }\n\n    /** Fetches criteria types from the backend\n     *\n     *  @return Promise\n     */\n    public _getCriteriaTypes(): Promise<CriteriaType[]> {\n        const url = 'api/employee/getCriteriaTypes';\n        //        let payload: {[key: string]: object|string};\n        //        payload = {\n        //        };\n\n        return this.http\n        .post(url, null, { headers: this.headers })\n        .toPromise().then(response => {\n            const responseJson = response.json();\n            //let users = responseJson.userList as User[];\n            //this.totalCount = responseJson.totalCount; //responseJson.totalCount as number;\n            //const users = responseJson.employees;\n            //                user.color = user.color ? '#'+user.color : '';\n            return Promise.resolve(responseJson)\n        })\n    }    \n\n    /** Fetches criteria types from the backend\n     *\n     *  @return Promise\n     */\n    public _getCriterias(): Promise<Criteria[]> {\n        const url = 'api/employee/getCriterias';\n        //        let payload: {[key: string]: object|string};\n        //        payload = {\n        //        };\n\n        return this.http\n        .post(url, null, { headers: this.headers })\n        .toPromise().then(response => {\n            const responseJson = response.json();\n            //let users = responseJson.userList as User[];\n            //this.totalCount = responseJson.totalCount; //responseJson.totalCount as number;\n            //const users = responseJson.employees;\n            //                user.color = user.color ? '#'+user.color : '';\n            return Promise.resolve(responseJson)\n        })\n    }\n\n    /** Retrieves users from the backend. The last result will be cached. So if the user navigates\n     *  somewhere else and comes back to the List Users page she would see the last fetched results\n     *  (without unpleasent blinking)\n     *\n     *  @param offset number indicating how many rows to skip when returning users\n     *  @param pageSize number indicating how many users to include in the result\n     *  @return Observable\n     */\n    retrieve(offset: number, pageSize: number): Observable<User[]> {\n        let promise: Promise<User[]>;\n        //        if (this.lastOffset == offset && this.lasPageSize == pageSize && this.users_collection.length > 0) {\n        //            promise = Promise.resolve(this.users_collection); // return cached result if the criteria passed\n        //            // through (offset, pageSize) is the same\n        //            // as the last one\n        //        }\n        //        else {\n        promise = this._getUsers(offset, pageSize);\n        this.lasPageSize = pageSize;\n        this.lastOffset = offset;\n        this.storeProperties();\n        //        }\n\n        return Observable.fromPromise(promise.then(users => {\n            const _users = users.slice();\n            this.users_collection.length = 0;\n            this.users_collection.splice(0, 0, ..._users);\n            //            this.users_collection.forEach((v) => {\n            //                v.workingDays.forEach((d) => {\n            //                    d.day = d.day.substr(0, 3);\n            //                });\n            //            });\n            return this.users_collection;\n        }));\n    }\n\n    public getEmptyFormUser(): Promise<UserForm> {\n        let user = new User({\n            id: 0,\n            grade: '',\n            trainingLevel: '',\n            role: '',\n            firstName: '',\n            lastName: '', \n            dateCreated: '', \n            color: '',\n            workingDays: [],\n            specialInterests: [], \n            supervisors: [], \n            phones: [], \n            emails: [], \n            employeeCriteria: []\n        });\n//\n//        let form: QuestionBase<any>[] = [];\n//        form.push(new TextboxQuestion({\n//            key: 'firstName',\n//            label: 'First Name',\n//            //value: user.firstName,\n//        }));\n//        form.push(new TextboxQuestion({\n//            key: 'lastName',\n//            label: 'Last Name',\n//            //value: user.lastName,\n//        }));\n//\n//        form.push(new TextboxQuestion({\n//            key: 'email',\n//            label: 'Email',\n//            //value: user.lastName,\n//        }));\n//\n//        form.push(new TextboxQuestion({\n//            key: 'phone',\n//            label: 'Phone',\n//            //value: user.lastName,\n//        }));\n//\n//        user.emails = [{email:'', type: 'work'}];\n//        user.phones = [{phone:'', type: 'work'}];\n\n        let userForm = UserForm.factory(user);\n        return Promise.resolve(userForm);\n    }\n\n    public getUserForm(userId: number): Promise<UserForm> {\n        return this.getUser(userId).then(user => {\n            let userForm = UserForm.factory(user);\n            return Promise.resolve(userForm);\n        });\n    }\n\n    public getUser(userId: number): Promise<User> {\n        const url = 'api/employee/list';\n        let payload: {[key: string]: number|object};\n\n        payload = {\n            pager: {\n                'offset': 0,\n                'limit': 1,\n            },\n            id: userId,\n        };\n\n        return this.http\n        .post(url, payload, { headers: this.headers })\n        .toPromise().then(response => {\n            const users = response.json().employees;\n            if (users == null) {\n                throw new Error('basi filma');\n            }\n            let user = new User(users[0]);\n            return Promise.resolve(user);\n        });\n    }\n\n    getActiveUser(): Promise<Response> {\n        const url = 'api/rmsUser';\n\n        return this.http\n        .post(url, null, { headers: this.headers })\n        .toPromise()\n    }\n\n    /** Save user to the server. If the *user* object doesn't have *id* property a new instance will be\n     *  recorded in database, otherwise (and if the id is valid) the existing user will be updated\n     */\n    saveUser(user: User): Promise<any> {\n        const url = 'api/employee/save';\n\n        //return Promise.resolve({status: 'ok'});\n\n        return this.http\n        .post(url, JSON.stringify(user), { headers: this.headers })\n        .toPromise().then(response => {\n            //return Promise.resolve({status: response.json().status});\n            return Promise.resolve({status: 'ok', ...response.json()});\n        }).catch(response => {\n            return Promise.resolve({status: 'failure'});\n        });\n    }\n\n\n    /** Fetches users completed checklists with a given severity. Users will be returned in the order they\n     *  completed checklists, newest first.\n     */\n    getReporters(severity: string): Promise<Response> {\n        const url = 'api/employee/reporters';\n        let payload: {[key: string]: number|object|string};\n\n        payload = {\n            pager: {\n                offset: 0,\n                limit: 8,\n            },\n            severity: severity,\n        };\n\n        return this.http\n        .post(url, payload, { headers: this.headers })\n        .toPromise()\n    }\n\n    fetchSpecialities(callback: Function) {\n        const url = 'api/employee/fetchSpecialities';\n\n        return this.http\n            .post(url, null, { headers: this.headers })\n            .toPromise().then(response => {\n                let specialities = response.json();\n                callback(specialities);\n            })\n    }\n\n    saveSpeciality(speciality: any, callback: Function) {\n        const url = 'api/employee/saveSpeciality';\n\n        return this.http\n            .post(url, JSON.stringify(speciality), { headers: this.headers })\n            .toPromise().then(response => {\n                response = response.json();\n                callback(response);\n            })\n    }\n\n    deleteSpeciality(specialityId, callback: Function) {\n        const url = 'api/employee/deleteSpeciality';\n\n        let payload: {[key: string]: object|string};\n        payload = {\n            id: specialityId \n        };\n\n        return this.http\n            .post(url, JSON.stringify(payload), { headers: this.headers })\n            .toPromise().then(response => {\n                response = response.json();\n                callback(response);\n            })\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/konstantin/svn/rota-client/src/app/service/user.service.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// /home/konstantin/svn/rota-client/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\n  enableProdMode();\nif (environment.production) {\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// /home/konstantin/svn/rota-client/src/main.ts"],"sourceRoot":"webpack:///"}